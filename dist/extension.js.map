{"version":3,"file":"extension.js","mappings":"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","sources":["webpack://kaiten-ext/webpack/runtime/require chunk loading","webpack://kaiten-ext/./node_modules/node-domexception/index.js","webpack://kaiten-ext/./src/api/kaiten.ts","webpack://kaiten-ext/./src/helpers/git.ts","webpack://kaiten-ext/./src/helpers/html.ts","webpack://kaiten-ext/./src/helpers/string.ts","webpack://kaiten-ext/./src/providers/task.provider.ts","webpack://kaiten-ext/./src/providers/time-log.provider.ts","webpack://kaiten-ext/./src/store/index.ts","webpack://kaiten-ext/./node_modules/web-streams-polyfill/dist/ponyfill.es2018.js","webpack://kaiten-ext/external commonjs \"vscode\"","webpack://kaiten-ext/external node-commonjs \"buffer\"","webpack://kaiten-ext/external node-commonjs \"node:process\"","webpack://kaiten-ext/external node-commonjs \"node:stream/web\"","webpack://kaiten-ext/external node-commonjs \"worker_threads\"","webpack://kaiten-ext/./node_modules/fetch-blob/streams.cjs","webpack://kaiten-ext/./node_modules/fetch-blob/file.js","webpack://kaiten-ext/external node-commonjs \"node:fs\"","webpack://kaiten-ext/external node-commonjs \"node:path\"","webpack://kaiten-ext/./node_modules/fetch-blob/from.js","webpack://kaiten-ext/./node_modules/fetch-blob/index.js","webpack://kaiten-ext/./node_modules/formdata-polyfill/esm.min.js","webpack://kaiten-ext/external node-commonjs \"node:http\"","webpack://kaiten-ext/external node-commonjs \"node:https\"","webpack://kaiten-ext/external node-commonjs \"node:zlib\"","webpack://kaiten-ext/external node-commonjs \"node:stream\"","webpack://kaiten-ext/external node-commonjs \"node:buffer\"","webpack://kaiten-ext/./node_modules/data-uri-to-buffer/dist/index.js","webpack://kaiten-ext/external node-commonjs \"node:util\"","webpack://kaiten-ext/./node_modules/node-fetch/src/errors/base.js","webpack://kaiten-ext/./node_modules/node-fetch/src/errors/fetch-error.js","webpack://kaiten-ext/./node_modules/node-fetch/src/utils/is.js","webpack://kaiten-ext/./node_modules/node-fetch/src/body.js","webpack://kaiten-ext/./node_modules/node-fetch/src/headers.js","webpack://kaiten-ext/./node_modules/node-fetch/src/utils/is-redirect.js","webpack://kaiten-ext/./node_modules/node-fetch/src/response.js","webpack://kaiten-ext/external node-commonjs \"node:url\"","webpack://kaiten-ext/external node-commonjs \"node:net\"","webpack://kaiten-ext/./node_modules/node-fetch/src/utils/referrer.js","webpack://kaiten-ext/./node_modules/node-fetch/src/request.js","webpack://kaiten-ext/./node_modules/node-fetch/src/utils/get-search.js","webpack://kaiten-ext/./node_modules/node-fetch/src/errors/abort-error.js","webpack://kaiten-ext/./node_modules/node-fetch/src/index.js","webpack://kaiten-ext/webpack/bootstrap","webpack://kaiten-ext/webpack/runtime/define property getters","webpack://kaiten-ext/webpack/runtime/ensure chunk","webpack://kaiten-ext/webpack/runtime/get javascript chunk filename","webpack://kaiten-ext/webpack/runtime/hasOwnProperty shorthand","webpack://kaiten-ext/webpack/runtime/make namespace object","webpack://kaiten-ext/./src/extension.ts"],"sourcesContent":["// no baseURI\n\n// object to store loaded chunks\n// \"1\" means \"loaded\", otherwise not loaded yet\nvar installedChunks = {\n\t179: 1\n};\n\n// no on chunks loaded\n\nvar installChunk = (chunk) => {\n\tvar moreModules = chunk.modules, chunkIds = chunk.ids, runtime = chunk.runtime;\n\tfor(var moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\tfor(var i = 0; i < chunkIds.length; i++)\n\t\tinstalledChunks[chunkIds[i]] = 1;\n\n};\n\n// require() chunk loading for javascript\n__webpack_require__.f.require = (chunkId, promises) => {\n\t// \"1\" is the signal for \"already loaded\"\n\tif(!installedChunks[chunkId]) {\n\t\tif(true) { // all chunks have JS\n\t\t\tinstallChunk(require(\"./\" + __webpack_require__.u(chunkId)));\n\t\t} else installedChunks[chunkId] = 1;\n\t}\n};\n\n// no external install chunk\n\n// no HMR\n\n// no HMR manifest","/*! node-domexception. MIT License. Jimmy Wärting <https://jimmy.warting.se/opensource> */\n\nif (!globalThis.DOMException) {\n  try {\n    const { MessageChannel } = require('worker_threads'),\n    port = new MessageChannel().port1,\n    ab = new ArrayBuffer()\n    port.postMessage(ab, [ab, ab])\n  } catch (err) {\n    err.constructor.name === 'DOMException' && (\n      globalThis.DOMException = err.constructor\n    )\n  }\n}\n\nmodule.exports = globalThis.DOMException\n","import fetch from \"node-fetch\";\r\nimport { AddTimeLogDataType, AddTimeLogResponseDataType, KaitenCardType, KaitenRoleType, KaitenTimeLogType, UpdateTimeLogDataType, UpdateTimeLogResponseDataType } from \"./kaiten.dto\";\r\n\r\nconst SUCCESS_STATUSES = [200, 201];\r\n\r\nexport class KaitenApiService {\r\n  private baseUrl: string;\r\n  private apiKey: string;\r\n  constructor(\r\n    baseUrl: string,\r\n    apiKey: string\r\n  ) {\r\n    this.apiKey = apiKey;\r\n    this.baseUrl = baseUrl;\r\n  }\r\n\r\n  async getTask(id: string) {\r\n    try {\r\n      const result = await this.request<KaitenCardType>(\r\n        this.baseUrl + '/api/latest/cards/' + id,\r\n        this.kaitenOptions({\r\n          method: 'GET'\r\n        })\r\n      );\r\n\r\n      return { error: false, data: result };\r\n    } catch (error) {\r\n      return {\r\n        error: true,\r\n        errorMessage: error as string\r\n      };\r\n    }\r\n  }\r\n\r\n  async getRoles() {\r\n    try {\r\n      const result = await this.request<KaitenRoleType[]>(\r\n        this.baseUrl + '/api/latest/user-roles',\r\n        this.kaitenOptions({\r\n          method: 'GET'\r\n        })\r\n      );\r\n\r\n      return { error: false, data: result };\r\n    } catch (error) {\r\n      return {\r\n        error: true,\r\n        errorMessage: error as string\r\n      };\r\n    }\r\n  }\r\n\r\n  async getTimeLogs(taskId: string) {\r\n    try {\r\n      const result = await this.request<KaitenTimeLogType[]>(\r\n        this.baseUrl + '/api/latest/cards/' + taskId + '/time-logs',\r\n        this.kaitenOptions({\r\n          method: 'GET'\r\n        })\r\n      );\r\n\r\n      return { error: false, data: result };\r\n    } catch (error) {\r\n      return {\r\n        error: true,\r\n        errorMessage: error as string\r\n      };\r\n    }\r\n  }\r\n\r\n  async addTimeLog(taskId: string, payload: AddTimeLogDataType) {\r\n    try {\r\n      const result = await this.request<AddTimeLogResponseDataType>(\r\n        this.baseUrl + '/api/latest/cards/' + taskId + '/time-logs',\r\n        this.kaitenOptions({\r\n          method: 'POST',\r\n          body: JSON.stringify(payload)\r\n        })\r\n      );\r\n\r\n      return { error: false, data: result };\r\n    } catch (error) {\r\n      return {\r\n        error: true,\r\n        errorMessage: error as string\r\n      };\r\n    }\r\n  }\r\n\r\n  async updateTimeLog(taskId: string, logId: string, payload: UpdateTimeLogDataType) {\r\n    try {\r\n      const result = await this.request<UpdateTimeLogResponseDataType>(\r\n        this.baseUrl + '/api/latest/cards/' + taskId + '/time-logs/' + logId,\r\n        this.kaitenOptions({\r\n          method: 'PATCH',\r\n          body: JSON.stringify(payload)\r\n        })\r\n      );\r\n\r\n      return { error: false, data: result };\r\n    } catch (error) {\r\n      return {\r\n        error: true,\r\n        errorMessage: error as string\r\n      };\r\n    }\r\n  }\r\n\r\n  async removeTimeLog(taskId: string, logId: string) {\r\n    try {\r\n      const result = await this.request<{ id: number }>(\r\n        this.baseUrl + '/api/latest/cards/' + taskId + '/time-logs/' + logId,\r\n        this.kaitenOptions({\r\n          method: 'DELETE'\r\n        })\r\n      );\r\n\r\n      return { error: false, data: result };\r\n    } catch (error) {\r\n      return {\r\n        error: true,\r\n        errorMessage: error as string\r\n      };\r\n    }\r\n  }\r\n\r\n  request<T>(url: string, options: Record<string, any>): Promise<T> {\r\n    return new Promise((resolve, reject) => {\r\n      try {\r\n        fetch(url, options).then(async (res) => {\r\n          if (res.status === 401) {\r\n            reject(\r\n              `${res.status} ${res.statusText}`\r\n                + (res.url.includes('kaiten') ? '. Проверьте или обновите Kaiten api key' : '')\r\n            );\r\n          } else {\r\n            let data: any;\r\n            try {\r\n              data = await res.json();\r\n            } catch (error) {\r\n              data = {};\r\n            }\r\n            if (!SUCCESS_STATUSES.includes(res.status)) {\r\n              reject(data.message || data.error || `${res.status} ${res.statusText}. URL: ${url}`);\r\n            } else {\r\n              resolve(data);\r\n            }\r\n          }\r\n        }).catch(err => {\r\n          console.log(err);\r\n          reject(`${err.message}. URL: ${url}`);\r\n          return err;\r\n        })\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n      \r\n    });\r\n  }\r\n  \r\n  kaitenOptions(params = {}) {\r\n    return {\r\n      credentials: 'include',\r\n      headers: {\r\n        'Content-Type': 'application/json;charset=utf-8',\r\n        Accept: 'application/json',\r\n        Authorization: 'Bearer ' + this.apiKey\r\n      },\r\n      ...params\r\n    };\r\n  }\r\n}","import * as vscode from 'vscode';\r\nimport { API as BuiltInGitApi, GitExtension, Repository } from '../@types/git';\r\n\r\nexport async function getBuiltInGitApi(): Promise<BuiltInGitApi | undefined> {\r\n  try {\r\n    const extension = vscode.extensions.getExtension('vscode.git') as vscode.Extension<GitExtension>;\r\n    if (extension !== undefined) {\r\n        const gitExtension = extension.isActive ? extension.exports : await extension.activate();\r\n\r\n        return gitExtension.getAPI(1);\r\n    }\r\n  } catch {}\r\n\r\n  return undefined;\r\n}","export const Input = (\r\n  name: string,\r\n  label: string,\r\n  inputHtml: string,\r\n  className?: string\r\n) => `\r\n<div class=\"input-container ${className || ''}\">\r\n  ${inputHtml}\r\n  <fieldset aria-hidden=\"true\" class=\"input-fieldset\">\r\n    <legend class=\"input-legend\">\r\n      <span>\r\n        ${label}\r\n      </span>\r\n    </legend>\r\n  </fieldset>\r\n  <label class=\"input-label\" for=\"${name}\">${label}</label>\r\n</div>\r\n`;","export function generateKaitenLink(base: string, branchName: string): string | null {\r\n  const result = /(\\d{7,8})/.exec(branchName);\r\n  if (!result) return null;\r\n  return `${base}/${result[1]}`;\r\n}\r\n\r\nexport const formatUrl = (url?: string) => {\r\n  return url?.endsWith('/') ? url.slice(0, url.length - 1) : url;\r\n};\r\n\r\nexport const convertKaitenDescription = (desc: string) => {\r\n  return desc.replaceAll(/\\[([\\W\\w]*)\\]\\(([\\W\\w]*)\\)/g, (a, b, c) => { \r\n    return `<a href=\"${c}\">${b || c}</a>`;\r\n  })\r\n};\r\n\r\nexport function getNonce() {\r\n\tlet text = '';\r\n\tconst possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n\tfor (let i = 0; i < 32; i++) {\r\n\t\ttext += possible.charAt(Math.floor(Math.random() * possible.length));\r\n\t}\r\n\treturn text;\r\n}\r\n/**\r\n * \r\n * @param date - for example 2023-06-19 (YYYY-MM-DD)\r\n * @returns date in format DD.MM.YYYY\r\n */\r\nexport const formatDate = (date: string): string => {\r\n  const regCheck = /(\\d{4,})-(\\d{2,})-(\\d{2,})/g.exec(date);\r\n  if (!regCheck) {\r\n    console.log('date format is not YYYY-MM-DD');\r\n    return date;\r\n  }\r\n  const [, year, month, day] = regCheck;\r\n  return `${day}.${month}.${year}`;\r\n};\r\n\r\n/**\r\n * \r\n * @param time - for example 320\r\n * @returns time in format {x} ч. {y} мин.\r\n */\r\nexport const formatTime = (time: number): string => {\r\n  const minutes = time % 60;\r\n  const hours = Math.floor(time / 60);\r\n  return `${hours ? hours + ' ч. ' : ''} ${minutes ? minutes + ' мин. ' : ''}`;\r\n};","import * as vscode from 'vscode';\r\nimport { API as BuiltInGitApi, GitExtension, Repository } from '../@types/git';\r\nimport { convertKaitenDescription, generateKaitenLink, getNonce } from '../helpers/string';\r\nimport { Event } from 'vscode';\r\nimport { KaitenApiService } from '../api/kaiten';\r\nimport { KaitenCardType } from '../api/kaiten.dto';\r\n\r\nexport class KaitenTaskViewProvider implements vscode.WebviewViewProvider {\r\n\r\n\tpublic static readonly viewType = 'kaiten.task';\r\n\r\n\tprivate _view?: vscode.WebviewView;\r\n\r\n\tprivate taskData: KaitenCardType | null = null;\r\n\r\n\tconstructor(\r\n\t\tprivate readonly _extensionUri: vscode.Uri\r\n\t) { }\r\n\r\n\tpublic async resolveWebviewView(\r\n\t\twebviewView: vscode.WebviewView,\r\n\t\tcontext: vscode.WebviewViewResolveContext,\r\n\t\t_token: vscode.CancellationToken,\r\n\t) {\r\n\t\tthis._view = webviewView;\r\n\r\n\t\twebviewView.webview.options = {\r\n\t\t\t// Allow scripts in the webview\r\n\t\t\tenableScripts: true,\r\n\r\n\t\t\tlocalResourceRoots: [\r\n\t\t\t\tthis._extensionUri\r\n\t\t\t]\r\n\t\t};\r\n\r\n\t\twebviewView.webview.html = this._getHtmlForWebview(webviewView.webview);\r\n\r\n\t\twebviewView.webview.onDidReceiveMessage(data => {\r\n\t\t\tswitch (data.type) {\r\n\t\t\t\tcase 'colorSelected':\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tvscode.window.activeTextEditor?.insertSnippet(new vscode.SnippetString(`#${data.value}`));\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\twebviewView.onDidChangeVisibility(() => {\r\n\t\t\twebviewView.webview.html = webviewView.visible ? this._getHtmlForWebview(webviewView.webview) : '';\r\n\t\t});\r\n\t}\r\n\r\n\tpublic updateTaskData(data: KaitenCardType) {\r\n\t\tthis.taskData = data;\r\n\t\tif (this._view) {\r\n\t\t\tconst taskInfoHtml = this._generateTaskInfoHtml(data);\r\n\t\t\tthis._view.show?.(true); // `show` is not implemented in 1.49 but is for 1.50 insiders\r\n\t\t\tthis._view.webview.postMessage({ type: 'updateTaskData', data: taskInfoHtml });\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _getHtmlForWebview(webview: vscode.Webview) {\r\n\t\t// Get the local path to main script run in the webview, then convert it to a uri we can use in the webview.\r\n\t\tconst scriptUri = webview.asWebviewUri(vscode.Uri.joinPath(this._extensionUri, 'mediaTask', 'main.js'));\r\n\r\n\t\t// Do the same for the stylesheet.\r\n\t\tconst styleResetUri = webview.asWebviewUri(vscode.Uri.joinPath(this._extensionUri, 'mediaTask', 'reset.css'));\r\n\t\tconst styleVSCodeUri = webview.asWebviewUri(vscode.Uri.joinPath(this._extensionUri, 'mediaTask', 'vscode.css'));\r\n\t\tconst styleMainUri = webview.asWebviewUri(vscode.Uri.joinPath(this._extensionUri, 'mediaTask', 'main.css'));\r\n\r\n\t\t// Use a nonce to only allow a specific script to be run.\r\n\t\tconst nonce = getNonce();\r\n\r\n\t\treturn `<!DOCTYPE html>\r\n\t\t\t<html lang=\"en\">\r\n\t\t\t<head>\r\n\t\t\t\t<meta charset=\"UTF-8\">\r\n\r\n\t\t\t\t<!--\r\n\t\t\t\t\tUse a content security policy to only allow loading styles from our extension directory,\r\n\t\t\t\t\tand only allow scripts that have a specific nonce.\r\n\t\t\t\t\t(See the 'webview-sample' extension sample for img-src content security policy examples)\r\n\t\t\t\t-->\r\n\t\t\t\t<meta http-equiv=\"Content-Security-Policy\" content=\"default-src 'none'; style-src ${webview.cspSource}; script-src 'nonce-${nonce}';\">\r\n\r\n\t\t\t\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n\r\n\t\t\t\t<link href=\"${styleResetUri}\" rel=\"stylesheet\">\r\n\t\t\t\t<link href=\"${styleVSCodeUri}\" rel=\"stylesheet\">\r\n\t\t\t\t<link href=\"${styleMainUri}\" rel=\"stylesheet\">\r\n\r\n\t\t\t\t<title>KAiten task</title>\r\n\t\t\t</head>\r\n\t\t\t<body>\r\n\t\t\t\t<div id=\"kaiten-task-info\">${this.taskData ? this._generateTaskInfoHtml(this.taskData) : ''}</div>\r\n\t\t\t\t<script nonce=\"${nonce}\" src=\"${scriptUri}\"></script>\r\n\t\t\t</body>\r\n\t\t\t</html>`;\r\n\t}\r\n\r\n\tprivate _generateTaskInfoHtml(data: KaitenCardType): string {\r\n\t\tconst description: string[] = [];\r\n\t\tdata.description?.split(\"\\n\\n\").forEach(item => {\r\n\t\t\tif (item) description.push(`<p class=\"desc__list-item\">${convertKaitenDescription(item)}</p>`);\r\n\t\t});\r\n\t\tconst descHtml = description.length ? `<div class=\"desc__list\">${description.join(\"\\n\")}</div>` : '';\r\n\t\treturn `\r\n\t\t<h4 class=\"task-title\">${data.title}</h4>\r\n\t\t${descHtml}\r\n\t\t`;\r\n\t}\r\n}\r\n\r\n","import * as vscode from 'vscode';\r\nimport { API as BuiltInGitApi, GitExtension, Repository } from '../@types/git';\r\nimport { convertKaitenDescription, formatDate, formatTime, generateKaitenLink, getNonce } from '../helpers/string';\r\nimport { Event } from 'vscode';\r\nimport { KaitenApiService } from '../api/kaiten';\r\nimport { KaitenCardType, KaitenRoleType, KaitenTimeLogType } from '../api/kaiten.dto';\r\nimport { KaitenTaskStore } from '../store';\r\nimport { Input } from '../helpers/html';\r\n\r\nexport class KaitenTimeLogViewProvider implements vscode.WebviewViewProvider {\r\n\r\n\tpublic static readonly viewType = 'kaiten.time-log';\r\n\r\n\tprivate _view?: vscode.WebviewView;\r\n\r\n\tget view() {\r\n\t\treturn this._view;\r\n\t}\r\n\r\n\tprivate store: KaitenTaskStore;\r\n\r\n\tconstructor(\r\n\t\tprivate readonly _extensionUri: vscode.Uri,\r\n\t\tstore: KaitenTaskStore\r\n\t) {\r\n\t\tthis.store = store;\r\n  }\r\n\r\n\tpublic async resolveWebviewView(\r\n\t\twebviewView: vscode.WebviewView,\r\n\t\tcontext: vscode.WebviewViewResolveContext,\r\n\t\t_token: vscode.CancellationToken,\r\n\t) {\r\n\t\tcontext\r\n\t\tthis._view = webviewView;\r\n\r\n\t\twebviewView.webview.options = {\r\n\t\t\t// Allow scripts in the webview\r\n\t\t\tenableScripts: true,\r\n\r\n\t\t\tlocalResourceRoots: [\r\n\t\t\t\tthis._extensionUri\r\n\t\t\t]\r\n\t\t};\r\n\r\n\t\twebviewView.webview.html = this._getHtmlForWebview(webviewView.webview);\r\n\t\tconst $this = this;\r\n\t\twebviewView.webview.onDidReceiveMessage(data => {\r\n\t\t\tswitch (data.type) {\r\n\t\t\t\tcase 'addTimeLog':\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$this.store.addTimeLog(data.payload);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\tcase 'updateTimeLog':\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$this.store.updateTimeLog(data.payload);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\tcase 'removeTimeLog':\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$this.store.removeTimeLog(data.payload);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\tcase 'editTimeLog':\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$this.editTimeLog(data.payload);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\twebviewView.onDidChangeVisibility(() => {\r\n\t\t\twebviewView.webview.html = webviewView.visible ? this._getHtmlForWebview(webviewView.webview) : '';\r\n\t\t});\r\n\t}\r\n\r\n\tpublic updateTimeLogsData(data: KaitenTimeLogType[]) {\r\n\t\tif (this._view) {\r\n\t\t\tconst timeLogListHtml = this._generateTimeLogListHtml(data);\r\n\t\t\tthis._view.show?.(true); // `show` is not implemented in 1.49 but is for 1.50 insiders\r\n\t\t\tthis._view.webview.postMessage({ type: 'updateTimeLogsData', data: timeLogListHtml });\r\n\t\t}\r\n\t}\r\n\r\n\tpublic updateRolesData(data: KaitenRoleType[]) {\r\n\t\tif (this._view) {\r\n\t\t\tconst rolesOptionsHtml = this._generateRoleOptionsHtml(data);\r\n\t\t\tthis._view.show?.(true); // `show` is not implemented in 1.49 but is for 1.50 insiders\r\n\t\t\tthis._view.webview.postMessage({ type: 'updateRolesData', data: rolesOptionsHtml });\r\n\t\t}\r\n\t}\r\n\r\n\tprivate editTimeLog(logId: string) {\r\n\t\tconst timeLog = this.store.timeLogs.find(item => item.id === Number(logId));\r\n\t\tif (!timeLog) return;\r\n\t\tif (this._view) {\r\n\t\t\tthis._view.show?.(true); // `show` is not implemented in 1.49 but is for 1.50 insiders\r\n\t\t\tthis._view.webview.postMessage({ type: 'setEditedTimeLog', data: timeLog });\r\n\t\t}\r\n\t}\r\n\r\n\tpublic clearForm() {\r\n\t\tif (this._view) {\r\n\t\t\tthis._view.show?.(true); // `show` is not implemented in 1.49 but is for 1.50 insiders\r\n\t\t\tthis._view.webview.postMessage({ type: 'clearForm' });\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _getHtmlForWebview(webview: vscode.Webview) {\r\n\t\t// Get the local path to main script run in the webview, then convert it to a uri we can use in the webview.\r\n\t\tconst scriptUri = webview.asWebviewUri(vscode.Uri.joinPath(this._extensionUri, 'mediaTimeLogs', 'main.js'));\r\n\r\n\t\tconst styleResetUri = webview.asWebviewUri(vscode.Uri.joinPath(this._extensionUri, 'mediaTimeLogs', 'reset.css'));\r\n\t\tconst styleVSCodeUri = webview.asWebviewUri(vscode.Uri.joinPath(this._extensionUri, 'mediaTimeLogs', 'vscode.css'));\r\n\t\tconst styleMainUri = webview.asWebviewUri(vscode.Uri.joinPath(this._extensionUri, 'mediaTimeLogs', 'main.css'));\r\n\t\tconst styleInputUri = webview.asWebviewUri(vscode.Uri.joinPath(this._extensionUri, 'mediaTimeLogs', 'input.css'));\r\n\t\t// const codiconsUri = webview.asWebviewUri(vscode.Uri.joinPath(this._extensionUri, 'node_modules', '@vscode/codicons', 'dist', 'codicon.css'));\r\n\t\tconst codiconsUri = webview.asWebviewUri(vscode.Uri.joinPath(this._extensionUri, 'assets', 'codicon.css'));\r\n\r\n\t\tconst nonce = getNonce();\r\n\r\n\t\tconst forDate = Input(\r\n\t\t\t'for_date',\r\n\t\t\t'Дата',\r\n\t\t\t'<input type=\"date\" name=\"for_date\" placeholder=\"Выберите дату\" />'\r\n\t\t);\r\n\r\n\t\tconst timeSpent = Input(\r\n\t\t\t'time_spent',\r\n\t\t\t'Затрачено времени',\r\n\t\t\t'<input type=\"number\" name=\"time_spent\" placeholder=\"в минутах\" />'\r\n\t\t);\r\n\r\n\t\tconst roleSelect = Input(\r\n\t\t\t'role_id',\r\n\t\t\t'Роль',\r\n\t\t\t`\r\n\t\t\t\t<select\r\n\t\t\t\t\tname=\"role_id\"\r\n\t\t\t\t\tid=\"role_select\"\r\n\t\t\t\t\tclass=\"monaco-select-box monaco-select-box-dropdown-padding setting-control-focus-target\"\r\n\t\t\t\t>\t\r\n\t\t\t\t\t${this._generateRoleOptionsHtml(this.store.userRoles)}\r\n\t\t\t\t</select>\r\n\t\t\t`,\r\n\t\t\t'select-container'\r\n\t\t);\r\n\t\t\r\n\t\tconst comment = Input(\r\n\t\t\t'comment',\r\n\t\t\t'Комментарий',\r\n\t\t\t'<textarea name=\"comment\"></textarea>',\r\n\t\t\t'cont-comment'\r\n\t\t);\r\n\r\n\t\treturn `<!DOCTYPE html>\r\n\t\t\t<html lang=\"en\">\r\n\t\t\t<head>\r\n\t\t\t\t<meta charset=\"UTF-8\">\r\n\r\n\t\t\t\t<!--\r\n\t\t\t\t\tUse a content security policy to only allow loading styles from our extension directory,\r\n\t\t\t\t\tand only allow scripts that have a specific nonce.\r\n\t\t\t\t\t(See the 'webview-sample' extension sample for img-src content security policy examples)\r\n\t\t\t\t-->\r\n\t\t\t\t<meta http-equiv=\"Content-Security-Policy\" content=\"default-src 'none'; font-src ${webview.cspSource}; style-src ${webview.cspSource}; script-src 'nonce-${nonce}';\">\r\n\t\t\t\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n\r\n\t\t\t\t<link href=\"${styleResetUri}\" rel=\"stylesheet\">\r\n\t\t\t\t<link href=\"${styleVSCodeUri}\" rel=\"stylesheet\">\r\n\t\t\t\t<link href=\"${styleInputUri}\" rel=\"stylesheet\">\r\n\t\t\t\t<link href=\"${styleMainUri}\" rel=\"stylesheet\">\r\n\t\t\t\t<link href=\"${codiconsUri}\" rel=\"stylesheet\">\r\n\r\n\t\t\t\t<title>KAiten task</title>\r\n\t\t\t</head>\r\n\t\t\t<body>\r\n\t\t\t\t<form id=\"log-form\">\r\n\t\t\t\t\t<div class=\"top-fields\">\r\n\t\t\t\t\t\t${roleSelect}\r\n\t\t\t\t\t\t${timeSpent}\r\n\t\t\t\t\t\t${forDate}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t${comment}\r\n\t\t\t\t\t<div class=\"form-buttons\">\r\n\t\t\t\t\t\t<button id=\"create-btn\" >Создать</button>\r\n\t\t\t\t\t\t<button id=\"cancel-btn\" class=\"kaiten-hidden\" >Отменить</button>\r\n\t\t\t\t\t\t<button id=\"save-btn\" class=\"kaiten-hidden\" >Сохранить</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</form>\r\n\t\t\t\t<ul id=\"kaiten-time-logs-list\">${this.store.timeLogs.length ? this._generateTimeLogListHtml(this.store.timeLogs) : ''}</ul>\r\n\t\t\t\t<script nonce=\"${nonce}\" src=\"${scriptUri}\"></script>\r\n\t\t\t</body>\r\n\t\t\t</html>`;\r\n\t}\r\n\r\n\tprivate _generateTimeLogListHtml(data: KaitenTimeLogType[]): string {\r\n\t\treturn [...data].sort((a, b) => new Date(a.for_date) > new Date(b.for_date) ? -1 : 1).map(item => `\r\n\t\t\t<li class=\"time-log__item\" data-id=\"${item.id}\">\r\n\t\t\t\t<div class=\"top-block\">\r\n\t\t\t\t\t<span class=\"time-log__item-for_date\" title=\"Дата: ${formatDate(item.for_date)}\">${formatDate(item.for_date)}</span>\r\n\t\t\t\t\t<span class=\"time-log__item-role_name\" title=\"Роль: ${item.role.name}\">${item.role.name}</span>\r\n\t\t\t\t\t<span\r\n\t\t\t\t\t\tclass=\"time-log__item-time_spent\"\r\n\t\t\t\t\t\ttitle=\"Затрачено времени: ${formatTime(item.time_spent)}\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t${formatTime(item.time_spent)}\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"bottom-block\">\r\n\t\t\t\t\t<span\r\n\t\t\t\t\t\tclass=\"time-log__item-full_name\"\r\n\t\t\t\t\t\ttitle=\"${item.author.full_name}\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t${item.author.full_name}\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<span class=\"time-log__item-comment\" title=\"${item.comment}\">${item.comment}</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"delete-btn btn\">\r\n\t\t\t\t\t<i class=\"codicon codicon-close\"></i>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"edit-btn btn\">\r\n\t\t\t\t\t<i class=\"codicon codicon-edit\"></i>\r\n\t\t\t\t</div>\r\n\t\t\t</li>\r\n\t\t`).join(\"\\n\");\r\n\t}\r\n\r\n\tprivate _generateRoleOptionsHtml(data: KaitenRoleType[]): string {\r\n\t\treturn data.map(item => `\r\n\t\t\t<option label=\"${item.name}\">${item.id}</option>\r\n\t\t`).join(\"\\n\");\r\n\t}\r\n\r\n}\r\n","import { KaitenApiService } from \"../api/kaiten\";\r\nimport { KaitenTaskViewProvider } from \"../providers/task.provider\";\r\nimport * as vscode from 'vscode';\r\nimport { API as BuiltInGitApi, GitExtension, Repository } from '../@types/git';\r\nimport { getBuiltInGitApi } from \"../helpers/git\";\r\nimport { generateKaitenLink } from \"../helpers/string\";\r\nimport { AddTimeLogDataType, KaitenCardType, KaitenRoleType, KaitenTimeLogType, UpdateTimeLogDataType } from \"../api/kaiten.dto\";\r\nimport { KaitenTimeLogViewProvider } from \"../providers/time-log.provider\";\r\n\r\ntype ViewType = typeof KaitenTaskViewProvider['viewType'] | typeof KaitenTimeLogViewProvider['viewType'];\r\n\r\nexport class KaitenTaskStore {\r\n\r\n  private baseUrl: string;\r\n  \r\n\tprivate kaitenApi: KaitenApiService;\r\n\r\n  private _taskUrl: string = '';\r\n\r\n  private _taskId: string = '';\r\n\r\n\tprivate taskData: KaitenCardType | null = null;\r\n\r\n\tprivate _timeLogs: KaitenTimeLogType[] = [];\r\n\r\n  private _userRoles: KaitenRoleType[] = [];\r\n\r\n\tpublic providerKaitenTask: KaitenTaskViewProvider;\r\n\r\n\tpublic providerKaitenTimeLog: KaitenTimeLogViewProvider;\r\n\r\n  public gitExt?: BuiltInGitApi;\r\n\r\n  constructor(\r\n    context: vscode.ExtensionContext,\r\n    baseUrl: string,\r\n    apiKey: string\r\n  ) {\r\n    this.baseUrl = baseUrl;\r\n    this.kaitenApi = new KaitenApiService(baseUrl, apiKey);\r\n    this.providerKaitenTask = new KaitenTaskViewProvider(context.extensionUri);\r\n    this.providerKaitenTimeLog = new KaitenTimeLogViewProvider(context.extensionUri, this);\r\n  }\r\n\r\n  async init() {\r\n    const $this = this;\r\n    [this.gitExt] = await Promise.all([getBuiltInGitApi(), this.initRoles()]);\r\n    \r\n    if (!this.gitExt) return;\r\n\r\n    if (this.gitExt.state === 'initialized' && this.gitExt.repositories[0]) {\r\n      const repo = this.gitExt.repositories[0];\r\n      repo.state.onDidChange(() => {\r\n        if (repo.state.HEAD?.name) {\r\n          this.taskUrl = generateKaitenLink($this.baseUrl, repo.state.HEAD.name) || '';\r\n          this.taskId = this.taskUrl.split('/').slice(-1)[0];\r\n        }\r\n      });\r\n    } else {\r\n      this.gitExt.onDidOpenRepository((repo: Repository) => {\r\n        repo.state.onDidChange(() => {\r\n          if (repo.state.HEAD?.name) {\r\n            this.taskUrl = generateKaitenLink($this.baseUrl, repo.state.HEAD.name) || '';\r\n            this.taskId = this.taskUrl.split('/').slice(-1)[0];\r\n          }\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  private async initRoles() {\r\n    const result = await this.withProgress(\r\n      KaitenTimeLogViewProvider.viewType,\r\n      this.kaitenApi.getRoles()\r\n    );\r\n    if (!result.error) {\r\n      this.userRoles = result.data || [];\r\n    } else {\r\n      this.userRoles = [];\r\n    }\r\n  }\r\n\r\n  public async updateTaskData() {\r\n    const response = await this.withProgress(\r\n      KaitenTaskViewProvider.viewType,\r\n      this.kaitenApi.getTask(this.taskId)\r\n    );\r\n\t\tif (!response.error && response.data) {\r\n\t\t\tthis.taskData = response.data;\r\n      this.providerKaitenTask.updateTaskData(response.data);\r\n\t\t\tconsole.log(this.taskData.title);\r\n\t\t}\r\n\t}\r\n\r\n  public async updateTimeLogs() {\r\n    const response = await this.withProgress(\r\n      KaitenTimeLogViewProvider.viewType,\r\n      this.kaitenApi.getTimeLogs(this.taskId)\r\n    );\r\n\t\tif (!response.error && response.data) {\r\n\t\t\tthis.timeLogs = response.data;\r\n\t\t}\r\n  }\r\n\r\n  set taskId(id: string) {\r\n    if (id !== this.taskId) {\r\n      this._taskId = id;\r\n      this.updateTaskData();\r\n      this.updateTimeLogs();\r\n      this.providerKaitenTimeLog.clearForm();\r\n    }\r\n    this._taskId = id;\r\n  }\r\n  \r\n  get taskId() {\r\n    return this._taskId;\r\n  }\r\n\r\n  set taskUrl(url: string) {\r\n    this._taskUrl = url;\r\n  }\r\n\r\n  get taskUrl() {\r\n    return this._taskUrl;\r\n  }\r\n\r\n  set timeLogs(logs: KaitenTimeLogType[]) {\r\n    this._timeLogs = logs;\r\n    \r\n    this.providerKaitenTimeLog.updateTimeLogsData(logs);\r\n  }\r\n\r\n  get timeLogs() {\r\n    return this._timeLogs;\r\n  }\r\n\r\n  set userRoles(roles: KaitenRoleType[]) {\r\n    this._userRoles = roles;\r\n    \r\n    this.providerKaitenTimeLog.updateRolesData(roles);\r\n  }\r\n\r\n  get userRoles() {\r\n    return this._userRoles;\r\n  }\r\n\r\n  private async withProgress<T>(viewId: ViewType, promise: Promise<T>) {\r\n    return await vscode.window.withProgress(\r\n      {\r\n        location: { viewId }\r\n      }, \r\n      async () => {\r\n        const result1 = await promise;\r\n        return result1;\r\n      }\r\n    );\r\n  }\r\n\r\n  public async addTimeLog(payload: AddTimeLogDataType) {\r\n    const response = await this.withProgress(\r\n      KaitenTimeLogViewProvider.viewType,\r\n      this.kaitenApi.addTimeLog(this.taskId, payload)\r\n    );\r\n\r\n    if (!response.error) {\r\n      await this.updateTimeLogs();\r\n    } else {\r\n      vscode.window.showErrorMessage(response.errorMessage || 'Ошибка создания записи');\r\n    }\r\n  }\r\n\r\n  public async updateTimeLog(payload: UpdateTimeLogDataType & { id: string }) {\r\n    const response = await this.withProgress(\r\n      KaitenTimeLogViewProvider.viewType,\r\n      this.kaitenApi.updateTimeLog(this.taskId, payload.id, payload)\r\n    );\r\n\r\n    if (!response.error) {\r\n      await this.updateTimeLogs();\r\n    } else {\r\n      vscode.window.showErrorMessage(response.errorMessage || 'Ошибка обновления записи');\r\n    }\r\n  }\r\n\r\n  public async removeTimeLog(logId: string) {\r\n    const confirm = await vscode.window.showQuickPick(['Да', 'Нет'], {\r\n      canPickMany: false,\r\n      matchOnDescription: false,\r\n      matchOnDetail: false,\r\n      ignoreFocusOut: true,\r\n      placeHolder: 'Выберите нужный вариант',\r\n      title: 'Удалить запись?'\r\n    });\r\n    if (confirm !== 'Да') return;\r\n    const response = await this.withProgress(\r\n      KaitenTimeLogViewProvider.viewType,\r\n      this.kaitenApi.removeTimeLog(this.taskId, logId)\r\n    );\r\n    \r\n    if (!response.error) {\r\n      await this.updateTimeLogs();\r\n    } else {\r\n      vscode.window.showErrorMessage(response.errorMessage || 'Ошибка удаления записи');\r\n    }\r\n  }\r\n}","/**\n * web-streams-polyfill v3.2.1\n */\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n    typeof define === 'function' && define.amd ? define(['exports'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.WebStreamsPolyfill = {}));\n}(this, (function (exports) { 'use strict';\n\n    /// <reference lib=\"es2015.symbol\" />\n    const SymbolPolyfill = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ?\n        Symbol :\n        description => `Symbol(${description})`;\n\n    /// <reference lib=\"dom\" />\n    function noop() {\n        return undefined;\n    }\n    function getGlobals() {\n        if (typeof self !== 'undefined') {\n            return self;\n        }\n        else if (typeof window !== 'undefined') {\n            return window;\n        }\n        else if (typeof global !== 'undefined') {\n            return global;\n        }\n        return undefined;\n    }\n    const globals = getGlobals();\n\n    function typeIsObject(x) {\n        return (typeof x === 'object' && x !== null) || typeof x === 'function';\n    }\n    const rethrowAssertionErrorRejection = noop;\n\n    const originalPromise = Promise;\n    const originalPromiseThen = Promise.prototype.then;\n    const originalPromiseResolve = Promise.resolve.bind(originalPromise);\n    const originalPromiseReject = Promise.reject.bind(originalPromise);\n    function newPromise(executor) {\n        return new originalPromise(executor);\n    }\n    function promiseResolvedWith(value) {\n        return originalPromiseResolve(value);\n    }\n    function promiseRejectedWith(reason) {\n        return originalPromiseReject(reason);\n    }\n    function PerformPromiseThen(promise, onFulfilled, onRejected) {\n        // There doesn't appear to be any way to correctly emulate the behaviour from JavaScript, so this is just an\n        // approximation.\n        return originalPromiseThen.call(promise, onFulfilled, onRejected);\n    }\n    function uponPromise(promise, onFulfilled, onRejected) {\n        PerformPromiseThen(PerformPromiseThen(promise, onFulfilled, onRejected), undefined, rethrowAssertionErrorRejection);\n    }\n    function uponFulfillment(promise, onFulfilled) {\n        uponPromise(promise, onFulfilled);\n    }\n    function uponRejection(promise, onRejected) {\n        uponPromise(promise, undefined, onRejected);\n    }\n    function transformPromiseWith(promise, fulfillmentHandler, rejectionHandler) {\n        return PerformPromiseThen(promise, fulfillmentHandler, rejectionHandler);\n    }\n    function setPromiseIsHandledToTrue(promise) {\n        PerformPromiseThen(promise, undefined, rethrowAssertionErrorRejection);\n    }\n    const queueMicrotask = (() => {\n        const globalQueueMicrotask = globals && globals.queueMicrotask;\n        if (typeof globalQueueMicrotask === 'function') {\n            return globalQueueMicrotask;\n        }\n        const resolvedPromise = promiseResolvedWith(undefined);\n        return (fn) => PerformPromiseThen(resolvedPromise, fn);\n    })();\n    function reflectCall(F, V, args) {\n        if (typeof F !== 'function') {\n            throw new TypeError('Argument is not a function');\n        }\n        return Function.prototype.apply.call(F, V, args);\n    }\n    function promiseCall(F, V, args) {\n        try {\n            return promiseResolvedWith(reflectCall(F, V, args));\n        }\n        catch (value) {\n            return promiseRejectedWith(value);\n        }\n    }\n\n    // Original from Chromium\n    // https://chromium.googlesource.com/chromium/src/+/0aee4434a4dba42a42abaea9bfbc0cd196a63bc1/third_party/blink/renderer/core/streams/SimpleQueue.js\n    const QUEUE_MAX_ARRAY_SIZE = 16384;\n    /**\n     * Simple queue structure.\n     *\n     * Avoids scalability issues with using a packed array directly by using\n     * multiple arrays in a linked list and keeping the array size bounded.\n     */\n    class SimpleQueue {\n        constructor() {\n            this._cursor = 0;\n            this._size = 0;\n            // _front and _back are always defined.\n            this._front = {\n                _elements: [],\n                _next: undefined\n            };\n            this._back = this._front;\n            // The cursor is used to avoid calling Array.shift().\n            // It contains the index of the front element of the array inside the\n            // front-most node. It is always in the range [0, QUEUE_MAX_ARRAY_SIZE).\n            this._cursor = 0;\n            // When there is only one node, size === elements.length - cursor.\n            this._size = 0;\n        }\n        get length() {\n            return this._size;\n        }\n        // For exception safety, this method is structured in order:\n        // 1. Read state\n        // 2. Calculate required state mutations\n        // 3. Perform state mutations\n        push(element) {\n            const oldBack = this._back;\n            let newBack = oldBack;\n            if (oldBack._elements.length === QUEUE_MAX_ARRAY_SIZE - 1) {\n                newBack = {\n                    _elements: [],\n                    _next: undefined\n                };\n            }\n            // push() is the mutation most likely to throw an exception, so it\n            // goes first.\n            oldBack._elements.push(element);\n            if (newBack !== oldBack) {\n                this._back = newBack;\n                oldBack._next = newBack;\n            }\n            ++this._size;\n        }\n        // Like push(), shift() follows the read -> calculate -> mutate pattern for\n        // exception safety.\n        shift() { // must not be called on an empty queue\n            const oldFront = this._front;\n            let newFront = oldFront;\n            const oldCursor = this._cursor;\n            let newCursor = oldCursor + 1;\n            const elements = oldFront._elements;\n            const element = elements[oldCursor];\n            if (newCursor === QUEUE_MAX_ARRAY_SIZE) {\n                newFront = oldFront._next;\n                newCursor = 0;\n            }\n            // No mutations before this point.\n            --this._size;\n            this._cursor = newCursor;\n            if (oldFront !== newFront) {\n                this._front = newFront;\n            }\n            // Permit shifted element to be garbage collected.\n            elements[oldCursor] = undefined;\n            return element;\n        }\n        // The tricky thing about forEach() is that it can be called\n        // re-entrantly. The queue may be mutated inside the callback. It is easy to\n        // see that push() within the callback has no negative effects since the end\n        // of the queue is checked for on every iteration. If shift() is called\n        // repeatedly within the callback then the next iteration may return an\n        // element that has been removed. In this case the callback will be called\n        // with undefined values until we either \"catch up\" with elements that still\n        // exist or reach the back of the queue.\n        forEach(callback) {\n            let i = this._cursor;\n            let node = this._front;\n            let elements = node._elements;\n            while (i !== elements.length || node._next !== undefined) {\n                if (i === elements.length) {\n                    node = node._next;\n                    elements = node._elements;\n                    i = 0;\n                    if (elements.length === 0) {\n                        break;\n                    }\n                }\n                callback(elements[i]);\n                ++i;\n            }\n        }\n        // Return the element that would be returned if shift() was called now,\n        // without modifying the queue.\n        peek() { // must not be called on an empty queue\n            const front = this._front;\n            const cursor = this._cursor;\n            return front._elements[cursor];\n        }\n    }\n\n    function ReadableStreamReaderGenericInitialize(reader, stream) {\n        reader._ownerReadableStream = stream;\n        stream._reader = reader;\n        if (stream._state === 'readable') {\n            defaultReaderClosedPromiseInitialize(reader);\n        }\n        else if (stream._state === 'closed') {\n            defaultReaderClosedPromiseInitializeAsResolved(reader);\n        }\n        else {\n            defaultReaderClosedPromiseInitializeAsRejected(reader, stream._storedError);\n        }\n    }\n    // A client of ReadableStreamDefaultReader and ReadableStreamBYOBReader may use these functions directly to bypass state\n    // check.\n    function ReadableStreamReaderGenericCancel(reader, reason) {\n        const stream = reader._ownerReadableStream;\n        return ReadableStreamCancel(stream, reason);\n    }\n    function ReadableStreamReaderGenericRelease(reader) {\n        if (reader._ownerReadableStream._state === 'readable') {\n            defaultReaderClosedPromiseReject(reader, new TypeError(`Reader was released and can no longer be used to monitor the stream's closedness`));\n        }\n        else {\n            defaultReaderClosedPromiseResetToRejected(reader, new TypeError(`Reader was released and can no longer be used to monitor the stream's closedness`));\n        }\n        reader._ownerReadableStream._reader = undefined;\n        reader._ownerReadableStream = undefined;\n    }\n    // Helper functions for the readers.\n    function readerLockException(name) {\n        return new TypeError('Cannot ' + name + ' a stream using a released reader');\n    }\n    // Helper functions for the ReadableStreamDefaultReader.\n    function defaultReaderClosedPromiseInitialize(reader) {\n        reader._closedPromise = newPromise((resolve, reject) => {\n            reader._closedPromise_resolve = resolve;\n            reader._closedPromise_reject = reject;\n        });\n    }\n    function defaultReaderClosedPromiseInitializeAsRejected(reader, reason) {\n        defaultReaderClosedPromiseInitialize(reader);\n        defaultReaderClosedPromiseReject(reader, reason);\n    }\n    function defaultReaderClosedPromiseInitializeAsResolved(reader) {\n        defaultReaderClosedPromiseInitialize(reader);\n        defaultReaderClosedPromiseResolve(reader);\n    }\n    function defaultReaderClosedPromiseReject(reader, reason) {\n        if (reader._closedPromise_reject === undefined) {\n            return;\n        }\n        setPromiseIsHandledToTrue(reader._closedPromise);\n        reader._closedPromise_reject(reason);\n        reader._closedPromise_resolve = undefined;\n        reader._closedPromise_reject = undefined;\n    }\n    function defaultReaderClosedPromiseResetToRejected(reader, reason) {\n        defaultReaderClosedPromiseInitializeAsRejected(reader, reason);\n    }\n    function defaultReaderClosedPromiseResolve(reader) {\n        if (reader._closedPromise_resolve === undefined) {\n            return;\n        }\n        reader._closedPromise_resolve(undefined);\n        reader._closedPromise_resolve = undefined;\n        reader._closedPromise_reject = undefined;\n    }\n\n    const AbortSteps = SymbolPolyfill('[[AbortSteps]]');\n    const ErrorSteps = SymbolPolyfill('[[ErrorSteps]]');\n    const CancelSteps = SymbolPolyfill('[[CancelSteps]]');\n    const PullSteps = SymbolPolyfill('[[PullSteps]]');\n\n    /// <reference lib=\"es2015.core\" />\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isFinite#Polyfill\n    const NumberIsFinite = Number.isFinite || function (x) {\n        return typeof x === 'number' && isFinite(x);\n    };\n\n    /// <reference lib=\"es2015.core\" />\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/trunc#Polyfill\n    const MathTrunc = Math.trunc || function (v) {\n        return v < 0 ? Math.ceil(v) : Math.floor(v);\n    };\n\n    // https://heycam.github.io/webidl/#idl-dictionaries\n    function isDictionary(x) {\n        return typeof x === 'object' || typeof x === 'function';\n    }\n    function assertDictionary(obj, context) {\n        if (obj !== undefined && !isDictionary(obj)) {\n            throw new TypeError(`${context} is not an object.`);\n        }\n    }\n    // https://heycam.github.io/webidl/#idl-callback-functions\n    function assertFunction(x, context) {\n        if (typeof x !== 'function') {\n            throw new TypeError(`${context} is not a function.`);\n        }\n    }\n    // https://heycam.github.io/webidl/#idl-object\n    function isObject(x) {\n        return (typeof x === 'object' && x !== null) || typeof x === 'function';\n    }\n    function assertObject(x, context) {\n        if (!isObject(x)) {\n            throw new TypeError(`${context} is not an object.`);\n        }\n    }\n    function assertRequiredArgument(x, position, context) {\n        if (x === undefined) {\n            throw new TypeError(`Parameter ${position} is required in '${context}'.`);\n        }\n    }\n    function assertRequiredField(x, field, context) {\n        if (x === undefined) {\n            throw new TypeError(`${field} is required in '${context}'.`);\n        }\n    }\n    // https://heycam.github.io/webidl/#idl-unrestricted-double\n    function convertUnrestrictedDouble(value) {\n        return Number(value);\n    }\n    function censorNegativeZero(x) {\n        return x === 0 ? 0 : x;\n    }\n    function integerPart(x) {\n        return censorNegativeZero(MathTrunc(x));\n    }\n    // https://heycam.github.io/webidl/#idl-unsigned-long-long\n    function convertUnsignedLongLongWithEnforceRange(value, context) {\n        const lowerBound = 0;\n        const upperBound = Number.MAX_SAFE_INTEGER;\n        let x = Number(value);\n        x = censorNegativeZero(x);\n        if (!NumberIsFinite(x)) {\n            throw new TypeError(`${context} is not a finite number`);\n        }\n        x = integerPart(x);\n        if (x < lowerBound || x > upperBound) {\n            throw new TypeError(`${context} is outside the accepted range of ${lowerBound} to ${upperBound}, inclusive`);\n        }\n        if (!NumberIsFinite(x) || x === 0) {\n            return 0;\n        }\n        // TODO Use BigInt if supported?\n        // let xBigInt = BigInt(integerPart(x));\n        // xBigInt = BigInt.asUintN(64, xBigInt);\n        // return Number(xBigInt);\n        return x;\n    }\n\n    function assertReadableStream(x, context) {\n        if (!IsReadableStream(x)) {\n            throw new TypeError(`${context} is not a ReadableStream.`);\n        }\n    }\n\n    // Abstract operations for the ReadableStream.\n    function AcquireReadableStreamDefaultReader(stream) {\n        return new ReadableStreamDefaultReader(stream);\n    }\n    // ReadableStream API exposed for controllers.\n    function ReadableStreamAddReadRequest(stream, readRequest) {\n        stream._reader._readRequests.push(readRequest);\n    }\n    function ReadableStreamFulfillReadRequest(stream, chunk, done) {\n        const reader = stream._reader;\n        const readRequest = reader._readRequests.shift();\n        if (done) {\n            readRequest._closeSteps();\n        }\n        else {\n            readRequest._chunkSteps(chunk);\n        }\n    }\n    function ReadableStreamGetNumReadRequests(stream) {\n        return stream._reader._readRequests.length;\n    }\n    function ReadableStreamHasDefaultReader(stream) {\n        const reader = stream._reader;\n        if (reader === undefined) {\n            return false;\n        }\n        if (!IsReadableStreamDefaultReader(reader)) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * A default reader vended by a {@link ReadableStream}.\n     *\n     * @public\n     */\n    class ReadableStreamDefaultReader {\n        constructor(stream) {\n            assertRequiredArgument(stream, 1, 'ReadableStreamDefaultReader');\n            assertReadableStream(stream, 'First parameter');\n            if (IsReadableStreamLocked(stream)) {\n                throw new TypeError('This stream has already been locked for exclusive reading by another reader');\n            }\n            ReadableStreamReaderGenericInitialize(this, stream);\n            this._readRequests = new SimpleQueue();\n        }\n        /**\n         * Returns a promise that will be fulfilled when the stream becomes closed,\n         * or rejected if the stream ever errors or the reader's lock is released before the stream finishes closing.\n         */\n        get closed() {\n            if (!IsReadableStreamDefaultReader(this)) {\n                return promiseRejectedWith(defaultReaderBrandCheckException('closed'));\n            }\n            return this._closedPromise;\n        }\n        /**\n         * If the reader is active, behaves the same as {@link ReadableStream.cancel | stream.cancel(reason)}.\n         */\n        cancel(reason = undefined) {\n            if (!IsReadableStreamDefaultReader(this)) {\n                return promiseRejectedWith(defaultReaderBrandCheckException('cancel'));\n            }\n            if (this._ownerReadableStream === undefined) {\n                return promiseRejectedWith(readerLockException('cancel'));\n            }\n            return ReadableStreamReaderGenericCancel(this, reason);\n        }\n        /**\n         * Returns a promise that allows access to the next chunk from the stream's internal queue, if available.\n         *\n         * If reading a chunk causes the queue to become empty, more data will be pulled from the underlying source.\n         */\n        read() {\n            if (!IsReadableStreamDefaultReader(this)) {\n                return promiseRejectedWith(defaultReaderBrandCheckException('read'));\n            }\n            if (this._ownerReadableStream === undefined) {\n                return promiseRejectedWith(readerLockException('read from'));\n            }\n            let resolvePromise;\n            let rejectPromise;\n            const promise = newPromise((resolve, reject) => {\n                resolvePromise = resolve;\n                rejectPromise = reject;\n            });\n            const readRequest = {\n                _chunkSteps: chunk => resolvePromise({ value: chunk, done: false }),\n                _closeSteps: () => resolvePromise({ value: undefined, done: true }),\n                _errorSteps: e => rejectPromise(e)\n            };\n            ReadableStreamDefaultReaderRead(this, readRequest);\n            return promise;\n        }\n        /**\n         * Releases the reader's lock on the corresponding stream. After the lock is released, the reader is no longer active.\n         * If the associated stream is errored when the lock is released, the reader will appear errored in the same way\n         * from now on; otherwise, the reader will appear closed.\n         *\n         * A reader's lock cannot be released while it still has a pending read request, i.e., if a promise returned by\n         * the reader's {@link ReadableStreamDefaultReader.read | read()} method has not yet been settled. Attempting to\n         * do so will throw a `TypeError` and leave the reader locked to the stream.\n         */\n        releaseLock() {\n            if (!IsReadableStreamDefaultReader(this)) {\n                throw defaultReaderBrandCheckException('releaseLock');\n            }\n            if (this._ownerReadableStream === undefined) {\n                return;\n            }\n            if (this._readRequests.length > 0) {\n                throw new TypeError('Tried to release a reader lock when that reader has pending read() calls un-settled');\n            }\n            ReadableStreamReaderGenericRelease(this);\n        }\n    }\n    Object.defineProperties(ReadableStreamDefaultReader.prototype, {\n        cancel: { enumerable: true },\n        read: { enumerable: true },\n        releaseLock: { enumerable: true },\n        closed: { enumerable: true }\n    });\n    if (typeof SymbolPolyfill.toStringTag === 'symbol') {\n        Object.defineProperty(ReadableStreamDefaultReader.prototype, SymbolPolyfill.toStringTag, {\n            value: 'ReadableStreamDefaultReader',\n            configurable: true\n        });\n    }\n    // Abstract operations for the readers.\n    function IsReadableStreamDefaultReader(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_readRequests')) {\n            return false;\n        }\n        return x instanceof ReadableStreamDefaultReader;\n    }\n    function ReadableStreamDefaultReaderRead(reader, readRequest) {\n        const stream = reader._ownerReadableStream;\n        stream._disturbed = true;\n        if (stream._state === 'closed') {\n            readRequest._closeSteps();\n        }\n        else if (stream._state === 'errored') {\n            readRequest._errorSteps(stream._storedError);\n        }\n        else {\n            stream._readableStreamController[PullSteps](readRequest);\n        }\n    }\n    // Helper functions for the ReadableStreamDefaultReader.\n    function defaultReaderBrandCheckException(name) {\n        return new TypeError(`ReadableStreamDefaultReader.prototype.${name} can only be used on a ReadableStreamDefaultReader`);\n    }\n\n    /// <reference lib=\"es2018.asynciterable\" />\n    /* eslint-disable @typescript-eslint/no-empty-function */\n    const AsyncIteratorPrototype = Object.getPrototypeOf(Object.getPrototypeOf(async function* () { }).prototype);\n\n    /// <reference lib=\"es2018.asynciterable\" />\n    class ReadableStreamAsyncIteratorImpl {\n        constructor(reader, preventCancel) {\n            this._ongoingPromise = undefined;\n            this._isFinished = false;\n            this._reader = reader;\n            this._preventCancel = preventCancel;\n        }\n        next() {\n            const nextSteps = () => this._nextSteps();\n            this._ongoingPromise = this._ongoingPromise ?\n                transformPromiseWith(this._ongoingPromise, nextSteps, nextSteps) :\n                nextSteps();\n            return this._ongoingPromise;\n        }\n        return(value) {\n            const returnSteps = () => this._returnSteps(value);\n            return this._ongoingPromise ?\n                transformPromiseWith(this._ongoingPromise, returnSteps, returnSteps) :\n                returnSteps();\n        }\n        _nextSteps() {\n            if (this._isFinished) {\n                return Promise.resolve({ value: undefined, done: true });\n            }\n            const reader = this._reader;\n            if (reader._ownerReadableStream === undefined) {\n                return promiseRejectedWith(readerLockException('iterate'));\n            }\n            let resolvePromise;\n            let rejectPromise;\n            const promise = newPromise((resolve, reject) => {\n                resolvePromise = resolve;\n                rejectPromise = reject;\n            });\n            const readRequest = {\n                _chunkSteps: chunk => {\n                    this._ongoingPromise = undefined;\n                    // This needs to be delayed by one microtask, otherwise we stop pulling too early which breaks a test.\n                    // FIXME Is this a bug in the specification, or in the test?\n                    queueMicrotask(() => resolvePromise({ value: chunk, done: false }));\n                },\n                _closeSteps: () => {\n                    this._ongoingPromise = undefined;\n                    this._isFinished = true;\n                    ReadableStreamReaderGenericRelease(reader);\n                    resolvePromise({ value: undefined, done: true });\n                },\n                _errorSteps: reason => {\n                    this._ongoingPromise = undefined;\n                    this._isFinished = true;\n                    ReadableStreamReaderGenericRelease(reader);\n                    rejectPromise(reason);\n                }\n            };\n            ReadableStreamDefaultReaderRead(reader, readRequest);\n            return promise;\n        }\n        _returnSteps(value) {\n            if (this._isFinished) {\n                return Promise.resolve({ value, done: true });\n            }\n            this._isFinished = true;\n            const reader = this._reader;\n            if (reader._ownerReadableStream === undefined) {\n                return promiseRejectedWith(readerLockException('finish iterating'));\n            }\n            if (!this._preventCancel) {\n                const result = ReadableStreamReaderGenericCancel(reader, value);\n                ReadableStreamReaderGenericRelease(reader);\n                return transformPromiseWith(result, () => ({ value, done: true }));\n            }\n            ReadableStreamReaderGenericRelease(reader);\n            return promiseResolvedWith({ value, done: true });\n        }\n    }\n    const ReadableStreamAsyncIteratorPrototype = {\n        next() {\n            if (!IsReadableStreamAsyncIterator(this)) {\n                return promiseRejectedWith(streamAsyncIteratorBrandCheckException('next'));\n            }\n            return this._asyncIteratorImpl.next();\n        },\n        return(value) {\n            if (!IsReadableStreamAsyncIterator(this)) {\n                return promiseRejectedWith(streamAsyncIteratorBrandCheckException('return'));\n            }\n            return this._asyncIteratorImpl.return(value);\n        }\n    };\n    if (AsyncIteratorPrototype !== undefined) {\n        Object.setPrototypeOf(ReadableStreamAsyncIteratorPrototype, AsyncIteratorPrototype);\n    }\n    // Abstract operations for the ReadableStream.\n    function AcquireReadableStreamAsyncIterator(stream, preventCancel) {\n        const reader = AcquireReadableStreamDefaultReader(stream);\n        const impl = new ReadableStreamAsyncIteratorImpl(reader, preventCancel);\n        const iterator = Object.create(ReadableStreamAsyncIteratorPrototype);\n        iterator._asyncIteratorImpl = impl;\n        return iterator;\n    }\n    function IsReadableStreamAsyncIterator(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_asyncIteratorImpl')) {\n            return false;\n        }\n        try {\n            // noinspection SuspiciousTypeOfGuard\n            return x._asyncIteratorImpl instanceof\n                ReadableStreamAsyncIteratorImpl;\n        }\n        catch (_a) {\n            return false;\n        }\n    }\n    // Helper functions for the ReadableStream.\n    function streamAsyncIteratorBrandCheckException(name) {\n        return new TypeError(`ReadableStreamAsyncIterator.${name} can only be used on a ReadableSteamAsyncIterator`);\n    }\n\n    /// <reference lib=\"es2015.core\" />\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isNaN#Polyfill\n    const NumberIsNaN = Number.isNaN || function (x) {\n        // eslint-disable-next-line no-self-compare\n        return x !== x;\n    };\n\n    function CreateArrayFromList(elements) {\n        // We use arrays to represent lists, so this is basically a no-op.\n        // Do a slice though just in case we happen to depend on the unique-ness.\n        return elements.slice();\n    }\n    function CopyDataBlockBytes(dest, destOffset, src, srcOffset, n) {\n        new Uint8Array(dest).set(new Uint8Array(src, srcOffset, n), destOffset);\n    }\n    // Not implemented correctly\n    function TransferArrayBuffer(O) {\n        return O;\n    }\n    // Not implemented correctly\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    function IsDetachedBuffer(O) {\n        return false;\n    }\n    function ArrayBufferSlice(buffer, begin, end) {\n        // ArrayBuffer.prototype.slice is not available on IE10\n        // https://www.caniuse.com/mdn-javascript_builtins_arraybuffer_slice\n        if (buffer.slice) {\n            return buffer.slice(begin, end);\n        }\n        const length = end - begin;\n        const slice = new ArrayBuffer(length);\n        CopyDataBlockBytes(slice, 0, buffer, begin, length);\n        return slice;\n    }\n\n    function IsNonNegativeNumber(v) {\n        if (typeof v !== 'number') {\n            return false;\n        }\n        if (NumberIsNaN(v)) {\n            return false;\n        }\n        if (v < 0) {\n            return false;\n        }\n        return true;\n    }\n    function CloneAsUint8Array(O) {\n        const buffer = ArrayBufferSlice(O.buffer, O.byteOffset, O.byteOffset + O.byteLength);\n        return new Uint8Array(buffer);\n    }\n\n    function DequeueValue(container) {\n        const pair = container._queue.shift();\n        container._queueTotalSize -= pair.size;\n        if (container._queueTotalSize < 0) {\n            container._queueTotalSize = 0;\n        }\n        return pair.value;\n    }\n    function EnqueueValueWithSize(container, value, size) {\n        if (!IsNonNegativeNumber(size) || size === Infinity) {\n            throw new RangeError('Size must be a finite, non-NaN, non-negative number.');\n        }\n        container._queue.push({ value, size });\n        container._queueTotalSize += size;\n    }\n    function PeekQueueValue(container) {\n        const pair = container._queue.peek();\n        return pair.value;\n    }\n    function ResetQueue(container) {\n        container._queue = new SimpleQueue();\n        container._queueTotalSize = 0;\n    }\n\n    /**\n     * A pull-into request in a {@link ReadableByteStreamController}.\n     *\n     * @public\n     */\n    class ReadableStreamBYOBRequest {\n        constructor() {\n            throw new TypeError('Illegal constructor');\n        }\n        /**\n         * Returns the view for writing in to, or `null` if the BYOB request has already been responded to.\n         */\n        get view() {\n            if (!IsReadableStreamBYOBRequest(this)) {\n                throw byobRequestBrandCheckException('view');\n            }\n            return this._view;\n        }\n        respond(bytesWritten) {\n            if (!IsReadableStreamBYOBRequest(this)) {\n                throw byobRequestBrandCheckException('respond');\n            }\n            assertRequiredArgument(bytesWritten, 1, 'respond');\n            bytesWritten = convertUnsignedLongLongWithEnforceRange(bytesWritten, 'First parameter');\n            if (this._associatedReadableByteStreamController === undefined) {\n                throw new TypeError('This BYOB request has been invalidated');\n            }\n            if (IsDetachedBuffer(this._view.buffer)) ;\n            ReadableByteStreamControllerRespond(this._associatedReadableByteStreamController, bytesWritten);\n        }\n        respondWithNewView(view) {\n            if (!IsReadableStreamBYOBRequest(this)) {\n                throw byobRequestBrandCheckException('respondWithNewView');\n            }\n            assertRequiredArgument(view, 1, 'respondWithNewView');\n            if (!ArrayBuffer.isView(view)) {\n                throw new TypeError('You can only respond with array buffer views');\n            }\n            if (this._associatedReadableByteStreamController === undefined) {\n                throw new TypeError('This BYOB request has been invalidated');\n            }\n            if (IsDetachedBuffer(view.buffer)) ;\n            ReadableByteStreamControllerRespondWithNewView(this._associatedReadableByteStreamController, view);\n        }\n    }\n    Object.defineProperties(ReadableStreamBYOBRequest.prototype, {\n        respond: { enumerable: true },\n        respondWithNewView: { enumerable: true },\n        view: { enumerable: true }\n    });\n    if (typeof SymbolPolyfill.toStringTag === 'symbol') {\n        Object.defineProperty(ReadableStreamBYOBRequest.prototype, SymbolPolyfill.toStringTag, {\n            value: 'ReadableStreamBYOBRequest',\n            configurable: true\n        });\n    }\n    /**\n     * Allows control of a {@link ReadableStream | readable byte stream}'s state and internal queue.\n     *\n     * @public\n     */\n    class ReadableByteStreamController {\n        constructor() {\n            throw new TypeError('Illegal constructor');\n        }\n        /**\n         * Returns the current BYOB pull request, or `null` if there isn't one.\n         */\n        get byobRequest() {\n            if (!IsReadableByteStreamController(this)) {\n                throw byteStreamControllerBrandCheckException('byobRequest');\n            }\n            return ReadableByteStreamControllerGetBYOBRequest(this);\n        }\n        /**\n         * Returns the desired size to fill the controlled stream's internal queue. It can be negative, if the queue is\n         * over-full. An underlying byte source ought to use this information to determine when and how to apply backpressure.\n         */\n        get desiredSize() {\n            if (!IsReadableByteStreamController(this)) {\n                throw byteStreamControllerBrandCheckException('desiredSize');\n            }\n            return ReadableByteStreamControllerGetDesiredSize(this);\n        }\n        /**\n         * Closes the controlled readable stream. Consumers will still be able to read any previously-enqueued chunks from\n         * the stream, but once those are read, the stream will become closed.\n         */\n        close() {\n            if (!IsReadableByteStreamController(this)) {\n                throw byteStreamControllerBrandCheckException('close');\n            }\n            if (this._closeRequested) {\n                throw new TypeError('The stream has already been closed; do not close it again!');\n            }\n            const state = this._controlledReadableByteStream._state;\n            if (state !== 'readable') {\n                throw new TypeError(`The stream (in ${state} state) is not in the readable state and cannot be closed`);\n            }\n            ReadableByteStreamControllerClose(this);\n        }\n        enqueue(chunk) {\n            if (!IsReadableByteStreamController(this)) {\n                throw byteStreamControllerBrandCheckException('enqueue');\n            }\n            assertRequiredArgument(chunk, 1, 'enqueue');\n            if (!ArrayBuffer.isView(chunk)) {\n                throw new TypeError('chunk must be an array buffer view');\n            }\n            if (chunk.byteLength === 0) {\n                throw new TypeError('chunk must have non-zero byteLength');\n            }\n            if (chunk.buffer.byteLength === 0) {\n                throw new TypeError(`chunk's buffer must have non-zero byteLength`);\n            }\n            if (this._closeRequested) {\n                throw new TypeError('stream is closed or draining');\n            }\n            const state = this._controlledReadableByteStream._state;\n            if (state !== 'readable') {\n                throw new TypeError(`The stream (in ${state} state) is not in the readable state and cannot be enqueued to`);\n            }\n            ReadableByteStreamControllerEnqueue(this, chunk);\n        }\n        /**\n         * Errors the controlled readable stream, making all future interactions with it fail with the given error `e`.\n         */\n        error(e = undefined) {\n            if (!IsReadableByteStreamController(this)) {\n                throw byteStreamControllerBrandCheckException('error');\n            }\n            ReadableByteStreamControllerError(this, e);\n        }\n        /** @internal */\n        [CancelSteps](reason) {\n            ReadableByteStreamControllerClearPendingPullIntos(this);\n            ResetQueue(this);\n            const result = this._cancelAlgorithm(reason);\n            ReadableByteStreamControllerClearAlgorithms(this);\n            return result;\n        }\n        /** @internal */\n        [PullSteps](readRequest) {\n            const stream = this._controlledReadableByteStream;\n            if (this._queueTotalSize > 0) {\n                const entry = this._queue.shift();\n                this._queueTotalSize -= entry.byteLength;\n                ReadableByteStreamControllerHandleQueueDrain(this);\n                const view = new Uint8Array(entry.buffer, entry.byteOffset, entry.byteLength);\n                readRequest._chunkSteps(view);\n                return;\n            }\n            const autoAllocateChunkSize = this._autoAllocateChunkSize;\n            if (autoAllocateChunkSize !== undefined) {\n                let buffer;\n                try {\n                    buffer = new ArrayBuffer(autoAllocateChunkSize);\n                }\n                catch (bufferE) {\n                    readRequest._errorSteps(bufferE);\n                    return;\n                }\n                const pullIntoDescriptor = {\n                    buffer,\n                    bufferByteLength: autoAllocateChunkSize,\n                    byteOffset: 0,\n                    byteLength: autoAllocateChunkSize,\n                    bytesFilled: 0,\n                    elementSize: 1,\n                    viewConstructor: Uint8Array,\n                    readerType: 'default'\n                };\n                this._pendingPullIntos.push(pullIntoDescriptor);\n            }\n            ReadableStreamAddReadRequest(stream, readRequest);\n            ReadableByteStreamControllerCallPullIfNeeded(this);\n        }\n    }\n    Object.defineProperties(ReadableByteStreamController.prototype, {\n        close: { enumerable: true },\n        enqueue: { enumerable: true },\n        error: { enumerable: true },\n        byobRequest: { enumerable: true },\n        desiredSize: { enumerable: true }\n    });\n    if (typeof SymbolPolyfill.toStringTag === 'symbol') {\n        Object.defineProperty(ReadableByteStreamController.prototype, SymbolPolyfill.toStringTag, {\n            value: 'ReadableByteStreamController',\n            configurable: true\n        });\n    }\n    // Abstract operations for the ReadableByteStreamController.\n    function IsReadableByteStreamController(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_controlledReadableByteStream')) {\n            return false;\n        }\n        return x instanceof ReadableByteStreamController;\n    }\n    function IsReadableStreamBYOBRequest(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_associatedReadableByteStreamController')) {\n            return false;\n        }\n        return x instanceof ReadableStreamBYOBRequest;\n    }\n    function ReadableByteStreamControllerCallPullIfNeeded(controller) {\n        const shouldPull = ReadableByteStreamControllerShouldCallPull(controller);\n        if (!shouldPull) {\n            return;\n        }\n        if (controller._pulling) {\n            controller._pullAgain = true;\n            return;\n        }\n        controller._pulling = true;\n        // TODO: Test controller argument\n        const pullPromise = controller._pullAlgorithm();\n        uponPromise(pullPromise, () => {\n            controller._pulling = false;\n            if (controller._pullAgain) {\n                controller._pullAgain = false;\n                ReadableByteStreamControllerCallPullIfNeeded(controller);\n            }\n        }, e => {\n            ReadableByteStreamControllerError(controller, e);\n        });\n    }\n    function ReadableByteStreamControllerClearPendingPullIntos(controller) {\n        ReadableByteStreamControllerInvalidateBYOBRequest(controller);\n        controller._pendingPullIntos = new SimpleQueue();\n    }\n    function ReadableByteStreamControllerCommitPullIntoDescriptor(stream, pullIntoDescriptor) {\n        let done = false;\n        if (stream._state === 'closed') {\n            done = true;\n        }\n        const filledView = ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor);\n        if (pullIntoDescriptor.readerType === 'default') {\n            ReadableStreamFulfillReadRequest(stream, filledView, done);\n        }\n        else {\n            ReadableStreamFulfillReadIntoRequest(stream, filledView, done);\n        }\n    }\n    function ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor) {\n        const bytesFilled = pullIntoDescriptor.bytesFilled;\n        const elementSize = pullIntoDescriptor.elementSize;\n        return new pullIntoDescriptor.viewConstructor(pullIntoDescriptor.buffer, pullIntoDescriptor.byteOffset, bytesFilled / elementSize);\n    }\n    function ReadableByteStreamControllerEnqueueChunkToQueue(controller, buffer, byteOffset, byteLength) {\n        controller._queue.push({ buffer, byteOffset, byteLength });\n        controller._queueTotalSize += byteLength;\n    }\n    function ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor) {\n        const elementSize = pullIntoDescriptor.elementSize;\n        const currentAlignedBytes = pullIntoDescriptor.bytesFilled - pullIntoDescriptor.bytesFilled % elementSize;\n        const maxBytesToCopy = Math.min(controller._queueTotalSize, pullIntoDescriptor.byteLength - pullIntoDescriptor.bytesFilled);\n        const maxBytesFilled = pullIntoDescriptor.bytesFilled + maxBytesToCopy;\n        const maxAlignedBytes = maxBytesFilled - maxBytesFilled % elementSize;\n        let totalBytesToCopyRemaining = maxBytesToCopy;\n        let ready = false;\n        if (maxAlignedBytes > currentAlignedBytes) {\n            totalBytesToCopyRemaining = maxAlignedBytes - pullIntoDescriptor.bytesFilled;\n            ready = true;\n        }\n        const queue = controller._queue;\n        while (totalBytesToCopyRemaining > 0) {\n            const headOfQueue = queue.peek();\n            const bytesToCopy = Math.min(totalBytesToCopyRemaining, headOfQueue.byteLength);\n            const destStart = pullIntoDescriptor.byteOffset + pullIntoDescriptor.bytesFilled;\n            CopyDataBlockBytes(pullIntoDescriptor.buffer, destStart, headOfQueue.buffer, headOfQueue.byteOffset, bytesToCopy);\n            if (headOfQueue.byteLength === bytesToCopy) {\n                queue.shift();\n            }\n            else {\n                headOfQueue.byteOffset += bytesToCopy;\n                headOfQueue.byteLength -= bytesToCopy;\n            }\n            controller._queueTotalSize -= bytesToCopy;\n            ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, bytesToCopy, pullIntoDescriptor);\n            totalBytesToCopyRemaining -= bytesToCopy;\n        }\n        return ready;\n    }\n    function ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, size, pullIntoDescriptor) {\n        pullIntoDescriptor.bytesFilled += size;\n    }\n    function ReadableByteStreamControllerHandleQueueDrain(controller) {\n        if (controller._queueTotalSize === 0 && controller._closeRequested) {\n            ReadableByteStreamControllerClearAlgorithms(controller);\n            ReadableStreamClose(controller._controlledReadableByteStream);\n        }\n        else {\n            ReadableByteStreamControllerCallPullIfNeeded(controller);\n        }\n    }\n    function ReadableByteStreamControllerInvalidateBYOBRequest(controller) {\n        if (controller._byobRequest === null) {\n            return;\n        }\n        controller._byobRequest._associatedReadableByteStreamController = undefined;\n        controller._byobRequest._view = null;\n        controller._byobRequest = null;\n    }\n    function ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller) {\n        while (controller._pendingPullIntos.length > 0) {\n            if (controller._queueTotalSize === 0) {\n                return;\n            }\n            const pullIntoDescriptor = controller._pendingPullIntos.peek();\n            if (ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor)) {\n                ReadableByteStreamControllerShiftPendingPullInto(controller);\n                ReadableByteStreamControllerCommitPullIntoDescriptor(controller._controlledReadableByteStream, pullIntoDescriptor);\n            }\n        }\n    }\n    function ReadableByteStreamControllerPullInto(controller, view, readIntoRequest) {\n        const stream = controller._controlledReadableByteStream;\n        let elementSize = 1;\n        if (view.constructor !== DataView) {\n            elementSize = view.constructor.BYTES_PER_ELEMENT;\n        }\n        const ctor = view.constructor;\n        // try {\n        const buffer = TransferArrayBuffer(view.buffer);\n        // } catch (e) {\n        //   readIntoRequest._errorSteps(e);\n        //   return;\n        // }\n        const pullIntoDescriptor = {\n            buffer,\n            bufferByteLength: buffer.byteLength,\n            byteOffset: view.byteOffset,\n            byteLength: view.byteLength,\n            bytesFilled: 0,\n            elementSize,\n            viewConstructor: ctor,\n            readerType: 'byob'\n        };\n        if (controller._pendingPullIntos.length > 0) {\n            controller._pendingPullIntos.push(pullIntoDescriptor);\n            // No ReadableByteStreamControllerCallPullIfNeeded() call since:\n            // - No change happens on desiredSize\n            // - The source has already been notified of that there's at least 1 pending read(view)\n            ReadableStreamAddReadIntoRequest(stream, readIntoRequest);\n            return;\n        }\n        if (stream._state === 'closed') {\n            const emptyView = new ctor(pullIntoDescriptor.buffer, pullIntoDescriptor.byteOffset, 0);\n            readIntoRequest._closeSteps(emptyView);\n            return;\n        }\n        if (controller._queueTotalSize > 0) {\n            if (ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor)) {\n                const filledView = ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor);\n                ReadableByteStreamControllerHandleQueueDrain(controller);\n                readIntoRequest._chunkSteps(filledView);\n                return;\n            }\n            if (controller._closeRequested) {\n                const e = new TypeError('Insufficient bytes to fill elements in the given buffer');\n                ReadableByteStreamControllerError(controller, e);\n                readIntoRequest._errorSteps(e);\n                return;\n            }\n        }\n        controller._pendingPullIntos.push(pullIntoDescriptor);\n        ReadableStreamAddReadIntoRequest(stream, readIntoRequest);\n        ReadableByteStreamControllerCallPullIfNeeded(controller);\n    }\n    function ReadableByteStreamControllerRespondInClosedState(controller, firstDescriptor) {\n        const stream = controller._controlledReadableByteStream;\n        if (ReadableStreamHasBYOBReader(stream)) {\n            while (ReadableStreamGetNumReadIntoRequests(stream) > 0) {\n                const pullIntoDescriptor = ReadableByteStreamControllerShiftPendingPullInto(controller);\n                ReadableByteStreamControllerCommitPullIntoDescriptor(stream, pullIntoDescriptor);\n            }\n        }\n    }\n    function ReadableByteStreamControllerRespondInReadableState(controller, bytesWritten, pullIntoDescriptor) {\n        ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, bytesWritten, pullIntoDescriptor);\n        if (pullIntoDescriptor.bytesFilled < pullIntoDescriptor.elementSize) {\n            return;\n        }\n        ReadableByteStreamControllerShiftPendingPullInto(controller);\n        const remainderSize = pullIntoDescriptor.bytesFilled % pullIntoDescriptor.elementSize;\n        if (remainderSize > 0) {\n            const end = pullIntoDescriptor.byteOffset + pullIntoDescriptor.bytesFilled;\n            const remainder = ArrayBufferSlice(pullIntoDescriptor.buffer, end - remainderSize, end);\n            ReadableByteStreamControllerEnqueueChunkToQueue(controller, remainder, 0, remainder.byteLength);\n        }\n        pullIntoDescriptor.bytesFilled -= remainderSize;\n        ReadableByteStreamControllerCommitPullIntoDescriptor(controller._controlledReadableByteStream, pullIntoDescriptor);\n        ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller);\n    }\n    function ReadableByteStreamControllerRespondInternal(controller, bytesWritten) {\n        const firstDescriptor = controller._pendingPullIntos.peek();\n        ReadableByteStreamControllerInvalidateBYOBRequest(controller);\n        const state = controller._controlledReadableByteStream._state;\n        if (state === 'closed') {\n            ReadableByteStreamControllerRespondInClosedState(controller);\n        }\n        else {\n            ReadableByteStreamControllerRespondInReadableState(controller, bytesWritten, firstDescriptor);\n        }\n        ReadableByteStreamControllerCallPullIfNeeded(controller);\n    }\n    function ReadableByteStreamControllerShiftPendingPullInto(controller) {\n        const descriptor = controller._pendingPullIntos.shift();\n        return descriptor;\n    }\n    function ReadableByteStreamControllerShouldCallPull(controller) {\n        const stream = controller._controlledReadableByteStream;\n        if (stream._state !== 'readable') {\n            return false;\n        }\n        if (controller._closeRequested) {\n            return false;\n        }\n        if (!controller._started) {\n            return false;\n        }\n        if (ReadableStreamHasDefaultReader(stream) && ReadableStreamGetNumReadRequests(stream) > 0) {\n            return true;\n        }\n        if (ReadableStreamHasBYOBReader(stream) && ReadableStreamGetNumReadIntoRequests(stream) > 0) {\n            return true;\n        }\n        const desiredSize = ReadableByteStreamControllerGetDesiredSize(controller);\n        if (desiredSize > 0) {\n            return true;\n        }\n        return false;\n    }\n    function ReadableByteStreamControllerClearAlgorithms(controller) {\n        controller._pullAlgorithm = undefined;\n        controller._cancelAlgorithm = undefined;\n    }\n    // A client of ReadableByteStreamController may use these functions directly to bypass state check.\n    function ReadableByteStreamControllerClose(controller) {\n        const stream = controller._controlledReadableByteStream;\n        if (controller._closeRequested || stream._state !== 'readable') {\n            return;\n        }\n        if (controller._queueTotalSize > 0) {\n            controller._closeRequested = true;\n            return;\n        }\n        if (controller._pendingPullIntos.length > 0) {\n            const firstPendingPullInto = controller._pendingPullIntos.peek();\n            if (firstPendingPullInto.bytesFilled > 0) {\n                const e = new TypeError('Insufficient bytes to fill elements in the given buffer');\n                ReadableByteStreamControllerError(controller, e);\n                throw e;\n            }\n        }\n        ReadableByteStreamControllerClearAlgorithms(controller);\n        ReadableStreamClose(stream);\n    }\n    function ReadableByteStreamControllerEnqueue(controller, chunk) {\n        const stream = controller._controlledReadableByteStream;\n        if (controller._closeRequested || stream._state !== 'readable') {\n            return;\n        }\n        const buffer = chunk.buffer;\n        const byteOffset = chunk.byteOffset;\n        const byteLength = chunk.byteLength;\n        const transferredBuffer = TransferArrayBuffer(buffer);\n        if (controller._pendingPullIntos.length > 0) {\n            const firstPendingPullInto = controller._pendingPullIntos.peek();\n            if (IsDetachedBuffer(firstPendingPullInto.buffer)) ;\n            firstPendingPullInto.buffer = TransferArrayBuffer(firstPendingPullInto.buffer);\n        }\n        ReadableByteStreamControllerInvalidateBYOBRequest(controller);\n        if (ReadableStreamHasDefaultReader(stream)) {\n            if (ReadableStreamGetNumReadRequests(stream) === 0) {\n                ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\n            }\n            else {\n                if (controller._pendingPullIntos.length > 0) {\n                    ReadableByteStreamControllerShiftPendingPullInto(controller);\n                }\n                const transferredView = new Uint8Array(transferredBuffer, byteOffset, byteLength);\n                ReadableStreamFulfillReadRequest(stream, transferredView, false);\n            }\n        }\n        else if (ReadableStreamHasBYOBReader(stream)) {\n            // TODO: Ideally in this branch detaching should happen only if the buffer is not consumed fully.\n            ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\n            ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller);\n        }\n        else {\n            ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\n        }\n        ReadableByteStreamControllerCallPullIfNeeded(controller);\n    }\n    function ReadableByteStreamControllerError(controller, e) {\n        const stream = controller._controlledReadableByteStream;\n        if (stream._state !== 'readable') {\n            return;\n        }\n        ReadableByteStreamControllerClearPendingPullIntos(controller);\n        ResetQueue(controller);\n        ReadableByteStreamControllerClearAlgorithms(controller);\n        ReadableStreamError(stream, e);\n    }\n    function ReadableByteStreamControllerGetBYOBRequest(controller) {\n        if (controller._byobRequest === null && controller._pendingPullIntos.length > 0) {\n            const firstDescriptor = controller._pendingPullIntos.peek();\n            const view = new Uint8Array(firstDescriptor.buffer, firstDescriptor.byteOffset + firstDescriptor.bytesFilled, firstDescriptor.byteLength - firstDescriptor.bytesFilled);\n            const byobRequest = Object.create(ReadableStreamBYOBRequest.prototype);\n            SetUpReadableStreamBYOBRequest(byobRequest, controller, view);\n            controller._byobRequest = byobRequest;\n        }\n        return controller._byobRequest;\n    }\n    function ReadableByteStreamControllerGetDesiredSize(controller) {\n        const state = controller._controlledReadableByteStream._state;\n        if (state === 'errored') {\n            return null;\n        }\n        if (state === 'closed') {\n            return 0;\n        }\n        return controller._strategyHWM - controller._queueTotalSize;\n    }\n    function ReadableByteStreamControllerRespond(controller, bytesWritten) {\n        const firstDescriptor = controller._pendingPullIntos.peek();\n        const state = controller._controlledReadableByteStream._state;\n        if (state === 'closed') {\n            if (bytesWritten !== 0) {\n                throw new TypeError('bytesWritten must be 0 when calling respond() on a closed stream');\n            }\n        }\n        else {\n            if (bytesWritten === 0) {\n                throw new TypeError('bytesWritten must be greater than 0 when calling respond() on a readable stream');\n            }\n            if (firstDescriptor.bytesFilled + bytesWritten > firstDescriptor.byteLength) {\n                throw new RangeError('bytesWritten out of range');\n            }\n        }\n        firstDescriptor.buffer = TransferArrayBuffer(firstDescriptor.buffer);\n        ReadableByteStreamControllerRespondInternal(controller, bytesWritten);\n    }\n    function ReadableByteStreamControllerRespondWithNewView(controller, view) {\n        const firstDescriptor = controller._pendingPullIntos.peek();\n        const state = controller._controlledReadableByteStream._state;\n        if (state === 'closed') {\n            if (view.byteLength !== 0) {\n                throw new TypeError('The view\\'s length must be 0 when calling respondWithNewView() on a closed stream');\n            }\n        }\n        else {\n            if (view.byteLength === 0) {\n                throw new TypeError('The view\\'s length must be greater than 0 when calling respondWithNewView() on a readable stream');\n            }\n        }\n        if (firstDescriptor.byteOffset + firstDescriptor.bytesFilled !== view.byteOffset) {\n            throw new RangeError('The region specified by view does not match byobRequest');\n        }\n        if (firstDescriptor.bufferByteLength !== view.buffer.byteLength) {\n            throw new RangeError('The buffer of view has different capacity than byobRequest');\n        }\n        if (firstDescriptor.bytesFilled + view.byteLength > firstDescriptor.byteLength) {\n            throw new RangeError('The region specified by view is larger than byobRequest');\n        }\n        const viewByteLength = view.byteLength;\n        firstDescriptor.buffer = TransferArrayBuffer(view.buffer);\n        ReadableByteStreamControllerRespondInternal(controller, viewByteLength);\n    }\n    function SetUpReadableByteStreamController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, autoAllocateChunkSize) {\n        controller._controlledReadableByteStream = stream;\n        controller._pullAgain = false;\n        controller._pulling = false;\n        controller._byobRequest = null;\n        // Need to set the slots so that the assert doesn't fire. In the spec the slots already exist implicitly.\n        controller._queue = controller._queueTotalSize = undefined;\n        ResetQueue(controller);\n        controller._closeRequested = false;\n        controller._started = false;\n        controller._strategyHWM = highWaterMark;\n        controller._pullAlgorithm = pullAlgorithm;\n        controller._cancelAlgorithm = cancelAlgorithm;\n        controller._autoAllocateChunkSize = autoAllocateChunkSize;\n        controller._pendingPullIntos = new SimpleQueue();\n        stream._readableStreamController = controller;\n        const startResult = startAlgorithm();\n        uponPromise(promiseResolvedWith(startResult), () => {\n            controller._started = true;\n            ReadableByteStreamControllerCallPullIfNeeded(controller);\n        }, r => {\n            ReadableByteStreamControllerError(controller, r);\n        });\n    }\n    function SetUpReadableByteStreamControllerFromUnderlyingSource(stream, underlyingByteSource, highWaterMark) {\n        const controller = Object.create(ReadableByteStreamController.prototype);\n        let startAlgorithm = () => undefined;\n        let pullAlgorithm = () => promiseResolvedWith(undefined);\n        let cancelAlgorithm = () => promiseResolvedWith(undefined);\n        if (underlyingByteSource.start !== undefined) {\n            startAlgorithm = () => underlyingByteSource.start(controller);\n        }\n        if (underlyingByteSource.pull !== undefined) {\n            pullAlgorithm = () => underlyingByteSource.pull(controller);\n        }\n        if (underlyingByteSource.cancel !== undefined) {\n            cancelAlgorithm = reason => underlyingByteSource.cancel(reason);\n        }\n        const autoAllocateChunkSize = underlyingByteSource.autoAllocateChunkSize;\n        if (autoAllocateChunkSize === 0) {\n            throw new TypeError('autoAllocateChunkSize must be greater than 0');\n        }\n        SetUpReadableByteStreamController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, autoAllocateChunkSize);\n    }\n    function SetUpReadableStreamBYOBRequest(request, controller, view) {\n        request._associatedReadableByteStreamController = controller;\n        request._view = view;\n    }\n    // Helper functions for the ReadableStreamBYOBRequest.\n    function byobRequestBrandCheckException(name) {\n        return new TypeError(`ReadableStreamBYOBRequest.prototype.${name} can only be used on a ReadableStreamBYOBRequest`);\n    }\n    // Helper functions for the ReadableByteStreamController.\n    function byteStreamControllerBrandCheckException(name) {\n        return new TypeError(`ReadableByteStreamController.prototype.${name} can only be used on a ReadableByteStreamController`);\n    }\n\n    // Abstract operations for the ReadableStream.\n    function AcquireReadableStreamBYOBReader(stream) {\n        return new ReadableStreamBYOBReader(stream);\n    }\n    // ReadableStream API exposed for controllers.\n    function ReadableStreamAddReadIntoRequest(stream, readIntoRequest) {\n        stream._reader._readIntoRequests.push(readIntoRequest);\n    }\n    function ReadableStreamFulfillReadIntoRequest(stream, chunk, done) {\n        const reader = stream._reader;\n        const readIntoRequest = reader._readIntoRequests.shift();\n        if (done) {\n            readIntoRequest._closeSteps(chunk);\n        }\n        else {\n            readIntoRequest._chunkSteps(chunk);\n        }\n    }\n    function ReadableStreamGetNumReadIntoRequests(stream) {\n        return stream._reader._readIntoRequests.length;\n    }\n    function ReadableStreamHasBYOBReader(stream) {\n        const reader = stream._reader;\n        if (reader === undefined) {\n            return false;\n        }\n        if (!IsReadableStreamBYOBReader(reader)) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * A BYOB reader vended by a {@link ReadableStream}.\n     *\n     * @public\n     */\n    class ReadableStreamBYOBReader {\n        constructor(stream) {\n            assertRequiredArgument(stream, 1, 'ReadableStreamBYOBReader');\n            assertReadableStream(stream, 'First parameter');\n            if (IsReadableStreamLocked(stream)) {\n                throw new TypeError('This stream has already been locked for exclusive reading by another reader');\n            }\n            if (!IsReadableByteStreamController(stream._readableStreamController)) {\n                throw new TypeError('Cannot construct a ReadableStreamBYOBReader for a stream not constructed with a byte ' +\n                    'source');\n            }\n            ReadableStreamReaderGenericInitialize(this, stream);\n            this._readIntoRequests = new SimpleQueue();\n        }\n        /**\n         * Returns a promise that will be fulfilled when the stream becomes closed, or rejected if the stream ever errors or\n         * the reader's lock is released before the stream finishes closing.\n         */\n        get closed() {\n            if (!IsReadableStreamBYOBReader(this)) {\n                return promiseRejectedWith(byobReaderBrandCheckException('closed'));\n            }\n            return this._closedPromise;\n        }\n        /**\n         * If the reader is active, behaves the same as {@link ReadableStream.cancel | stream.cancel(reason)}.\n         */\n        cancel(reason = undefined) {\n            if (!IsReadableStreamBYOBReader(this)) {\n                return promiseRejectedWith(byobReaderBrandCheckException('cancel'));\n            }\n            if (this._ownerReadableStream === undefined) {\n                return promiseRejectedWith(readerLockException('cancel'));\n            }\n            return ReadableStreamReaderGenericCancel(this, reason);\n        }\n        /**\n         * Attempts to reads bytes into view, and returns a promise resolved with the result.\n         *\n         * If reading a chunk causes the queue to become empty, more data will be pulled from the underlying source.\n         */\n        read(view) {\n            if (!IsReadableStreamBYOBReader(this)) {\n                return promiseRejectedWith(byobReaderBrandCheckException('read'));\n            }\n            if (!ArrayBuffer.isView(view)) {\n                return promiseRejectedWith(new TypeError('view must be an array buffer view'));\n            }\n            if (view.byteLength === 0) {\n                return promiseRejectedWith(new TypeError('view must have non-zero byteLength'));\n            }\n            if (view.buffer.byteLength === 0) {\n                return promiseRejectedWith(new TypeError(`view's buffer must have non-zero byteLength`));\n            }\n            if (IsDetachedBuffer(view.buffer)) ;\n            if (this._ownerReadableStream === undefined) {\n                return promiseRejectedWith(readerLockException('read from'));\n            }\n            let resolvePromise;\n            let rejectPromise;\n            const promise = newPromise((resolve, reject) => {\n                resolvePromise = resolve;\n                rejectPromise = reject;\n            });\n            const readIntoRequest = {\n                _chunkSteps: chunk => resolvePromise({ value: chunk, done: false }),\n                _closeSteps: chunk => resolvePromise({ value: chunk, done: true }),\n                _errorSteps: e => rejectPromise(e)\n            };\n            ReadableStreamBYOBReaderRead(this, view, readIntoRequest);\n            return promise;\n        }\n        /**\n         * Releases the reader's lock on the corresponding stream. After the lock is released, the reader is no longer active.\n         * If the associated stream is errored when the lock is released, the reader will appear errored in the same way\n         * from now on; otherwise, the reader will appear closed.\n         *\n         * A reader's lock cannot be released while it still has a pending read request, i.e., if a promise returned by\n         * the reader's {@link ReadableStreamBYOBReader.read | read()} method has not yet been settled. Attempting to\n         * do so will throw a `TypeError` and leave the reader locked to the stream.\n         */\n        releaseLock() {\n            if (!IsReadableStreamBYOBReader(this)) {\n                throw byobReaderBrandCheckException('releaseLock');\n            }\n            if (this._ownerReadableStream === undefined) {\n                return;\n            }\n            if (this._readIntoRequests.length > 0) {\n                throw new TypeError('Tried to release a reader lock when that reader has pending read() calls un-settled');\n            }\n            ReadableStreamReaderGenericRelease(this);\n        }\n    }\n    Object.defineProperties(ReadableStreamBYOBReader.prototype, {\n        cancel: { enumerable: true },\n        read: { enumerable: true },\n        releaseLock: { enumerable: true },\n        closed: { enumerable: true }\n    });\n    if (typeof SymbolPolyfill.toStringTag === 'symbol') {\n        Object.defineProperty(ReadableStreamBYOBReader.prototype, SymbolPolyfill.toStringTag, {\n            value: 'ReadableStreamBYOBReader',\n            configurable: true\n        });\n    }\n    // Abstract operations for the readers.\n    function IsReadableStreamBYOBReader(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_readIntoRequests')) {\n            return false;\n        }\n        return x instanceof ReadableStreamBYOBReader;\n    }\n    function ReadableStreamBYOBReaderRead(reader, view, readIntoRequest) {\n        const stream = reader._ownerReadableStream;\n        stream._disturbed = true;\n        if (stream._state === 'errored') {\n            readIntoRequest._errorSteps(stream._storedError);\n        }\n        else {\n            ReadableByteStreamControllerPullInto(stream._readableStreamController, view, readIntoRequest);\n        }\n    }\n    // Helper functions for the ReadableStreamBYOBReader.\n    function byobReaderBrandCheckException(name) {\n        return new TypeError(`ReadableStreamBYOBReader.prototype.${name} can only be used on a ReadableStreamBYOBReader`);\n    }\n\n    function ExtractHighWaterMark(strategy, defaultHWM) {\n        const { highWaterMark } = strategy;\n        if (highWaterMark === undefined) {\n            return defaultHWM;\n        }\n        if (NumberIsNaN(highWaterMark) || highWaterMark < 0) {\n            throw new RangeError('Invalid highWaterMark');\n        }\n        return highWaterMark;\n    }\n    function ExtractSizeAlgorithm(strategy) {\n        const { size } = strategy;\n        if (!size) {\n            return () => 1;\n        }\n        return size;\n    }\n\n    function convertQueuingStrategy(init, context) {\n        assertDictionary(init, context);\n        const highWaterMark = init === null || init === void 0 ? void 0 : init.highWaterMark;\n        const size = init === null || init === void 0 ? void 0 : init.size;\n        return {\n            highWaterMark: highWaterMark === undefined ? undefined : convertUnrestrictedDouble(highWaterMark),\n            size: size === undefined ? undefined : convertQueuingStrategySize(size, `${context} has member 'size' that`)\n        };\n    }\n    function convertQueuingStrategySize(fn, context) {\n        assertFunction(fn, context);\n        return chunk => convertUnrestrictedDouble(fn(chunk));\n    }\n\n    function convertUnderlyingSink(original, context) {\n        assertDictionary(original, context);\n        const abort = original === null || original === void 0 ? void 0 : original.abort;\n        const close = original === null || original === void 0 ? void 0 : original.close;\n        const start = original === null || original === void 0 ? void 0 : original.start;\n        const type = original === null || original === void 0 ? void 0 : original.type;\n        const write = original === null || original === void 0 ? void 0 : original.write;\n        return {\n            abort: abort === undefined ?\n                undefined :\n                convertUnderlyingSinkAbortCallback(abort, original, `${context} has member 'abort' that`),\n            close: close === undefined ?\n                undefined :\n                convertUnderlyingSinkCloseCallback(close, original, `${context} has member 'close' that`),\n            start: start === undefined ?\n                undefined :\n                convertUnderlyingSinkStartCallback(start, original, `${context} has member 'start' that`),\n            write: write === undefined ?\n                undefined :\n                convertUnderlyingSinkWriteCallback(write, original, `${context} has member 'write' that`),\n            type\n        };\n    }\n    function convertUnderlyingSinkAbortCallback(fn, original, context) {\n        assertFunction(fn, context);\n        return (reason) => promiseCall(fn, original, [reason]);\n    }\n    function convertUnderlyingSinkCloseCallback(fn, original, context) {\n        assertFunction(fn, context);\n        return () => promiseCall(fn, original, []);\n    }\n    function convertUnderlyingSinkStartCallback(fn, original, context) {\n        assertFunction(fn, context);\n        return (controller) => reflectCall(fn, original, [controller]);\n    }\n    function convertUnderlyingSinkWriteCallback(fn, original, context) {\n        assertFunction(fn, context);\n        return (chunk, controller) => promiseCall(fn, original, [chunk, controller]);\n    }\n\n    function assertWritableStream(x, context) {\n        if (!IsWritableStream(x)) {\n            throw new TypeError(`${context} is not a WritableStream.`);\n        }\n    }\n\n    function isAbortSignal(value) {\n        if (typeof value !== 'object' || value === null) {\n            return false;\n        }\n        try {\n            return typeof value.aborted === 'boolean';\n        }\n        catch (_a) {\n            // AbortSignal.prototype.aborted throws if its brand check fails\n            return false;\n        }\n    }\n    const supportsAbortController = typeof AbortController === 'function';\n    /**\n     * Construct a new AbortController, if supported by the platform.\n     *\n     * @internal\n     */\n    function createAbortController() {\n        if (supportsAbortController) {\n            return new AbortController();\n        }\n        return undefined;\n    }\n\n    /**\n     * A writable stream represents a destination for data, into which you can write.\n     *\n     * @public\n     */\n    class WritableStream {\n        constructor(rawUnderlyingSink = {}, rawStrategy = {}) {\n            if (rawUnderlyingSink === undefined) {\n                rawUnderlyingSink = null;\n            }\n            else {\n                assertObject(rawUnderlyingSink, 'First parameter');\n            }\n            const strategy = convertQueuingStrategy(rawStrategy, 'Second parameter');\n            const underlyingSink = convertUnderlyingSink(rawUnderlyingSink, 'First parameter');\n            InitializeWritableStream(this);\n            const type = underlyingSink.type;\n            if (type !== undefined) {\n                throw new RangeError('Invalid type is specified');\n            }\n            const sizeAlgorithm = ExtractSizeAlgorithm(strategy);\n            const highWaterMark = ExtractHighWaterMark(strategy, 1);\n            SetUpWritableStreamDefaultControllerFromUnderlyingSink(this, underlyingSink, highWaterMark, sizeAlgorithm);\n        }\n        /**\n         * Returns whether or not the writable stream is locked to a writer.\n         */\n        get locked() {\n            if (!IsWritableStream(this)) {\n                throw streamBrandCheckException$2('locked');\n            }\n            return IsWritableStreamLocked(this);\n        }\n        /**\n         * Aborts the stream, signaling that the producer can no longer successfully write to the stream and it is to be\n         * immediately moved to an errored state, with any queued-up writes discarded. This will also execute any abort\n         * mechanism of the underlying sink.\n         *\n         * The returned promise will fulfill if the stream shuts down successfully, or reject if the underlying sink signaled\n         * that there was an error doing so. Additionally, it will reject with a `TypeError` (without attempting to cancel\n         * the stream) if the stream is currently locked.\n         */\n        abort(reason = undefined) {\n            if (!IsWritableStream(this)) {\n                return promiseRejectedWith(streamBrandCheckException$2('abort'));\n            }\n            if (IsWritableStreamLocked(this)) {\n                return promiseRejectedWith(new TypeError('Cannot abort a stream that already has a writer'));\n            }\n            return WritableStreamAbort(this, reason);\n        }\n        /**\n         * Closes the stream. The underlying sink will finish processing any previously-written chunks, before invoking its\n         * close behavior. During this time any further attempts to write will fail (without erroring the stream).\n         *\n         * The method returns a promise that will fulfill if all remaining chunks are successfully written and the stream\n         * successfully closes, or rejects if an error is encountered during this process. Additionally, it will reject with\n         * a `TypeError` (without attempting to cancel the stream) if the stream is currently locked.\n         */\n        close() {\n            if (!IsWritableStream(this)) {\n                return promiseRejectedWith(streamBrandCheckException$2('close'));\n            }\n            if (IsWritableStreamLocked(this)) {\n                return promiseRejectedWith(new TypeError('Cannot close a stream that already has a writer'));\n            }\n            if (WritableStreamCloseQueuedOrInFlight(this)) {\n                return promiseRejectedWith(new TypeError('Cannot close an already-closing stream'));\n            }\n            return WritableStreamClose(this);\n        }\n        /**\n         * Creates a {@link WritableStreamDefaultWriter | writer} and locks the stream to the new writer. While the stream\n         * is locked, no other writer can be acquired until this one is released.\n         *\n         * This functionality is especially useful for creating abstractions that desire the ability to write to a stream\n         * without interruption or interleaving. By getting a writer for the stream, you can ensure nobody else can write at\n         * the same time, which would cause the resulting written data to be unpredictable and probably useless.\n         */\n        getWriter() {\n            if (!IsWritableStream(this)) {\n                throw streamBrandCheckException$2('getWriter');\n            }\n            return AcquireWritableStreamDefaultWriter(this);\n        }\n    }\n    Object.defineProperties(WritableStream.prototype, {\n        abort: { enumerable: true },\n        close: { enumerable: true },\n        getWriter: { enumerable: true },\n        locked: { enumerable: true }\n    });\n    if (typeof SymbolPolyfill.toStringTag === 'symbol') {\n        Object.defineProperty(WritableStream.prototype, SymbolPolyfill.toStringTag, {\n            value: 'WritableStream',\n            configurable: true\n        });\n    }\n    // Abstract operations for the WritableStream.\n    function AcquireWritableStreamDefaultWriter(stream) {\n        return new WritableStreamDefaultWriter(stream);\n    }\n    // Throws if and only if startAlgorithm throws.\n    function CreateWritableStream(startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, highWaterMark = 1, sizeAlgorithm = () => 1) {\n        const stream = Object.create(WritableStream.prototype);\n        InitializeWritableStream(stream);\n        const controller = Object.create(WritableStreamDefaultController.prototype);\n        SetUpWritableStreamDefaultController(stream, controller, startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, highWaterMark, sizeAlgorithm);\n        return stream;\n    }\n    function InitializeWritableStream(stream) {\n        stream._state = 'writable';\n        // The error that will be reported by new method calls once the state becomes errored. Only set when [[state]] is\n        // 'erroring' or 'errored'. May be set to an undefined value.\n        stream._storedError = undefined;\n        stream._writer = undefined;\n        // Initialize to undefined first because the constructor of the controller checks this\n        // variable to validate the caller.\n        stream._writableStreamController = undefined;\n        // This queue is placed here instead of the writer class in order to allow for passing a writer to the next data\n        // producer without waiting for the queued writes to finish.\n        stream._writeRequests = new SimpleQueue();\n        // Write requests are removed from _writeRequests when write() is called on the underlying sink. This prevents\n        // them from being erroneously rejected on error. If a write() call is in-flight, the request is stored here.\n        stream._inFlightWriteRequest = undefined;\n        // The promise that was returned from writer.close(). Stored here because it may be fulfilled after the writer\n        // has been detached.\n        stream._closeRequest = undefined;\n        // Close request is removed from _closeRequest when close() is called on the underlying sink. This prevents it\n        // from being erroneously rejected on error. If a close() call is in-flight, the request is stored here.\n        stream._inFlightCloseRequest = undefined;\n        // The promise that was returned from writer.abort(). This may also be fulfilled after the writer has detached.\n        stream._pendingAbortRequest = undefined;\n        // The backpressure signal set by the controller.\n        stream._backpressure = false;\n    }\n    function IsWritableStream(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_writableStreamController')) {\n            return false;\n        }\n        return x instanceof WritableStream;\n    }\n    function IsWritableStreamLocked(stream) {\n        if (stream._writer === undefined) {\n            return false;\n        }\n        return true;\n    }\n    function WritableStreamAbort(stream, reason) {\n        var _a;\n        if (stream._state === 'closed' || stream._state === 'errored') {\n            return promiseResolvedWith(undefined);\n        }\n        stream._writableStreamController._abortReason = reason;\n        (_a = stream._writableStreamController._abortController) === null || _a === void 0 ? void 0 : _a.abort();\n        // TypeScript narrows the type of `stream._state` down to 'writable' | 'erroring',\n        // but it doesn't know that signaling abort runs author code that might have changed the state.\n        // Widen the type again by casting to WritableStreamState.\n        const state = stream._state;\n        if (state === 'closed' || state === 'errored') {\n            return promiseResolvedWith(undefined);\n        }\n        if (stream._pendingAbortRequest !== undefined) {\n            return stream._pendingAbortRequest._promise;\n        }\n        let wasAlreadyErroring = false;\n        if (state === 'erroring') {\n            wasAlreadyErroring = true;\n            // reason will not be used, so don't keep a reference to it.\n            reason = undefined;\n        }\n        const promise = newPromise((resolve, reject) => {\n            stream._pendingAbortRequest = {\n                _promise: undefined,\n                _resolve: resolve,\n                _reject: reject,\n                _reason: reason,\n                _wasAlreadyErroring: wasAlreadyErroring\n            };\n        });\n        stream._pendingAbortRequest._promise = promise;\n        if (!wasAlreadyErroring) {\n            WritableStreamStartErroring(stream, reason);\n        }\n        return promise;\n    }\n    function WritableStreamClose(stream) {\n        const state = stream._state;\n        if (state === 'closed' || state === 'errored') {\n            return promiseRejectedWith(new TypeError(`The stream (in ${state} state) is not in the writable state and cannot be closed`));\n        }\n        const promise = newPromise((resolve, reject) => {\n            const closeRequest = {\n                _resolve: resolve,\n                _reject: reject\n            };\n            stream._closeRequest = closeRequest;\n        });\n        const writer = stream._writer;\n        if (writer !== undefined && stream._backpressure && state === 'writable') {\n            defaultWriterReadyPromiseResolve(writer);\n        }\n        WritableStreamDefaultControllerClose(stream._writableStreamController);\n        return promise;\n    }\n    // WritableStream API exposed for controllers.\n    function WritableStreamAddWriteRequest(stream) {\n        const promise = newPromise((resolve, reject) => {\n            const writeRequest = {\n                _resolve: resolve,\n                _reject: reject\n            };\n            stream._writeRequests.push(writeRequest);\n        });\n        return promise;\n    }\n    function WritableStreamDealWithRejection(stream, error) {\n        const state = stream._state;\n        if (state === 'writable') {\n            WritableStreamStartErroring(stream, error);\n            return;\n        }\n        WritableStreamFinishErroring(stream);\n    }\n    function WritableStreamStartErroring(stream, reason) {\n        const controller = stream._writableStreamController;\n        stream._state = 'erroring';\n        stream._storedError = reason;\n        const writer = stream._writer;\n        if (writer !== undefined) {\n            WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, reason);\n        }\n        if (!WritableStreamHasOperationMarkedInFlight(stream) && controller._started) {\n            WritableStreamFinishErroring(stream);\n        }\n    }\n    function WritableStreamFinishErroring(stream) {\n        stream._state = 'errored';\n        stream._writableStreamController[ErrorSteps]();\n        const storedError = stream._storedError;\n        stream._writeRequests.forEach(writeRequest => {\n            writeRequest._reject(storedError);\n        });\n        stream._writeRequests = new SimpleQueue();\n        if (stream._pendingAbortRequest === undefined) {\n            WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n            return;\n        }\n        const abortRequest = stream._pendingAbortRequest;\n        stream._pendingAbortRequest = undefined;\n        if (abortRequest._wasAlreadyErroring) {\n            abortRequest._reject(storedError);\n            WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n            return;\n        }\n        const promise = stream._writableStreamController[AbortSteps](abortRequest._reason);\n        uponPromise(promise, () => {\n            abortRequest._resolve();\n            WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n        }, (reason) => {\n            abortRequest._reject(reason);\n            WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n        });\n    }\n    function WritableStreamFinishInFlightWrite(stream) {\n        stream._inFlightWriteRequest._resolve(undefined);\n        stream._inFlightWriteRequest = undefined;\n    }\n    function WritableStreamFinishInFlightWriteWithError(stream, error) {\n        stream._inFlightWriteRequest._reject(error);\n        stream._inFlightWriteRequest = undefined;\n        WritableStreamDealWithRejection(stream, error);\n    }\n    function WritableStreamFinishInFlightClose(stream) {\n        stream._inFlightCloseRequest._resolve(undefined);\n        stream._inFlightCloseRequest = undefined;\n        const state = stream._state;\n        if (state === 'erroring') {\n            // The error was too late to do anything, so it is ignored.\n            stream._storedError = undefined;\n            if (stream._pendingAbortRequest !== undefined) {\n                stream._pendingAbortRequest._resolve();\n                stream._pendingAbortRequest = undefined;\n            }\n        }\n        stream._state = 'closed';\n        const writer = stream._writer;\n        if (writer !== undefined) {\n            defaultWriterClosedPromiseResolve(writer);\n        }\n    }\n    function WritableStreamFinishInFlightCloseWithError(stream, error) {\n        stream._inFlightCloseRequest._reject(error);\n        stream._inFlightCloseRequest = undefined;\n        // Never execute sink abort() after sink close().\n        if (stream._pendingAbortRequest !== undefined) {\n            stream._pendingAbortRequest._reject(error);\n            stream._pendingAbortRequest = undefined;\n        }\n        WritableStreamDealWithRejection(stream, error);\n    }\n    // TODO(ricea): Fix alphabetical order.\n    function WritableStreamCloseQueuedOrInFlight(stream) {\n        if (stream._closeRequest === undefined && stream._inFlightCloseRequest === undefined) {\n            return false;\n        }\n        return true;\n    }\n    function WritableStreamHasOperationMarkedInFlight(stream) {\n        if (stream._inFlightWriteRequest === undefined && stream._inFlightCloseRequest === undefined) {\n            return false;\n        }\n        return true;\n    }\n    function WritableStreamMarkCloseRequestInFlight(stream) {\n        stream._inFlightCloseRequest = stream._closeRequest;\n        stream._closeRequest = undefined;\n    }\n    function WritableStreamMarkFirstWriteRequestInFlight(stream) {\n        stream._inFlightWriteRequest = stream._writeRequests.shift();\n    }\n    function WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream) {\n        if (stream._closeRequest !== undefined) {\n            stream._closeRequest._reject(stream._storedError);\n            stream._closeRequest = undefined;\n        }\n        const writer = stream._writer;\n        if (writer !== undefined) {\n            defaultWriterClosedPromiseReject(writer, stream._storedError);\n        }\n    }\n    function WritableStreamUpdateBackpressure(stream, backpressure) {\n        const writer = stream._writer;\n        if (writer !== undefined && backpressure !== stream._backpressure) {\n            if (backpressure) {\n                defaultWriterReadyPromiseReset(writer);\n            }\n            else {\n                defaultWriterReadyPromiseResolve(writer);\n            }\n        }\n        stream._backpressure = backpressure;\n    }\n    /**\n     * A default writer vended by a {@link WritableStream}.\n     *\n     * @public\n     */\n    class WritableStreamDefaultWriter {\n        constructor(stream) {\n            assertRequiredArgument(stream, 1, 'WritableStreamDefaultWriter');\n            assertWritableStream(stream, 'First parameter');\n            if (IsWritableStreamLocked(stream)) {\n                throw new TypeError('This stream has already been locked for exclusive writing by another writer');\n            }\n            this._ownerWritableStream = stream;\n            stream._writer = this;\n            const state = stream._state;\n            if (state === 'writable') {\n                if (!WritableStreamCloseQueuedOrInFlight(stream) && stream._backpressure) {\n                    defaultWriterReadyPromiseInitialize(this);\n                }\n                else {\n                    defaultWriterReadyPromiseInitializeAsResolved(this);\n                }\n                defaultWriterClosedPromiseInitialize(this);\n            }\n            else if (state === 'erroring') {\n                defaultWriterReadyPromiseInitializeAsRejected(this, stream._storedError);\n                defaultWriterClosedPromiseInitialize(this);\n            }\n            else if (state === 'closed') {\n                defaultWriterReadyPromiseInitializeAsResolved(this);\n                defaultWriterClosedPromiseInitializeAsResolved(this);\n            }\n            else {\n                const storedError = stream._storedError;\n                defaultWriterReadyPromiseInitializeAsRejected(this, storedError);\n                defaultWriterClosedPromiseInitializeAsRejected(this, storedError);\n            }\n        }\n        /**\n         * Returns a promise that will be fulfilled when the stream becomes closed, or rejected if the stream ever errors or\n         * the writer’s lock is released before the stream finishes closing.\n         */\n        get closed() {\n            if (!IsWritableStreamDefaultWriter(this)) {\n                return promiseRejectedWith(defaultWriterBrandCheckException('closed'));\n            }\n            return this._closedPromise;\n        }\n        /**\n         * Returns the desired size to fill the stream’s internal queue. It can be negative, if the queue is over-full.\n         * A producer can use this information to determine the right amount of data to write.\n         *\n         * It will be `null` if the stream cannot be successfully written to (due to either being errored, or having an abort\n         * queued up). It will return zero if the stream is closed. And the getter will throw an exception if invoked when\n         * the writer’s lock is released.\n         */\n        get desiredSize() {\n            if (!IsWritableStreamDefaultWriter(this)) {\n                throw defaultWriterBrandCheckException('desiredSize');\n            }\n            if (this._ownerWritableStream === undefined) {\n                throw defaultWriterLockException('desiredSize');\n            }\n            return WritableStreamDefaultWriterGetDesiredSize(this);\n        }\n        /**\n         * Returns a promise that will be fulfilled when the desired size to fill the stream’s internal queue transitions\n         * from non-positive to positive, signaling that it is no longer applying backpressure. Once the desired size dips\n         * back to zero or below, the getter will return a new promise that stays pending until the next transition.\n         *\n         * If the stream becomes errored or aborted, or the writer’s lock is released, the returned promise will become\n         * rejected.\n         */\n        get ready() {\n            if (!IsWritableStreamDefaultWriter(this)) {\n                return promiseRejectedWith(defaultWriterBrandCheckException('ready'));\n            }\n            return this._readyPromise;\n        }\n        /**\n         * If the reader is active, behaves the same as {@link WritableStream.abort | stream.abort(reason)}.\n         */\n        abort(reason = undefined) {\n            if (!IsWritableStreamDefaultWriter(this)) {\n                return promiseRejectedWith(defaultWriterBrandCheckException('abort'));\n            }\n            if (this._ownerWritableStream === undefined) {\n                return promiseRejectedWith(defaultWriterLockException('abort'));\n            }\n            return WritableStreamDefaultWriterAbort(this, reason);\n        }\n        /**\n         * If the reader is active, behaves the same as {@link WritableStream.close | stream.close()}.\n         */\n        close() {\n            if (!IsWritableStreamDefaultWriter(this)) {\n                return promiseRejectedWith(defaultWriterBrandCheckException('close'));\n            }\n            const stream = this._ownerWritableStream;\n            if (stream === undefined) {\n                return promiseRejectedWith(defaultWriterLockException('close'));\n            }\n            if (WritableStreamCloseQueuedOrInFlight(stream)) {\n                return promiseRejectedWith(new TypeError('Cannot close an already-closing stream'));\n            }\n            return WritableStreamDefaultWriterClose(this);\n        }\n        /**\n         * Releases the writer’s lock on the corresponding stream. After the lock is released, the writer is no longer active.\n         * If the associated stream is errored when the lock is released, the writer will appear errored in the same way from\n         * now on; otherwise, the writer will appear closed.\n         *\n         * Note that the lock can still be released even if some ongoing writes have not yet finished (i.e. even if the\n         * promises returned from previous calls to {@link WritableStreamDefaultWriter.write | write()} have not yet settled).\n         * It’s not necessary to hold the lock on the writer for the duration of the write; the lock instead simply prevents\n         * other producers from writing in an interleaved manner.\n         */\n        releaseLock() {\n            if (!IsWritableStreamDefaultWriter(this)) {\n                throw defaultWriterBrandCheckException('releaseLock');\n            }\n            const stream = this._ownerWritableStream;\n            if (stream === undefined) {\n                return;\n            }\n            WritableStreamDefaultWriterRelease(this);\n        }\n        write(chunk = undefined) {\n            if (!IsWritableStreamDefaultWriter(this)) {\n                return promiseRejectedWith(defaultWriterBrandCheckException('write'));\n            }\n            if (this._ownerWritableStream === undefined) {\n                return promiseRejectedWith(defaultWriterLockException('write to'));\n            }\n            return WritableStreamDefaultWriterWrite(this, chunk);\n        }\n    }\n    Object.defineProperties(WritableStreamDefaultWriter.prototype, {\n        abort: { enumerable: true },\n        close: { enumerable: true },\n        releaseLock: { enumerable: true },\n        write: { enumerable: true },\n        closed: { enumerable: true },\n        desiredSize: { enumerable: true },\n        ready: { enumerable: true }\n    });\n    if (typeof SymbolPolyfill.toStringTag === 'symbol') {\n        Object.defineProperty(WritableStreamDefaultWriter.prototype, SymbolPolyfill.toStringTag, {\n            value: 'WritableStreamDefaultWriter',\n            configurable: true\n        });\n    }\n    // Abstract operations for the WritableStreamDefaultWriter.\n    function IsWritableStreamDefaultWriter(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_ownerWritableStream')) {\n            return false;\n        }\n        return x instanceof WritableStreamDefaultWriter;\n    }\n    // A client of WritableStreamDefaultWriter may use these functions directly to bypass state check.\n    function WritableStreamDefaultWriterAbort(writer, reason) {\n        const stream = writer._ownerWritableStream;\n        return WritableStreamAbort(stream, reason);\n    }\n    function WritableStreamDefaultWriterClose(writer) {\n        const stream = writer._ownerWritableStream;\n        return WritableStreamClose(stream);\n    }\n    function WritableStreamDefaultWriterCloseWithErrorPropagation(writer) {\n        const stream = writer._ownerWritableStream;\n        const state = stream._state;\n        if (WritableStreamCloseQueuedOrInFlight(stream) || state === 'closed') {\n            return promiseResolvedWith(undefined);\n        }\n        if (state === 'errored') {\n            return promiseRejectedWith(stream._storedError);\n        }\n        return WritableStreamDefaultWriterClose(writer);\n    }\n    function WritableStreamDefaultWriterEnsureClosedPromiseRejected(writer, error) {\n        if (writer._closedPromiseState === 'pending') {\n            defaultWriterClosedPromiseReject(writer, error);\n        }\n        else {\n            defaultWriterClosedPromiseResetToRejected(writer, error);\n        }\n    }\n    function WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, error) {\n        if (writer._readyPromiseState === 'pending') {\n            defaultWriterReadyPromiseReject(writer, error);\n        }\n        else {\n            defaultWriterReadyPromiseResetToRejected(writer, error);\n        }\n    }\n    function WritableStreamDefaultWriterGetDesiredSize(writer) {\n        const stream = writer._ownerWritableStream;\n        const state = stream._state;\n        if (state === 'errored' || state === 'erroring') {\n            return null;\n        }\n        if (state === 'closed') {\n            return 0;\n        }\n        return WritableStreamDefaultControllerGetDesiredSize(stream._writableStreamController);\n    }\n    function WritableStreamDefaultWriterRelease(writer) {\n        const stream = writer._ownerWritableStream;\n        const releasedError = new TypeError(`Writer was released and can no longer be used to monitor the stream's closedness`);\n        WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, releasedError);\n        // The state transitions to \"errored\" before the sink abort() method runs, but the writer.closed promise is not\n        // rejected until afterwards. This means that simply testing state will not work.\n        WritableStreamDefaultWriterEnsureClosedPromiseRejected(writer, releasedError);\n        stream._writer = undefined;\n        writer._ownerWritableStream = undefined;\n    }\n    function WritableStreamDefaultWriterWrite(writer, chunk) {\n        const stream = writer._ownerWritableStream;\n        const controller = stream._writableStreamController;\n        const chunkSize = WritableStreamDefaultControllerGetChunkSize(controller, chunk);\n        if (stream !== writer._ownerWritableStream) {\n            return promiseRejectedWith(defaultWriterLockException('write to'));\n        }\n        const state = stream._state;\n        if (state === 'errored') {\n            return promiseRejectedWith(stream._storedError);\n        }\n        if (WritableStreamCloseQueuedOrInFlight(stream) || state === 'closed') {\n            return promiseRejectedWith(new TypeError('The stream is closing or closed and cannot be written to'));\n        }\n        if (state === 'erroring') {\n            return promiseRejectedWith(stream._storedError);\n        }\n        const promise = WritableStreamAddWriteRequest(stream);\n        WritableStreamDefaultControllerWrite(controller, chunk, chunkSize);\n        return promise;\n    }\n    const closeSentinel = {};\n    /**\n     * Allows control of a {@link WritableStream | writable stream}'s state and internal queue.\n     *\n     * @public\n     */\n    class WritableStreamDefaultController {\n        constructor() {\n            throw new TypeError('Illegal constructor');\n        }\n        /**\n         * The reason which was passed to `WritableStream.abort(reason)` when the stream was aborted.\n         *\n         * @deprecated\n         *  This property has been removed from the specification, see https://github.com/whatwg/streams/pull/1177.\n         *  Use {@link WritableStreamDefaultController.signal}'s `reason` instead.\n         */\n        get abortReason() {\n            if (!IsWritableStreamDefaultController(this)) {\n                throw defaultControllerBrandCheckException$2('abortReason');\n            }\n            return this._abortReason;\n        }\n        /**\n         * An `AbortSignal` that can be used to abort the pending write or close operation when the stream is aborted.\n         */\n        get signal() {\n            if (!IsWritableStreamDefaultController(this)) {\n                throw defaultControllerBrandCheckException$2('signal');\n            }\n            if (this._abortController === undefined) {\n                // Older browsers or older Node versions may not support `AbortController` or `AbortSignal`.\n                // We don't want to bundle and ship an `AbortController` polyfill together with our polyfill,\n                // so instead we only implement support for `signal` if we find a global `AbortController` constructor.\n                throw new TypeError('WritableStreamDefaultController.prototype.signal is not supported');\n            }\n            return this._abortController.signal;\n        }\n        /**\n         * Closes the controlled writable stream, making all future interactions with it fail with the given error `e`.\n         *\n         * This method is rarely used, since usually it suffices to return a rejected promise from one of the underlying\n         * sink's methods. However, it can be useful for suddenly shutting down a stream in response to an event outside the\n         * normal lifecycle of interactions with the underlying sink.\n         */\n        error(e = undefined) {\n            if (!IsWritableStreamDefaultController(this)) {\n                throw defaultControllerBrandCheckException$2('error');\n            }\n            const state = this._controlledWritableStream._state;\n            if (state !== 'writable') {\n                // The stream is closed, errored or will be soon. The sink can't do anything useful if it gets an error here, so\n                // just treat it as a no-op.\n                return;\n            }\n            WritableStreamDefaultControllerError(this, e);\n        }\n        /** @internal */\n        [AbortSteps](reason) {\n            const result = this._abortAlgorithm(reason);\n            WritableStreamDefaultControllerClearAlgorithms(this);\n            return result;\n        }\n        /** @internal */\n        [ErrorSteps]() {\n            ResetQueue(this);\n        }\n    }\n    Object.defineProperties(WritableStreamDefaultController.prototype, {\n        abortReason: { enumerable: true },\n        signal: { enumerable: true },\n        error: { enumerable: true }\n    });\n    if (typeof SymbolPolyfill.toStringTag === 'symbol') {\n        Object.defineProperty(WritableStreamDefaultController.prototype, SymbolPolyfill.toStringTag, {\n            value: 'WritableStreamDefaultController',\n            configurable: true\n        });\n    }\n    // Abstract operations implementing interface required by the WritableStream.\n    function IsWritableStreamDefaultController(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_controlledWritableStream')) {\n            return false;\n        }\n        return x instanceof WritableStreamDefaultController;\n    }\n    function SetUpWritableStreamDefaultController(stream, controller, startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, highWaterMark, sizeAlgorithm) {\n        controller._controlledWritableStream = stream;\n        stream._writableStreamController = controller;\n        // Need to set the slots so that the assert doesn't fire. In the spec the slots already exist implicitly.\n        controller._queue = undefined;\n        controller._queueTotalSize = undefined;\n        ResetQueue(controller);\n        controller._abortReason = undefined;\n        controller._abortController = createAbortController();\n        controller._started = false;\n        controller._strategySizeAlgorithm = sizeAlgorithm;\n        controller._strategyHWM = highWaterMark;\n        controller._writeAlgorithm = writeAlgorithm;\n        controller._closeAlgorithm = closeAlgorithm;\n        controller._abortAlgorithm = abortAlgorithm;\n        const backpressure = WritableStreamDefaultControllerGetBackpressure(controller);\n        WritableStreamUpdateBackpressure(stream, backpressure);\n        const startResult = startAlgorithm();\n        const startPromise = promiseResolvedWith(startResult);\n        uponPromise(startPromise, () => {\n            controller._started = true;\n            WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n        }, r => {\n            controller._started = true;\n            WritableStreamDealWithRejection(stream, r);\n        });\n    }\n    function SetUpWritableStreamDefaultControllerFromUnderlyingSink(stream, underlyingSink, highWaterMark, sizeAlgorithm) {\n        const controller = Object.create(WritableStreamDefaultController.prototype);\n        let startAlgorithm = () => undefined;\n        let writeAlgorithm = () => promiseResolvedWith(undefined);\n        let closeAlgorithm = () => promiseResolvedWith(undefined);\n        let abortAlgorithm = () => promiseResolvedWith(undefined);\n        if (underlyingSink.start !== undefined) {\n            startAlgorithm = () => underlyingSink.start(controller);\n        }\n        if (underlyingSink.write !== undefined) {\n            writeAlgorithm = chunk => underlyingSink.write(chunk, controller);\n        }\n        if (underlyingSink.close !== undefined) {\n            closeAlgorithm = () => underlyingSink.close();\n        }\n        if (underlyingSink.abort !== undefined) {\n            abortAlgorithm = reason => underlyingSink.abort(reason);\n        }\n        SetUpWritableStreamDefaultController(stream, controller, startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, highWaterMark, sizeAlgorithm);\n    }\n    // ClearAlgorithms may be called twice. Erroring the same stream in multiple ways will often result in redundant calls.\n    function WritableStreamDefaultControllerClearAlgorithms(controller) {\n        controller._writeAlgorithm = undefined;\n        controller._closeAlgorithm = undefined;\n        controller._abortAlgorithm = undefined;\n        controller._strategySizeAlgorithm = undefined;\n    }\n    function WritableStreamDefaultControllerClose(controller) {\n        EnqueueValueWithSize(controller, closeSentinel, 0);\n        WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n    }\n    function WritableStreamDefaultControllerGetChunkSize(controller, chunk) {\n        try {\n            return controller._strategySizeAlgorithm(chunk);\n        }\n        catch (chunkSizeE) {\n            WritableStreamDefaultControllerErrorIfNeeded(controller, chunkSizeE);\n            return 1;\n        }\n    }\n    function WritableStreamDefaultControllerGetDesiredSize(controller) {\n        return controller._strategyHWM - controller._queueTotalSize;\n    }\n    function WritableStreamDefaultControllerWrite(controller, chunk, chunkSize) {\n        try {\n            EnqueueValueWithSize(controller, chunk, chunkSize);\n        }\n        catch (enqueueE) {\n            WritableStreamDefaultControllerErrorIfNeeded(controller, enqueueE);\n            return;\n        }\n        const stream = controller._controlledWritableStream;\n        if (!WritableStreamCloseQueuedOrInFlight(stream) && stream._state === 'writable') {\n            const backpressure = WritableStreamDefaultControllerGetBackpressure(controller);\n            WritableStreamUpdateBackpressure(stream, backpressure);\n        }\n        WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n    }\n    // Abstract operations for the WritableStreamDefaultController.\n    function WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller) {\n        const stream = controller._controlledWritableStream;\n        if (!controller._started) {\n            return;\n        }\n        if (stream._inFlightWriteRequest !== undefined) {\n            return;\n        }\n        const state = stream._state;\n        if (state === 'erroring') {\n            WritableStreamFinishErroring(stream);\n            return;\n        }\n        if (controller._queue.length === 0) {\n            return;\n        }\n        const value = PeekQueueValue(controller);\n        if (value === closeSentinel) {\n            WritableStreamDefaultControllerProcessClose(controller);\n        }\n        else {\n            WritableStreamDefaultControllerProcessWrite(controller, value);\n        }\n    }\n    function WritableStreamDefaultControllerErrorIfNeeded(controller, error) {\n        if (controller._controlledWritableStream._state === 'writable') {\n            WritableStreamDefaultControllerError(controller, error);\n        }\n    }\n    function WritableStreamDefaultControllerProcessClose(controller) {\n        const stream = controller._controlledWritableStream;\n        WritableStreamMarkCloseRequestInFlight(stream);\n        DequeueValue(controller);\n        const sinkClosePromise = controller._closeAlgorithm();\n        WritableStreamDefaultControllerClearAlgorithms(controller);\n        uponPromise(sinkClosePromise, () => {\n            WritableStreamFinishInFlightClose(stream);\n        }, reason => {\n            WritableStreamFinishInFlightCloseWithError(stream, reason);\n        });\n    }\n    function WritableStreamDefaultControllerProcessWrite(controller, chunk) {\n        const stream = controller._controlledWritableStream;\n        WritableStreamMarkFirstWriteRequestInFlight(stream);\n        const sinkWritePromise = controller._writeAlgorithm(chunk);\n        uponPromise(sinkWritePromise, () => {\n            WritableStreamFinishInFlightWrite(stream);\n            const state = stream._state;\n            DequeueValue(controller);\n            if (!WritableStreamCloseQueuedOrInFlight(stream) && state === 'writable') {\n                const backpressure = WritableStreamDefaultControllerGetBackpressure(controller);\n                WritableStreamUpdateBackpressure(stream, backpressure);\n            }\n            WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n        }, reason => {\n            if (stream._state === 'writable') {\n                WritableStreamDefaultControllerClearAlgorithms(controller);\n            }\n            WritableStreamFinishInFlightWriteWithError(stream, reason);\n        });\n    }\n    function WritableStreamDefaultControllerGetBackpressure(controller) {\n        const desiredSize = WritableStreamDefaultControllerGetDesiredSize(controller);\n        return desiredSize <= 0;\n    }\n    // A client of WritableStreamDefaultController may use these functions directly to bypass state check.\n    function WritableStreamDefaultControllerError(controller, error) {\n        const stream = controller._controlledWritableStream;\n        WritableStreamDefaultControllerClearAlgorithms(controller);\n        WritableStreamStartErroring(stream, error);\n    }\n    // Helper functions for the WritableStream.\n    function streamBrandCheckException$2(name) {\n        return new TypeError(`WritableStream.prototype.${name} can only be used on a WritableStream`);\n    }\n    // Helper functions for the WritableStreamDefaultController.\n    function defaultControllerBrandCheckException$2(name) {\n        return new TypeError(`WritableStreamDefaultController.prototype.${name} can only be used on a WritableStreamDefaultController`);\n    }\n    // Helper functions for the WritableStreamDefaultWriter.\n    function defaultWriterBrandCheckException(name) {\n        return new TypeError(`WritableStreamDefaultWriter.prototype.${name} can only be used on a WritableStreamDefaultWriter`);\n    }\n    function defaultWriterLockException(name) {\n        return new TypeError('Cannot ' + name + ' a stream using a released writer');\n    }\n    function defaultWriterClosedPromiseInitialize(writer) {\n        writer._closedPromise = newPromise((resolve, reject) => {\n            writer._closedPromise_resolve = resolve;\n            writer._closedPromise_reject = reject;\n            writer._closedPromiseState = 'pending';\n        });\n    }\n    function defaultWriterClosedPromiseInitializeAsRejected(writer, reason) {\n        defaultWriterClosedPromiseInitialize(writer);\n        defaultWriterClosedPromiseReject(writer, reason);\n    }\n    function defaultWriterClosedPromiseInitializeAsResolved(writer) {\n        defaultWriterClosedPromiseInitialize(writer);\n        defaultWriterClosedPromiseResolve(writer);\n    }\n    function defaultWriterClosedPromiseReject(writer, reason) {\n        if (writer._closedPromise_reject === undefined) {\n            return;\n        }\n        setPromiseIsHandledToTrue(writer._closedPromise);\n        writer._closedPromise_reject(reason);\n        writer._closedPromise_resolve = undefined;\n        writer._closedPromise_reject = undefined;\n        writer._closedPromiseState = 'rejected';\n    }\n    function defaultWriterClosedPromiseResetToRejected(writer, reason) {\n        defaultWriterClosedPromiseInitializeAsRejected(writer, reason);\n    }\n    function defaultWriterClosedPromiseResolve(writer) {\n        if (writer._closedPromise_resolve === undefined) {\n            return;\n        }\n        writer._closedPromise_resolve(undefined);\n        writer._closedPromise_resolve = undefined;\n        writer._closedPromise_reject = undefined;\n        writer._closedPromiseState = 'resolved';\n    }\n    function defaultWriterReadyPromiseInitialize(writer) {\n        writer._readyPromise = newPromise((resolve, reject) => {\n            writer._readyPromise_resolve = resolve;\n            writer._readyPromise_reject = reject;\n        });\n        writer._readyPromiseState = 'pending';\n    }\n    function defaultWriterReadyPromiseInitializeAsRejected(writer, reason) {\n        defaultWriterReadyPromiseInitialize(writer);\n        defaultWriterReadyPromiseReject(writer, reason);\n    }\n    function defaultWriterReadyPromiseInitializeAsResolved(writer) {\n        defaultWriterReadyPromiseInitialize(writer);\n        defaultWriterReadyPromiseResolve(writer);\n    }\n    function defaultWriterReadyPromiseReject(writer, reason) {\n        if (writer._readyPromise_reject === undefined) {\n            return;\n        }\n        setPromiseIsHandledToTrue(writer._readyPromise);\n        writer._readyPromise_reject(reason);\n        writer._readyPromise_resolve = undefined;\n        writer._readyPromise_reject = undefined;\n        writer._readyPromiseState = 'rejected';\n    }\n    function defaultWriterReadyPromiseReset(writer) {\n        defaultWriterReadyPromiseInitialize(writer);\n    }\n    function defaultWriterReadyPromiseResetToRejected(writer, reason) {\n        defaultWriterReadyPromiseInitializeAsRejected(writer, reason);\n    }\n    function defaultWriterReadyPromiseResolve(writer) {\n        if (writer._readyPromise_resolve === undefined) {\n            return;\n        }\n        writer._readyPromise_resolve(undefined);\n        writer._readyPromise_resolve = undefined;\n        writer._readyPromise_reject = undefined;\n        writer._readyPromiseState = 'fulfilled';\n    }\n\n    /// <reference lib=\"dom\" />\n    const NativeDOMException = typeof DOMException !== 'undefined' ? DOMException : undefined;\n\n    /// <reference types=\"node\" />\n    function isDOMExceptionConstructor(ctor) {\n        if (!(typeof ctor === 'function' || typeof ctor === 'object')) {\n            return false;\n        }\n        try {\n            new ctor();\n            return true;\n        }\n        catch (_a) {\n            return false;\n        }\n    }\n    function createDOMExceptionPolyfill() {\n        // eslint-disable-next-line no-shadow\n        const ctor = function DOMException(message, name) {\n            this.message = message || '';\n            this.name = name || 'Error';\n            if (Error.captureStackTrace) {\n                Error.captureStackTrace(this, this.constructor);\n            }\n        };\n        ctor.prototype = Object.create(Error.prototype);\n        Object.defineProperty(ctor.prototype, 'constructor', { value: ctor, writable: true, configurable: true });\n        return ctor;\n    }\n    // eslint-disable-next-line no-redeclare\n    const DOMException$1 = isDOMExceptionConstructor(NativeDOMException) ? NativeDOMException : createDOMExceptionPolyfill();\n\n    function ReadableStreamPipeTo(source, dest, preventClose, preventAbort, preventCancel, signal) {\n        const reader = AcquireReadableStreamDefaultReader(source);\n        const writer = AcquireWritableStreamDefaultWriter(dest);\n        source._disturbed = true;\n        let shuttingDown = false;\n        // This is used to keep track of the spec's requirement that we wait for ongoing writes during shutdown.\n        let currentWrite = promiseResolvedWith(undefined);\n        return newPromise((resolve, reject) => {\n            let abortAlgorithm;\n            if (signal !== undefined) {\n                abortAlgorithm = () => {\n                    const error = new DOMException$1('Aborted', 'AbortError');\n                    const actions = [];\n                    if (!preventAbort) {\n                        actions.push(() => {\n                            if (dest._state === 'writable') {\n                                return WritableStreamAbort(dest, error);\n                            }\n                            return promiseResolvedWith(undefined);\n                        });\n                    }\n                    if (!preventCancel) {\n                        actions.push(() => {\n                            if (source._state === 'readable') {\n                                return ReadableStreamCancel(source, error);\n                            }\n                            return promiseResolvedWith(undefined);\n                        });\n                    }\n                    shutdownWithAction(() => Promise.all(actions.map(action => action())), true, error);\n                };\n                if (signal.aborted) {\n                    abortAlgorithm();\n                    return;\n                }\n                signal.addEventListener('abort', abortAlgorithm);\n            }\n            // Using reader and writer, read all chunks from this and write them to dest\n            // - Backpressure must be enforced\n            // - Shutdown must stop all activity\n            function pipeLoop() {\n                return newPromise((resolveLoop, rejectLoop) => {\n                    function next(done) {\n                        if (done) {\n                            resolveLoop();\n                        }\n                        else {\n                            // Use `PerformPromiseThen` instead of `uponPromise` to avoid\n                            // adding unnecessary `.catch(rethrowAssertionErrorRejection)` handlers\n                            PerformPromiseThen(pipeStep(), next, rejectLoop);\n                        }\n                    }\n                    next(false);\n                });\n            }\n            function pipeStep() {\n                if (shuttingDown) {\n                    return promiseResolvedWith(true);\n                }\n                return PerformPromiseThen(writer._readyPromise, () => {\n                    return newPromise((resolveRead, rejectRead) => {\n                        ReadableStreamDefaultReaderRead(reader, {\n                            _chunkSteps: chunk => {\n                                currentWrite = PerformPromiseThen(WritableStreamDefaultWriterWrite(writer, chunk), undefined, noop);\n                                resolveRead(false);\n                            },\n                            _closeSteps: () => resolveRead(true),\n                            _errorSteps: rejectRead\n                        });\n                    });\n                });\n            }\n            // Errors must be propagated forward\n            isOrBecomesErrored(source, reader._closedPromise, storedError => {\n                if (!preventAbort) {\n                    shutdownWithAction(() => WritableStreamAbort(dest, storedError), true, storedError);\n                }\n                else {\n                    shutdown(true, storedError);\n                }\n            });\n            // Errors must be propagated backward\n            isOrBecomesErrored(dest, writer._closedPromise, storedError => {\n                if (!preventCancel) {\n                    shutdownWithAction(() => ReadableStreamCancel(source, storedError), true, storedError);\n                }\n                else {\n                    shutdown(true, storedError);\n                }\n            });\n            // Closing must be propagated forward\n            isOrBecomesClosed(source, reader._closedPromise, () => {\n                if (!preventClose) {\n                    shutdownWithAction(() => WritableStreamDefaultWriterCloseWithErrorPropagation(writer));\n                }\n                else {\n                    shutdown();\n                }\n            });\n            // Closing must be propagated backward\n            if (WritableStreamCloseQueuedOrInFlight(dest) || dest._state === 'closed') {\n                const destClosed = new TypeError('the destination writable stream closed before all data could be piped to it');\n                if (!preventCancel) {\n                    shutdownWithAction(() => ReadableStreamCancel(source, destClosed), true, destClosed);\n                }\n                else {\n                    shutdown(true, destClosed);\n                }\n            }\n            setPromiseIsHandledToTrue(pipeLoop());\n            function waitForWritesToFinish() {\n                // Another write may have started while we were waiting on this currentWrite, so we have to be sure to wait\n                // for that too.\n                const oldCurrentWrite = currentWrite;\n                return PerformPromiseThen(currentWrite, () => oldCurrentWrite !== currentWrite ? waitForWritesToFinish() : undefined);\n            }\n            function isOrBecomesErrored(stream, promise, action) {\n                if (stream._state === 'errored') {\n                    action(stream._storedError);\n                }\n                else {\n                    uponRejection(promise, action);\n                }\n            }\n            function isOrBecomesClosed(stream, promise, action) {\n                if (stream._state === 'closed') {\n                    action();\n                }\n                else {\n                    uponFulfillment(promise, action);\n                }\n            }\n            function shutdownWithAction(action, originalIsError, originalError) {\n                if (shuttingDown) {\n                    return;\n                }\n                shuttingDown = true;\n                if (dest._state === 'writable' && !WritableStreamCloseQueuedOrInFlight(dest)) {\n                    uponFulfillment(waitForWritesToFinish(), doTheRest);\n                }\n                else {\n                    doTheRest();\n                }\n                function doTheRest() {\n                    uponPromise(action(), () => finalize(originalIsError, originalError), newError => finalize(true, newError));\n                }\n            }\n            function shutdown(isError, error) {\n                if (shuttingDown) {\n                    return;\n                }\n                shuttingDown = true;\n                if (dest._state === 'writable' && !WritableStreamCloseQueuedOrInFlight(dest)) {\n                    uponFulfillment(waitForWritesToFinish(), () => finalize(isError, error));\n                }\n                else {\n                    finalize(isError, error);\n                }\n            }\n            function finalize(isError, error) {\n                WritableStreamDefaultWriterRelease(writer);\n                ReadableStreamReaderGenericRelease(reader);\n                if (signal !== undefined) {\n                    signal.removeEventListener('abort', abortAlgorithm);\n                }\n                if (isError) {\n                    reject(error);\n                }\n                else {\n                    resolve(undefined);\n                }\n            }\n        });\n    }\n\n    /**\n     * Allows control of a {@link ReadableStream | readable stream}'s state and internal queue.\n     *\n     * @public\n     */\n    class ReadableStreamDefaultController {\n        constructor() {\n            throw new TypeError('Illegal constructor');\n        }\n        /**\n         * Returns the desired size to fill the controlled stream's internal queue. It can be negative, if the queue is\n         * over-full. An underlying source ought to use this information to determine when and how to apply backpressure.\n         */\n        get desiredSize() {\n            if (!IsReadableStreamDefaultController(this)) {\n                throw defaultControllerBrandCheckException$1('desiredSize');\n            }\n            return ReadableStreamDefaultControllerGetDesiredSize(this);\n        }\n        /**\n         * Closes the controlled readable stream. Consumers will still be able to read any previously-enqueued chunks from\n         * the stream, but once those are read, the stream will become closed.\n         */\n        close() {\n            if (!IsReadableStreamDefaultController(this)) {\n                throw defaultControllerBrandCheckException$1('close');\n            }\n            if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(this)) {\n                throw new TypeError('The stream is not in a state that permits close');\n            }\n            ReadableStreamDefaultControllerClose(this);\n        }\n        enqueue(chunk = undefined) {\n            if (!IsReadableStreamDefaultController(this)) {\n                throw defaultControllerBrandCheckException$1('enqueue');\n            }\n            if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(this)) {\n                throw new TypeError('The stream is not in a state that permits enqueue');\n            }\n            return ReadableStreamDefaultControllerEnqueue(this, chunk);\n        }\n        /**\n         * Errors the controlled readable stream, making all future interactions with it fail with the given error `e`.\n         */\n        error(e = undefined) {\n            if (!IsReadableStreamDefaultController(this)) {\n                throw defaultControllerBrandCheckException$1('error');\n            }\n            ReadableStreamDefaultControllerError(this, e);\n        }\n        /** @internal */\n        [CancelSteps](reason) {\n            ResetQueue(this);\n            const result = this._cancelAlgorithm(reason);\n            ReadableStreamDefaultControllerClearAlgorithms(this);\n            return result;\n        }\n        /** @internal */\n        [PullSteps](readRequest) {\n            const stream = this._controlledReadableStream;\n            if (this._queue.length > 0) {\n                const chunk = DequeueValue(this);\n                if (this._closeRequested && this._queue.length === 0) {\n                    ReadableStreamDefaultControllerClearAlgorithms(this);\n                    ReadableStreamClose(stream);\n                }\n                else {\n                    ReadableStreamDefaultControllerCallPullIfNeeded(this);\n                }\n                readRequest._chunkSteps(chunk);\n            }\n            else {\n                ReadableStreamAddReadRequest(stream, readRequest);\n                ReadableStreamDefaultControllerCallPullIfNeeded(this);\n            }\n        }\n    }\n    Object.defineProperties(ReadableStreamDefaultController.prototype, {\n        close: { enumerable: true },\n        enqueue: { enumerable: true },\n        error: { enumerable: true },\n        desiredSize: { enumerable: true }\n    });\n    if (typeof SymbolPolyfill.toStringTag === 'symbol') {\n        Object.defineProperty(ReadableStreamDefaultController.prototype, SymbolPolyfill.toStringTag, {\n            value: 'ReadableStreamDefaultController',\n            configurable: true\n        });\n    }\n    // Abstract operations for the ReadableStreamDefaultController.\n    function IsReadableStreamDefaultController(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_controlledReadableStream')) {\n            return false;\n        }\n        return x instanceof ReadableStreamDefaultController;\n    }\n    function ReadableStreamDefaultControllerCallPullIfNeeded(controller) {\n        const shouldPull = ReadableStreamDefaultControllerShouldCallPull(controller);\n        if (!shouldPull) {\n            return;\n        }\n        if (controller._pulling) {\n            controller._pullAgain = true;\n            return;\n        }\n        controller._pulling = true;\n        const pullPromise = controller._pullAlgorithm();\n        uponPromise(pullPromise, () => {\n            controller._pulling = false;\n            if (controller._pullAgain) {\n                controller._pullAgain = false;\n                ReadableStreamDefaultControllerCallPullIfNeeded(controller);\n            }\n        }, e => {\n            ReadableStreamDefaultControllerError(controller, e);\n        });\n    }\n    function ReadableStreamDefaultControllerShouldCallPull(controller) {\n        const stream = controller._controlledReadableStream;\n        if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(controller)) {\n            return false;\n        }\n        if (!controller._started) {\n            return false;\n        }\n        if (IsReadableStreamLocked(stream) && ReadableStreamGetNumReadRequests(stream) > 0) {\n            return true;\n        }\n        const desiredSize = ReadableStreamDefaultControllerGetDesiredSize(controller);\n        if (desiredSize > 0) {\n            return true;\n        }\n        return false;\n    }\n    function ReadableStreamDefaultControllerClearAlgorithms(controller) {\n        controller._pullAlgorithm = undefined;\n        controller._cancelAlgorithm = undefined;\n        controller._strategySizeAlgorithm = undefined;\n    }\n    // A client of ReadableStreamDefaultController may use these functions directly to bypass state check.\n    function ReadableStreamDefaultControllerClose(controller) {\n        if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(controller)) {\n            return;\n        }\n        const stream = controller._controlledReadableStream;\n        controller._closeRequested = true;\n        if (controller._queue.length === 0) {\n            ReadableStreamDefaultControllerClearAlgorithms(controller);\n            ReadableStreamClose(stream);\n        }\n    }\n    function ReadableStreamDefaultControllerEnqueue(controller, chunk) {\n        if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(controller)) {\n            return;\n        }\n        const stream = controller._controlledReadableStream;\n        if (IsReadableStreamLocked(stream) && ReadableStreamGetNumReadRequests(stream) > 0) {\n            ReadableStreamFulfillReadRequest(stream, chunk, false);\n        }\n        else {\n            let chunkSize;\n            try {\n                chunkSize = controller._strategySizeAlgorithm(chunk);\n            }\n            catch (chunkSizeE) {\n                ReadableStreamDefaultControllerError(controller, chunkSizeE);\n                throw chunkSizeE;\n            }\n            try {\n                EnqueueValueWithSize(controller, chunk, chunkSize);\n            }\n            catch (enqueueE) {\n                ReadableStreamDefaultControllerError(controller, enqueueE);\n                throw enqueueE;\n            }\n        }\n        ReadableStreamDefaultControllerCallPullIfNeeded(controller);\n    }\n    function ReadableStreamDefaultControllerError(controller, e) {\n        const stream = controller._controlledReadableStream;\n        if (stream._state !== 'readable') {\n            return;\n        }\n        ResetQueue(controller);\n        ReadableStreamDefaultControllerClearAlgorithms(controller);\n        ReadableStreamError(stream, e);\n    }\n    function ReadableStreamDefaultControllerGetDesiredSize(controller) {\n        const state = controller._controlledReadableStream._state;\n        if (state === 'errored') {\n            return null;\n        }\n        if (state === 'closed') {\n            return 0;\n        }\n        return controller._strategyHWM - controller._queueTotalSize;\n    }\n    // This is used in the implementation of TransformStream.\n    function ReadableStreamDefaultControllerHasBackpressure(controller) {\n        if (ReadableStreamDefaultControllerShouldCallPull(controller)) {\n            return false;\n        }\n        return true;\n    }\n    function ReadableStreamDefaultControllerCanCloseOrEnqueue(controller) {\n        const state = controller._controlledReadableStream._state;\n        if (!controller._closeRequested && state === 'readable') {\n            return true;\n        }\n        return false;\n    }\n    function SetUpReadableStreamDefaultController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, sizeAlgorithm) {\n        controller._controlledReadableStream = stream;\n        controller._queue = undefined;\n        controller._queueTotalSize = undefined;\n        ResetQueue(controller);\n        controller._started = false;\n        controller._closeRequested = false;\n        controller._pullAgain = false;\n        controller._pulling = false;\n        controller._strategySizeAlgorithm = sizeAlgorithm;\n        controller._strategyHWM = highWaterMark;\n        controller._pullAlgorithm = pullAlgorithm;\n        controller._cancelAlgorithm = cancelAlgorithm;\n        stream._readableStreamController = controller;\n        const startResult = startAlgorithm();\n        uponPromise(promiseResolvedWith(startResult), () => {\n            controller._started = true;\n            ReadableStreamDefaultControllerCallPullIfNeeded(controller);\n        }, r => {\n            ReadableStreamDefaultControllerError(controller, r);\n        });\n    }\n    function SetUpReadableStreamDefaultControllerFromUnderlyingSource(stream, underlyingSource, highWaterMark, sizeAlgorithm) {\n        const controller = Object.create(ReadableStreamDefaultController.prototype);\n        let startAlgorithm = () => undefined;\n        let pullAlgorithm = () => promiseResolvedWith(undefined);\n        let cancelAlgorithm = () => promiseResolvedWith(undefined);\n        if (underlyingSource.start !== undefined) {\n            startAlgorithm = () => underlyingSource.start(controller);\n        }\n        if (underlyingSource.pull !== undefined) {\n            pullAlgorithm = () => underlyingSource.pull(controller);\n        }\n        if (underlyingSource.cancel !== undefined) {\n            cancelAlgorithm = reason => underlyingSource.cancel(reason);\n        }\n        SetUpReadableStreamDefaultController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, sizeAlgorithm);\n    }\n    // Helper functions for the ReadableStreamDefaultController.\n    function defaultControllerBrandCheckException$1(name) {\n        return new TypeError(`ReadableStreamDefaultController.prototype.${name} can only be used on a ReadableStreamDefaultController`);\n    }\n\n    function ReadableStreamTee(stream, cloneForBranch2) {\n        if (IsReadableByteStreamController(stream._readableStreamController)) {\n            return ReadableByteStreamTee(stream);\n        }\n        return ReadableStreamDefaultTee(stream);\n    }\n    function ReadableStreamDefaultTee(stream, cloneForBranch2) {\n        const reader = AcquireReadableStreamDefaultReader(stream);\n        let reading = false;\n        let readAgain = false;\n        let canceled1 = false;\n        let canceled2 = false;\n        let reason1;\n        let reason2;\n        let branch1;\n        let branch2;\n        let resolveCancelPromise;\n        const cancelPromise = newPromise(resolve => {\n            resolveCancelPromise = resolve;\n        });\n        function pullAlgorithm() {\n            if (reading) {\n                readAgain = true;\n                return promiseResolvedWith(undefined);\n            }\n            reading = true;\n            const readRequest = {\n                _chunkSteps: chunk => {\n                    // This needs to be delayed a microtask because it takes at least a microtask to detect errors (using\n                    // reader._closedPromise below), and we want errors in stream to error both branches immediately. We cannot let\n                    // successful synchronously-available reads get ahead of asynchronously-available errors.\n                    queueMicrotask(() => {\n                        readAgain = false;\n                        const chunk1 = chunk;\n                        const chunk2 = chunk;\n                        // There is no way to access the cloning code right now in the reference implementation.\n                        // If we add one then we'll need an implementation for serializable objects.\n                        // if (!canceled2 && cloneForBranch2) {\n                        //   chunk2 = StructuredDeserialize(StructuredSerialize(chunk2));\n                        // }\n                        if (!canceled1) {\n                            ReadableStreamDefaultControllerEnqueue(branch1._readableStreamController, chunk1);\n                        }\n                        if (!canceled2) {\n                            ReadableStreamDefaultControllerEnqueue(branch2._readableStreamController, chunk2);\n                        }\n                        reading = false;\n                        if (readAgain) {\n                            pullAlgorithm();\n                        }\n                    });\n                },\n                _closeSteps: () => {\n                    reading = false;\n                    if (!canceled1) {\n                        ReadableStreamDefaultControllerClose(branch1._readableStreamController);\n                    }\n                    if (!canceled2) {\n                        ReadableStreamDefaultControllerClose(branch2._readableStreamController);\n                    }\n                    if (!canceled1 || !canceled2) {\n                        resolveCancelPromise(undefined);\n                    }\n                },\n                _errorSteps: () => {\n                    reading = false;\n                }\n            };\n            ReadableStreamDefaultReaderRead(reader, readRequest);\n            return promiseResolvedWith(undefined);\n        }\n        function cancel1Algorithm(reason) {\n            canceled1 = true;\n            reason1 = reason;\n            if (canceled2) {\n                const compositeReason = CreateArrayFromList([reason1, reason2]);\n                const cancelResult = ReadableStreamCancel(stream, compositeReason);\n                resolveCancelPromise(cancelResult);\n            }\n            return cancelPromise;\n        }\n        function cancel2Algorithm(reason) {\n            canceled2 = true;\n            reason2 = reason;\n            if (canceled1) {\n                const compositeReason = CreateArrayFromList([reason1, reason2]);\n                const cancelResult = ReadableStreamCancel(stream, compositeReason);\n                resolveCancelPromise(cancelResult);\n            }\n            return cancelPromise;\n        }\n        function startAlgorithm() {\n            // do nothing\n        }\n        branch1 = CreateReadableStream(startAlgorithm, pullAlgorithm, cancel1Algorithm);\n        branch2 = CreateReadableStream(startAlgorithm, pullAlgorithm, cancel2Algorithm);\n        uponRejection(reader._closedPromise, (r) => {\n            ReadableStreamDefaultControllerError(branch1._readableStreamController, r);\n            ReadableStreamDefaultControllerError(branch2._readableStreamController, r);\n            if (!canceled1 || !canceled2) {\n                resolveCancelPromise(undefined);\n            }\n        });\n        return [branch1, branch2];\n    }\n    function ReadableByteStreamTee(stream) {\n        let reader = AcquireReadableStreamDefaultReader(stream);\n        let reading = false;\n        let readAgainForBranch1 = false;\n        let readAgainForBranch2 = false;\n        let canceled1 = false;\n        let canceled2 = false;\n        let reason1;\n        let reason2;\n        let branch1;\n        let branch2;\n        let resolveCancelPromise;\n        const cancelPromise = newPromise(resolve => {\n            resolveCancelPromise = resolve;\n        });\n        function forwardReaderError(thisReader) {\n            uponRejection(thisReader._closedPromise, r => {\n                if (thisReader !== reader) {\n                    return;\n                }\n                ReadableByteStreamControllerError(branch1._readableStreamController, r);\n                ReadableByteStreamControllerError(branch2._readableStreamController, r);\n                if (!canceled1 || !canceled2) {\n                    resolveCancelPromise(undefined);\n                }\n            });\n        }\n        function pullWithDefaultReader() {\n            if (IsReadableStreamBYOBReader(reader)) {\n                ReadableStreamReaderGenericRelease(reader);\n                reader = AcquireReadableStreamDefaultReader(stream);\n                forwardReaderError(reader);\n            }\n            const readRequest = {\n                _chunkSteps: chunk => {\n                    // This needs to be delayed a microtask because it takes at least a microtask to detect errors (using\n                    // reader._closedPromise below), and we want errors in stream to error both branches immediately. We cannot let\n                    // successful synchronously-available reads get ahead of asynchronously-available errors.\n                    queueMicrotask(() => {\n                        readAgainForBranch1 = false;\n                        readAgainForBranch2 = false;\n                        const chunk1 = chunk;\n                        let chunk2 = chunk;\n                        if (!canceled1 && !canceled2) {\n                            try {\n                                chunk2 = CloneAsUint8Array(chunk);\n                            }\n                            catch (cloneE) {\n                                ReadableByteStreamControllerError(branch1._readableStreamController, cloneE);\n                                ReadableByteStreamControllerError(branch2._readableStreamController, cloneE);\n                                resolveCancelPromise(ReadableStreamCancel(stream, cloneE));\n                                return;\n                            }\n                        }\n                        if (!canceled1) {\n                            ReadableByteStreamControllerEnqueue(branch1._readableStreamController, chunk1);\n                        }\n                        if (!canceled2) {\n                            ReadableByteStreamControllerEnqueue(branch2._readableStreamController, chunk2);\n                        }\n                        reading = false;\n                        if (readAgainForBranch1) {\n                            pull1Algorithm();\n                        }\n                        else if (readAgainForBranch2) {\n                            pull2Algorithm();\n                        }\n                    });\n                },\n                _closeSteps: () => {\n                    reading = false;\n                    if (!canceled1) {\n                        ReadableByteStreamControllerClose(branch1._readableStreamController);\n                    }\n                    if (!canceled2) {\n                        ReadableByteStreamControllerClose(branch2._readableStreamController);\n                    }\n                    if (branch1._readableStreamController._pendingPullIntos.length > 0) {\n                        ReadableByteStreamControllerRespond(branch1._readableStreamController, 0);\n                    }\n                    if (branch2._readableStreamController._pendingPullIntos.length > 0) {\n                        ReadableByteStreamControllerRespond(branch2._readableStreamController, 0);\n                    }\n                    if (!canceled1 || !canceled2) {\n                        resolveCancelPromise(undefined);\n                    }\n                },\n                _errorSteps: () => {\n                    reading = false;\n                }\n            };\n            ReadableStreamDefaultReaderRead(reader, readRequest);\n        }\n        function pullWithBYOBReader(view, forBranch2) {\n            if (IsReadableStreamDefaultReader(reader)) {\n                ReadableStreamReaderGenericRelease(reader);\n                reader = AcquireReadableStreamBYOBReader(stream);\n                forwardReaderError(reader);\n            }\n            const byobBranch = forBranch2 ? branch2 : branch1;\n            const otherBranch = forBranch2 ? branch1 : branch2;\n            const readIntoRequest = {\n                _chunkSteps: chunk => {\n                    // This needs to be delayed a microtask because it takes at least a microtask to detect errors (using\n                    // reader._closedPromise below), and we want errors in stream to error both branches immediately. We cannot let\n                    // successful synchronously-available reads get ahead of asynchronously-available errors.\n                    queueMicrotask(() => {\n                        readAgainForBranch1 = false;\n                        readAgainForBranch2 = false;\n                        const byobCanceled = forBranch2 ? canceled2 : canceled1;\n                        const otherCanceled = forBranch2 ? canceled1 : canceled2;\n                        if (!otherCanceled) {\n                            let clonedChunk;\n                            try {\n                                clonedChunk = CloneAsUint8Array(chunk);\n                            }\n                            catch (cloneE) {\n                                ReadableByteStreamControllerError(byobBranch._readableStreamController, cloneE);\n                                ReadableByteStreamControllerError(otherBranch._readableStreamController, cloneE);\n                                resolveCancelPromise(ReadableStreamCancel(stream, cloneE));\n                                return;\n                            }\n                            if (!byobCanceled) {\n                                ReadableByteStreamControllerRespondWithNewView(byobBranch._readableStreamController, chunk);\n                            }\n                            ReadableByteStreamControllerEnqueue(otherBranch._readableStreamController, clonedChunk);\n                        }\n                        else if (!byobCanceled) {\n                            ReadableByteStreamControllerRespondWithNewView(byobBranch._readableStreamController, chunk);\n                        }\n                        reading = false;\n                        if (readAgainForBranch1) {\n                            pull1Algorithm();\n                        }\n                        else if (readAgainForBranch2) {\n                            pull2Algorithm();\n                        }\n                    });\n                },\n                _closeSteps: chunk => {\n                    reading = false;\n                    const byobCanceled = forBranch2 ? canceled2 : canceled1;\n                    const otherCanceled = forBranch2 ? canceled1 : canceled2;\n                    if (!byobCanceled) {\n                        ReadableByteStreamControllerClose(byobBranch._readableStreamController);\n                    }\n                    if (!otherCanceled) {\n                        ReadableByteStreamControllerClose(otherBranch._readableStreamController);\n                    }\n                    if (chunk !== undefined) {\n                        if (!byobCanceled) {\n                            ReadableByteStreamControllerRespondWithNewView(byobBranch._readableStreamController, chunk);\n                        }\n                        if (!otherCanceled && otherBranch._readableStreamController._pendingPullIntos.length > 0) {\n                            ReadableByteStreamControllerRespond(otherBranch._readableStreamController, 0);\n                        }\n                    }\n                    if (!byobCanceled || !otherCanceled) {\n                        resolveCancelPromise(undefined);\n                    }\n                },\n                _errorSteps: () => {\n                    reading = false;\n                }\n            };\n            ReadableStreamBYOBReaderRead(reader, view, readIntoRequest);\n        }\n        function pull1Algorithm() {\n            if (reading) {\n                readAgainForBranch1 = true;\n                return promiseResolvedWith(undefined);\n            }\n            reading = true;\n            const byobRequest = ReadableByteStreamControllerGetBYOBRequest(branch1._readableStreamController);\n            if (byobRequest === null) {\n                pullWithDefaultReader();\n            }\n            else {\n                pullWithBYOBReader(byobRequest._view, false);\n            }\n            return promiseResolvedWith(undefined);\n        }\n        function pull2Algorithm() {\n            if (reading) {\n                readAgainForBranch2 = true;\n                return promiseResolvedWith(undefined);\n            }\n            reading = true;\n            const byobRequest = ReadableByteStreamControllerGetBYOBRequest(branch2._readableStreamController);\n            if (byobRequest === null) {\n                pullWithDefaultReader();\n            }\n            else {\n                pullWithBYOBReader(byobRequest._view, true);\n            }\n            return promiseResolvedWith(undefined);\n        }\n        function cancel1Algorithm(reason) {\n            canceled1 = true;\n            reason1 = reason;\n            if (canceled2) {\n                const compositeReason = CreateArrayFromList([reason1, reason2]);\n                const cancelResult = ReadableStreamCancel(stream, compositeReason);\n                resolveCancelPromise(cancelResult);\n            }\n            return cancelPromise;\n        }\n        function cancel2Algorithm(reason) {\n            canceled2 = true;\n            reason2 = reason;\n            if (canceled1) {\n                const compositeReason = CreateArrayFromList([reason1, reason2]);\n                const cancelResult = ReadableStreamCancel(stream, compositeReason);\n                resolveCancelPromise(cancelResult);\n            }\n            return cancelPromise;\n        }\n        function startAlgorithm() {\n            return;\n        }\n        branch1 = CreateReadableByteStream(startAlgorithm, pull1Algorithm, cancel1Algorithm);\n        branch2 = CreateReadableByteStream(startAlgorithm, pull2Algorithm, cancel2Algorithm);\n        forwardReaderError(reader);\n        return [branch1, branch2];\n    }\n\n    function convertUnderlyingDefaultOrByteSource(source, context) {\n        assertDictionary(source, context);\n        const original = source;\n        const autoAllocateChunkSize = original === null || original === void 0 ? void 0 : original.autoAllocateChunkSize;\n        const cancel = original === null || original === void 0 ? void 0 : original.cancel;\n        const pull = original === null || original === void 0 ? void 0 : original.pull;\n        const start = original === null || original === void 0 ? void 0 : original.start;\n        const type = original === null || original === void 0 ? void 0 : original.type;\n        return {\n            autoAllocateChunkSize: autoAllocateChunkSize === undefined ?\n                undefined :\n                convertUnsignedLongLongWithEnforceRange(autoAllocateChunkSize, `${context} has member 'autoAllocateChunkSize' that`),\n            cancel: cancel === undefined ?\n                undefined :\n                convertUnderlyingSourceCancelCallback(cancel, original, `${context} has member 'cancel' that`),\n            pull: pull === undefined ?\n                undefined :\n                convertUnderlyingSourcePullCallback(pull, original, `${context} has member 'pull' that`),\n            start: start === undefined ?\n                undefined :\n                convertUnderlyingSourceStartCallback(start, original, `${context} has member 'start' that`),\n            type: type === undefined ? undefined : convertReadableStreamType(type, `${context} has member 'type' that`)\n        };\n    }\n    function convertUnderlyingSourceCancelCallback(fn, original, context) {\n        assertFunction(fn, context);\n        return (reason) => promiseCall(fn, original, [reason]);\n    }\n    function convertUnderlyingSourcePullCallback(fn, original, context) {\n        assertFunction(fn, context);\n        return (controller) => promiseCall(fn, original, [controller]);\n    }\n    function convertUnderlyingSourceStartCallback(fn, original, context) {\n        assertFunction(fn, context);\n        return (controller) => reflectCall(fn, original, [controller]);\n    }\n    function convertReadableStreamType(type, context) {\n        type = `${type}`;\n        if (type !== 'bytes') {\n            throw new TypeError(`${context} '${type}' is not a valid enumeration value for ReadableStreamType`);\n        }\n        return type;\n    }\n\n    function convertReaderOptions(options, context) {\n        assertDictionary(options, context);\n        const mode = options === null || options === void 0 ? void 0 : options.mode;\n        return {\n            mode: mode === undefined ? undefined : convertReadableStreamReaderMode(mode, `${context} has member 'mode' that`)\n        };\n    }\n    function convertReadableStreamReaderMode(mode, context) {\n        mode = `${mode}`;\n        if (mode !== 'byob') {\n            throw new TypeError(`${context} '${mode}' is not a valid enumeration value for ReadableStreamReaderMode`);\n        }\n        return mode;\n    }\n\n    function convertIteratorOptions(options, context) {\n        assertDictionary(options, context);\n        const preventCancel = options === null || options === void 0 ? void 0 : options.preventCancel;\n        return { preventCancel: Boolean(preventCancel) };\n    }\n\n    function convertPipeOptions(options, context) {\n        assertDictionary(options, context);\n        const preventAbort = options === null || options === void 0 ? void 0 : options.preventAbort;\n        const preventCancel = options === null || options === void 0 ? void 0 : options.preventCancel;\n        const preventClose = options === null || options === void 0 ? void 0 : options.preventClose;\n        const signal = options === null || options === void 0 ? void 0 : options.signal;\n        if (signal !== undefined) {\n            assertAbortSignal(signal, `${context} has member 'signal' that`);\n        }\n        return {\n            preventAbort: Boolean(preventAbort),\n            preventCancel: Boolean(preventCancel),\n            preventClose: Boolean(preventClose),\n            signal\n        };\n    }\n    function assertAbortSignal(signal, context) {\n        if (!isAbortSignal(signal)) {\n            throw new TypeError(`${context} is not an AbortSignal.`);\n        }\n    }\n\n    function convertReadableWritablePair(pair, context) {\n        assertDictionary(pair, context);\n        const readable = pair === null || pair === void 0 ? void 0 : pair.readable;\n        assertRequiredField(readable, 'readable', 'ReadableWritablePair');\n        assertReadableStream(readable, `${context} has member 'readable' that`);\n        const writable = pair === null || pair === void 0 ? void 0 : pair.writable;\n        assertRequiredField(writable, 'writable', 'ReadableWritablePair');\n        assertWritableStream(writable, `${context} has member 'writable' that`);\n        return { readable, writable };\n    }\n\n    /**\n     * A readable stream represents a source of data, from which you can read.\n     *\n     * @public\n     */\n    class ReadableStream {\n        constructor(rawUnderlyingSource = {}, rawStrategy = {}) {\n            if (rawUnderlyingSource === undefined) {\n                rawUnderlyingSource = null;\n            }\n            else {\n                assertObject(rawUnderlyingSource, 'First parameter');\n            }\n            const strategy = convertQueuingStrategy(rawStrategy, 'Second parameter');\n            const underlyingSource = convertUnderlyingDefaultOrByteSource(rawUnderlyingSource, 'First parameter');\n            InitializeReadableStream(this);\n            if (underlyingSource.type === 'bytes') {\n                if (strategy.size !== undefined) {\n                    throw new RangeError('The strategy for a byte stream cannot have a size function');\n                }\n                const highWaterMark = ExtractHighWaterMark(strategy, 0);\n                SetUpReadableByteStreamControllerFromUnderlyingSource(this, underlyingSource, highWaterMark);\n            }\n            else {\n                const sizeAlgorithm = ExtractSizeAlgorithm(strategy);\n                const highWaterMark = ExtractHighWaterMark(strategy, 1);\n                SetUpReadableStreamDefaultControllerFromUnderlyingSource(this, underlyingSource, highWaterMark, sizeAlgorithm);\n            }\n        }\n        /**\n         * Whether or not the readable stream is locked to a {@link ReadableStreamDefaultReader | reader}.\n         */\n        get locked() {\n            if (!IsReadableStream(this)) {\n                throw streamBrandCheckException$1('locked');\n            }\n            return IsReadableStreamLocked(this);\n        }\n        /**\n         * Cancels the stream, signaling a loss of interest in the stream by a consumer.\n         *\n         * The supplied `reason` argument will be given to the underlying source's {@link UnderlyingSource.cancel | cancel()}\n         * method, which might or might not use it.\n         */\n        cancel(reason = undefined) {\n            if (!IsReadableStream(this)) {\n                return promiseRejectedWith(streamBrandCheckException$1('cancel'));\n            }\n            if (IsReadableStreamLocked(this)) {\n                return promiseRejectedWith(new TypeError('Cannot cancel a stream that already has a reader'));\n            }\n            return ReadableStreamCancel(this, reason);\n        }\n        getReader(rawOptions = undefined) {\n            if (!IsReadableStream(this)) {\n                throw streamBrandCheckException$1('getReader');\n            }\n            const options = convertReaderOptions(rawOptions, 'First parameter');\n            if (options.mode === undefined) {\n                return AcquireReadableStreamDefaultReader(this);\n            }\n            return AcquireReadableStreamBYOBReader(this);\n        }\n        pipeThrough(rawTransform, rawOptions = {}) {\n            if (!IsReadableStream(this)) {\n                throw streamBrandCheckException$1('pipeThrough');\n            }\n            assertRequiredArgument(rawTransform, 1, 'pipeThrough');\n            const transform = convertReadableWritablePair(rawTransform, 'First parameter');\n            const options = convertPipeOptions(rawOptions, 'Second parameter');\n            if (IsReadableStreamLocked(this)) {\n                throw new TypeError('ReadableStream.prototype.pipeThrough cannot be used on a locked ReadableStream');\n            }\n            if (IsWritableStreamLocked(transform.writable)) {\n                throw new TypeError('ReadableStream.prototype.pipeThrough cannot be used on a locked WritableStream');\n            }\n            const promise = ReadableStreamPipeTo(this, transform.writable, options.preventClose, options.preventAbort, options.preventCancel, options.signal);\n            setPromiseIsHandledToTrue(promise);\n            return transform.readable;\n        }\n        pipeTo(destination, rawOptions = {}) {\n            if (!IsReadableStream(this)) {\n                return promiseRejectedWith(streamBrandCheckException$1('pipeTo'));\n            }\n            if (destination === undefined) {\n                return promiseRejectedWith(`Parameter 1 is required in 'pipeTo'.`);\n            }\n            if (!IsWritableStream(destination)) {\n                return promiseRejectedWith(new TypeError(`ReadableStream.prototype.pipeTo's first argument must be a WritableStream`));\n            }\n            let options;\n            try {\n                options = convertPipeOptions(rawOptions, 'Second parameter');\n            }\n            catch (e) {\n                return promiseRejectedWith(e);\n            }\n            if (IsReadableStreamLocked(this)) {\n                return promiseRejectedWith(new TypeError('ReadableStream.prototype.pipeTo cannot be used on a locked ReadableStream'));\n            }\n            if (IsWritableStreamLocked(destination)) {\n                return promiseRejectedWith(new TypeError('ReadableStream.prototype.pipeTo cannot be used on a locked WritableStream'));\n            }\n            return ReadableStreamPipeTo(this, destination, options.preventClose, options.preventAbort, options.preventCancel, options.signal);\n        }\n        /**\n         * Tees this readable stream, returning a two-element array containing the two resulting branches as\n         * new {@link ReadableStream} instances.\n         *\n         * Teeing a stream will lock it, preventing any other consumer from acquiring a reader.\n         * To cancel the stream, cancel both of the resulting branches; a composite cancellation reason will then be\n         * propagated to the stream's underlying source.\n         *\n         * Note that the chunks seen in each branch will be the same object. If the chunks are not immutable,\n         * this could allow interference between the two branches.\n         */\n        tee() {\n            if (!IsReadableStream(this)) {\n                throw streamBrandCheckException$1('tee');\n            }\n            const branches = ReadableStreamTee(this);\n            return CreateArrayFromList(branches);\n        }\n        values(rawOptions = undefined) {\n            if (!IsReadableStream(this)) {\n                throw streamBrandCheckException$1('values');\n            }\n            const options = convertIteratorOptions(rawOptions, 'First parameter');\n            return AcquireReadableStreamAsyncIterator(this, options.preventCancel);\n        }\n    }\n    Object.defineProperties(ReadableStream.prototype, {\n        cancel: { enumerable: true },\n        getReader: { enumerable: true },\n        pipeThrough: { enumerable: true },\n        pipeTo: { enumerable: true },\n        tee: { enumerable: true },\n        values: { enumerable: true },\n        locked: { enumerable: true }\n    });\n    if (typeof SymbolPolyfill.toStringTag === 'symbol') {\n        Object.defineProperty(ReadableStream.prototype, SymbolPolyfill.toStringTag, {\n            value: 'ReadableStream',\n            configurable: true\n        });\n    }\n    if (typeof SymbolPolyfill.asyncIterator === 'symbol') {\n        Object.defineProperty(ReadableStream.prototype, SymbolPolyfill.asyncIterator, {\n            value: ReadableStream.prototype.values,\n            writable: true,\n            configurable: true\n        });\n    }\n    // Abstract operations for the ReadableStream.\n    // Throws if and only if startAlgorithm throws.\n    function CreateReadableStream(startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark = 1, sizeAlgorithm = () => 1) {\n        const stream = Object.create(ReadableStream.prototype);\n        InitializeReadableStream(stream);\n        const controller = Object.create(ReadableStreamDefaultController.prototype);\n        SetUpReadableStreamDefaultController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, sizeAlgorithm);\n        return stream;\n    }\n    // Throws if and only if startAlgorithm throws.\n    function CreateReadableByteStream(startAlgorithm, pullAlgorithm, cancelAlgorithm) {\n        const stream = Object.create(ReadableStream.prototype);\n        InitializeReadableStream(stream);\n        const controller = Object.create(ReadableByteStreamController.prototype);\n        SetUpReadableByteStreamController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, 0, undefined);\n        return stream;\n    }\n    function InitializeReadableStream(stream) {\n        stream._state = 'readable';\n        stream._reader = undefined;\n        stream._storedError = undefined;\n        stream._disturbed = false;\n    }\n    function IsReadableStream(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_readableStreamController')) {\n            return false;\n        }\n        return x instanceof ReadableStream;\n    }\n    function IsReadableStreamLocked(stream) {\n        if (stream._reader === undefined) {\n            return false;\n        }\n        return true;\n    }\n    // ReadableStream API exposed for controllers.\n    function ReadableStreamCancel(stream, reason) {\n        stream._disturbed = true;\n        if (stream._state === 'closed') {\n            return promiseResolvedWith(undefined);\n        }\n        if (stream._state === 'errored') {\n            return promiseRejectedWith(stream._storedError);\n        }\n        ReadableStreamClose(stream);\n        const reader = stream._reader;\n        if (reader !== undefined && IsReadableStreamBYOBReader(reader)) {\n            reader._readIntoRequests.forEach(readIntoRequest => {\n                readIntoRequest._closeSteps(undefined);\n            });\n            reader._readIntoRequests = new SimpleQueue();\n        }\n        const sourceCancelPromise = stream._readableStreamController[CancelSteps](reason);\n        return transformPromiseWith(sourceCancelPromise, noop);\n    }\n    function ReadableStreamClose(stream) {\n        stream._state = 'closed';\n        const reader = stream._reader;\n        if (reader === undefined) {\n            return;\n        }\n        defaultReaderClosedPromiseResolve(reader);\n        if (IsReadableStreamDefaultReader(reader)) {\n            reader._readRequests.forEach(readRequest => {\n                readRequest._closeSteps();\n            });\n            reader._readRequests = new SimpleQueue();\n        }\n    }\n    function ReadableStreamError(stream, e) {\n        stream._state = 'errored';\n        stream._storedError = e;\n        const reader = stream._reader;\n        if (reader === undefined) {\n            return;\n        }\n        defaultReaderClosedPromiseReject(reader, e);\n        if (IsReadableStreamDefaultReader(reader)) {\n            reader._readRequests.forEach(readRequest => {\n                readRequest._errorSteps(e);\n            });\n            reader._readRequests = new SimpleQueue();\n        }\n        else {\n            reader._readIntoRequests.forEach(readIntoRequest => {\n                readIntoRequest._errorSteps(e);\n            });\n            reader._readIntoRequests = new SimpleQueue();\n        }\n    }\n    // Helper functions for the ReadableStream.\n    function streamBrandCheckException$1(name) {\n        return new TypeError(`ReadableStream.prototype.${name} can only be used on a ReadableStream`);\n    }\n\n    function convertQueuingStrategyInit(init, context) {\n        assertDictionary(init, context);\n        const highWaterMark = init === null || init === void 0 ? void 0 : init.highWaterMark;\n        assertRequiredField(highWaterMark, 'highWaterMark', 'QueuingStrategyInit');\n        return {\n            highWaterMark: convertUnrestrictedDouble(highWaterMark)\n        };\n    }\n\n    // The size function must not have a prototype property nor be a constructor\n    const byteLengthSizeFunction = (chunk) => {\n        return chunk.byteLength;\n    };\n    try {\n        Object.defineProperty(byteLengthSizeFunction, 'name', {\n            value: 'size',\n            configurable: true\n        });\n    }\n    catch (_a) {\n        // This property is non-configurable in older browsers, so ignore if this throws.\n        // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name#browser_compatibility\n    }\n    /**\n     * A queuing strategy that counts the number of bytes in each chunk.\n     *\n     * @public\n     */\n    class ByteLengthQueuingStrategy {\n        constructor(options) {\n            assertRequiredArgument(options, 1, 'ByteLengthQueuingStrategy');\n            options = convertQueuingStrategyInit(options, 'First parameter');\n            this._byteLengthQueuingStrategyHighWaterMark = options.highWaterMark;\n        }\n        /**\n         * Returns the high water mark provided to the constructor.\n         */\n        get highWaterMark() {\n            if (!IsByteLengthQueuingStrategy(this)) {\n                throw byteLengthBrandCheckException('highWaterMark');\n            }\n            return this._byteLengthQueuingStrategyHighWaterMark;\n        }\n        /**\n         * Measures the size of `chunk` by returning the value of its `byteLength` property.\n         */\n        get size() {\n            if (!IsByteLengthQueuingStrategy(this)) {\n                throw byteLengthBrandCheckException('size');\n            }\n            return byteLengthSizeFunction;\n        }\n    }\n    Object.defineProperties(ByteLengthQueuingStrategy.prototype, {\n        highWaterMark: { enumerable: true },\n        size: { enumerable: true }\n    });\n    if (typeof SymbolPolyfill.toStringTag === 'symbol') {\n        Object.defineProperty(ByteLengthQueuingStrategy.prototype, SymbolPolyfill.toStringTag, {\n            value: 'ByteLengthQueuingStrategy',\n            configurable: true\n        });\n    }\n    // Helper functions for the ByteLengthQueuingStrategy.\n    function byteLengthBrandCheckException(name) {\n        return new TypeError(`ByteLengthQueuingStrategy.prototype.${name} can only be used on a ByteLengthQueuingStrategy`);\n    }\n    function IsByteLengthQueuingStrategy(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_byteLengthQueuingStrategyHighWaterMark')) {\n            return false;\n        }\n        return x instanceof ByteLengthQueuingStrategy;\n    }\n\n    // The size function must not have a prototype property nor be a constructor\n    const countSizeFunction = () => {\n        return 1;\n    };\n    try {\n        Object.defineProperty(countSizeFunction, 'name', {\n            value: 'size',\n            configurable: true\n        });\n    }\n    catch (_a) {\n        // This property is non-configurable in older browsers, so ignore if this throws.\n        // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name#browser_compatibility\n    }\n    /**\n     * A queuing strategy that counts the number of chunks.\n     *\n     * @public\n     */\n    class CountQueuingStrategy {\n        constructor(options) {\n            assertRequiredArgument(options, 1, 'CountQueuingStrategy');\n            options = convertQueuingStrategyInit(options, 'First parameter');\n            this._countQueuingStrategyHighWaterMark = options.highWaterMark;\n        }\n        /**\n         * Returns the high water mark provided to the constructor.\n         */\n        get highWaterMark() {\n            if (!IsCountQueuingStrategy(this)) {\n                throw countBrandCheckException('highWaterMark');\n            }\n            return this._countQueuingStrategyHighWaterMark;\n        }\n        /**\n         * Measures the size of `chunk` by always returning 1.\n         * This ensures that the total queue size is a count of the number of chunks in the queue.\n         */\n        get size() {\n            if (!IsCountQueuingStrategy(this)) {\n                throw countBrandCheckException('size');\n            }\n            return countSizeFunction;\n        }\n    }\n    Object.defineProperties(CountQueuingStrategy.prototype, {\n        highWaterMark: { enumerable: true },\n        size: { enumerable: true }\n    });\n    if (typeof SymbolPolyfill.toStringTag === 'symbol') {\n        Object.defineProperty(CountQueuingStrategy.prototype, SymbolPolyfill.toStringTag, {\n            value: 'CountQueuingStrategy',\n            configurable: true\n        });\n    }\n    // Helper functions for the CountQueuingStrategy.\n    function countBrandCheckException(name) {\n        return new TypeError(`CountQueuingStrategy.prototype.${name} can only be used on a CountQueuingStrategy`);\n    }\n    function IsCountQueuingStrategy(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_countQueuingStrategyHighWaterMark')) {\n            return false;\n        }\n        return x instanceof CountQueuingStrategy;\n    }\n\n    function convertTransformer(original, context) {\n        assertDictionary(original, context);\n        const flush = original === null || original === void 0 ? void 0 : original.flush;\n        const readableType = original === null || original === void 0 ? void 0 : original.readableType;\n        const start = original === null || original === void 0 ? void 0 : original.start;\n        const transform = original === null || original === void 0 ? void 0 : original.transform;\n        const writableType = original === null || original === void 0 ? void 0 : original.writableType;\n        return {\n            flush: flush === undefined ?\n                undefined :\n                convertTransformerFlushCallback(flush, original, `${context} has member 'flush' that`),\n            readableType,\n            start: start === undefined ?\n                undefined :\n                convertTransformerStartCallback(start, original, `${context} has member 'start' that`),\n            transform: transform === undefined ?\n                undefined :\n                convertTransformerTransformCallback(transform, original, `${context} has member 'transform' that`),\n            writableType\n        };\n    }\n    function convertTransformerFlushCallback(fn, original, context) {\n        assertFunction(fn, context);\n        return (controller) => promiseCall(fn, original, [controller]);\n    }\n    function convertTransformerStartCallback(fn, original, context) {\n        assertFunction(fn, context);\n        return (controller) => reflectCall(fn, original, [controller]);\n    }\n    function convertTransformerTransformCallback(fn, original, context) {\n        assertFunction(fn, context);\n        return (chunk, controller) => promiseCall(fn, original, [chunk, controller]);\n    }\n\n    // Class TransformStream\n    /**\n     * A transform stream consists of a pair of streams: a {@link WritableStream | writable stream},\n     * known as its writable side, and a {@link ReadableStream | readable stream}, known as its readable side.\n     * In a manner specific to the transform stream in question, writes to the writable side result in new data being\n     * made available for reading from the readable side.\n     *\n     * @public\n     */\n    class TransformStream {\n        constructor(rawTransformer = {}, rawWritableStrategy = {}, rawReadableStrategy = {}) {\n            if (rawTransformer === undefined) {\n                rawTransformer = null;\n            }\n            const writableStrategy = convertQueuingStrategy(rawWritableStrategy, 'Second parameter');\n            const readableStrategy = convertQueuingStrategy(rawReadableStrategy, 'Third parameter');\n            const transformer = convertTransformer(rawTransformer, 'First parameter');\n            if (transformer.readableType !== undefined) {\n                throw new RangeError('Invalid readableType specified');\n            }\n            if (transformer.writableType !== undefined) {\n                throw new RangeError('Invalid writableType specified');\n            }\n            const readableHighWaterMark = ExtractHighWaterMark(readableStrategy, 0);\n            const readableSizeAlgorithm = ExtractSizeAlgorithm(readableStrategy);\n            const writableHighWaterMark = ExtractHighWaterMark(writableStrategy, 1);\n            const writableSizeAlgorithm = ExtractSizeAlgorithm(writableStrategy);\n            let startPromise_resolve;\n            const startPromise = newPromise(resolve => {\n                startPromise_resolve = resolve;\n            });\n            InitializeTransformStream(this, startPromise, writableHighWaterMark, writableSizeAlgorithm, readableHighWaterMark, readableSizeAlgorithm);\n            SetUpTransformStreamDefaultControllerFromTransformer(this, transformer);\n            if (transformer.start !== undefined) {\n                startPromise_resolve(transformer.start(this._transformStreamController));\n            }\n            else {\n                startPromise_resolve(undefined);\n            }\n        }\n        /**\n         * The readable side of the transform stream.\n         */\n        get readable() {\n            if (!IsTransformStream(this)) {\n                throw streamBrandCheckException('readable');\n            }\n            return this._readable;\n        }\n        /**\n         * The writable side of the transform stream.\n         */\n        get writable() {\n            if (!IsTransformStream(this)) {\n                throw streamBrandCheckException('writable');\n            }\n            return this._writable;\n        }\n    }\n    Object.defineProperties(TransformStream.prototype, {\n        readable: { enumerable: true },\n        writable: { enumerable: true }\n    });\n    if (typeof SymbolPolyfill.toStringTag === 'symbol') {\n        Object.defineProperty(TransformStream.prototype, SymbolPolyfill.toStringTag, {\n            value: 'TransformStream',\n            configurable: true\n        });\n    }\n    function InitializeTransformStream(stream, startPromise, writableHighWaterMark, writableSizeAlgorithm, readableHighWaterMark, readableSizeAlgorithm) {\n        function startAlgorithm() {\n            return startPromise;\n        }\n        function writeAlgorithm(chunk) {\n            return TransformStreamDefaultSinkWriteAlgorithm(stream, chunk);\n        }\n        function abortAlgorithm(reason) {\n            return TransformStreamDefaultSinkAbortAlgorithm(stream, reason);\n        }\n        function closeAlgorithm() {\n            return TransformStreamDefaultSinkCloseAlgorithm(stream);\n        }\n        stream._writable = CreateWritableStream(startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, writableHighWaterMark, writableSizeAlgorithm);\n        function pullAlgorithm() {\n            return TransformStreamDefaultSourcePullAlgorithm(stream);\n        }\n        function cancelAlgorithm(reason) {\n            TransformStreamErrorWritableAndUnblockWrite(stream, reason);\n            return promiseResolvedWith(undefined);\n        }\n        stream._readable = CreateReadableStream(startAlgorithm, pullAlgorithm, cancelAlgorithm, readableHighWaterMark, readableSizeAlgorithm);\n        // The [[backpressure]] slot is set to undefined so that it can be initialised by TransformStreamSetBackpressure.\n        stream._backpressure = undefined;\n        stream._backpressureChangePromise = undefined;\n        stream._backpressureChangePromise_resolve = undefined;\n        TransformStreamSetBackpressure(stream, true);\n        stream._transformStreamController = undefined;\n    }\n    function IsTransformStream(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_transformStreamController')) {\n            return false;\n        }\n        return x instanceof TransformStream;\n    }\n    // This is a no-op if both sides are already errored.\n    function TransformStreamError(stream, e) {\n        ReadableStreamDefaultControllerError(stream._readable._readableStreamController, e);\n        TransformStreamErrorWritableAndUnblockWrite(stream, e);\n    }\n    function TransformStreamErrorWritableAndUnblockWrite(stream, e) {\n        TransformStreamDefaultControllerClearAlgorithms(stream._transformStreamController);\n        WritableStreamDefaultControllerErrorIfNeeded(stream._writable._writableStreamController, e);\n        if (stream._backpressure) {\n            // Pretend that pull() was called to permit any pending write() calls to complete. TransformStreamSetBackpressure()\n            // cannot be called from enqueue() or pull() once the ReadableStream is errored, so this will will be the final time\n            // _backpressure is set.\n            TransformStreamSetBackpressure(stream, false);\n        }\n    }\n    function TransformStreamSetBackpressure(stream, backpressure) {\n        // Passes also when called during construction.\n        if (stream._backpressureChangePromise !== undefined) {\n            stream._backpressureChangePromise_resolve();\n        }\n        stream._backpressureChangePromise = newPromise(resolve => {\n            stream._backpressureChangePromise_resolve = resolve;\n        });\n        stream._backpressure = backpressure;\n    }\n    // Class TransformStreamDefaultController\n    /**\n     * Allows control of the {@link ReadableStream} and {@link WritableStream} of the associated {@link TransformStream}.\n     *\n     * @public\n     */\n    class TransformStreamDefaultController {\n        constructor() {\n            throw new TypeError('Illegal constructor');\n        }\n        /**\n         * Returns the desired size to fill the readable side’s internal queue. It can be negative, if the queue is over-full.\n         */\n        get desiredSize() {\n            if (!IsTransformStreamDefaultController(this)) {\n                throw defaultControllerBrandCheckException('desiredSize');\n            }\n            const readableController = this._controlledTransformStream._readable._readableStreamController;\n            return ReadableStreamDefaultControllerGetDesiredSize(readableController);\n        }\n        enqueue(chunk = undefined) {\n            if (!IsTransformStreamDefaultController(this)) {\n                throw defaultControllerBrandCheckException('enqueue');\n            }\n            TransformStreamDefaultControllerEnqueue(this, chunk);\n        }\n        /**\n         * Errors both the readable side and the writable side of the controlled transform stream, making all future\n         * interactions with it fail with the given error `e`. Any chunks queued for transformation will be discarded.\n         */\n        error(reason = undefined) {\n            if (!IsTransformStreamDefaultController(this)) {\n                throw defaultControllerBrandCheckException('error');\n            }\n            TransformStreamDefaultControllerError(this, reason);\n        }\n        /**\n         * Closes the readable side and errors the writable side of the controlled transform stream. This is useful when the\n         * transformer only needs to consume a portion of the chunks written to the writable side.\n         */\n        terminate() {\n            if (!IsTransformStreamDefaultController(this)) {\n                throw defaultControllerBrandCheckException('terminate');\n            }\n            TransformStreamDefaultControllerTerminate(this);\n        }\n    }\n    Object.defineProperties(TransformStreamDefaultController.prototype, {\n        enqueue: { enumerable: true },\n        error: { enumerable: true },\n        terminate: { enumerable: true },\n        desiredSize: { enumerable: true }\n    });\n    if (typeof SymbolPolyfill.toStringTag === 'symbol') {\n        Object.defineProperty(TransformStreamDefaultController.prototype, SymbolPolyfill.toStringTag, {\n            value: 'TransformStreamDefaultController',\n            configurable: true\n        });\n    }\n    // Transform Stream Default Controller Abstract Operations\n    function IsTransformStreamDefaultController(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_controlledTransformStream')) {\n            return false;\n        }\n        return x instanceof TransformStreamDefaultController;\n    }\n    function SetUpTransformStreamDefaultController(stream, controller, transformAlgorithm, flushAlgorithm) {\n        controller._controlledTransformStream = stream;\n        stream._transformStreamController = controller;\n        controller._transformAlgorithm = transformAlgorithm;\n        controller._flushAlgorithm = flushAlgorithm;\n    }\n    function SetUpTransformStreamDefaultControllerFromTransformer(stream, transformer) {\n        const controller = Object.create(TransformStreamDefaultController.prototype);\n        let transformAlgorithm = (chunk) => {\n            try {\n                TransformStreamDefaultControllerEnqueue(controller, chunk);\n                return promiseResolvedWith(undefined);\n            }\n            catch (transformResultE) {\n                return promiseRejectedWith(transformResultE);\n            }\n        };\n        let flushAlgorithm = () => promiseResolvedWith(undefined);\n        if (transformer.transform !== undefined) {\n            transformAlgorithm = chunk => transformer.transform(chunk, controller);\n        }\n        if (transformer.flush !== undefined) {\n            flushAlgorithm = () => transformer.flush(controller);\n        }\n        SetUpTransformStreamDefaultController(stream, controller, transformAlgorithm, flushAlgorithm);\n    }\n    function TransformStreamDefaultControllerClearAlgorithms(controller) {\n        controller._transformAlgorithm = undefined;\n        controller._flushAlgorithm = undefined;\n    }\n    function TransformStreamDefaultControllerEnqueue(controller, chunk) {\n        const stream = controller._controlledTransformStream;\n        const readableController = stream._readable._readableStreamController;\n        if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(readableController)) {\n            throw new TypeError('Readable side is not in a state that permits enqueue');\n        }\n        // We throttle transform invocations based on the backpressure of the ReadableStream, but we still\n        // accept TransformStreamDefaultControllerEnqueue() calls.\n        try {\n            ReadableStreamDefaultControllerEnqueue(readableController, chunk);\n        }\n        catch (e) {\n            // This happens when readableStrategy.size() throws.\n            TransformStreamErrorWritableAndUnblockWrite(stream, e);\n            throw stream._readable._storedError;\n        }\n        const backpressure = ReadableStreamDefaultControllerHasBackpressure(readableController);\n        if (backpressure !== stream._backpressure) {\n            TransformStreamSetBackpressure(stream, true);\n        }\n    }\n    function TransformStreamDefaultControllerError(controller, e) {\n        TransformStreamError(controller._controlledTransformStream, e);\n    }\n    function TransformStreamDefaultControllerPerformTransform(controller, chunk) {\n        const transformPromise = controller._transformAlgorithm(chunk);\n        return transformPromiseWith(transformPromise, undefined, r => {\n            TransformStreamError(controller._controlledTransformStream, r);\n            throw r;\n        });\n    }\n    function TransformStreamDefaultControllerTerminate(controller) {\n        const stream = controller._controlledTransformStream;\n        const readableController = stream._readable._readableStreamController;\n        ReadableStreamDefaultControllerClose(readableController);\n        const error = new TypeError('TransformStream terminated');\n        TransformStreamErrorWritableAndUnblockWrite(stream, error);\n    }\n    // TransformStreamDefaultSink Algorithms\n    function TransformStreamDefaultSinkWriteAlgorithm(stream, chunk) {\n        const controller = stream._transformStreamController;\n        if (stream._backpressure) {\n            const backpressureChangePromise = stream._backpressureChangePromise;\n            return transformPromiseWith(backpressureChangePromise, () => {\n                const writable = stream._writable;\n                const state = writable._state;\n                if (state === 'erroring') {\n                    throw writable._storedError;\n                }\n                return TransformStreamDefaultControllerPerformTransform(controller, chunk);\n            });\n        }\n        return TransformStreamDefaultControllerPerformTransform(controller, chunk);\n    }\n    function TransformStreamDefaultSinkAbortAlgorithm(stream, reason) {\n        // abort() is not called synchronously, so it is possible for abort() to be called when the stream is already\n        // errored.\n        TransformStreamError(stream, reason);\n        return promiseResolvedWith(undefined);\n    }\n    function TransformStreamDefaultSinkCloseAlgorithm(stream) {\n        // stream._readable cannot change after construction, so caching it across a call to user code is safe.\n        const readable = stream._readable;\n        const controller = stream._transformStreamController;\n        const flushPromise = controller._flushAlgorithm();\n        TransformStreamDefaultControllerClearAlgorithms(controller);\n        // Return a promise that is fulfilled with undefined on success.\n        return transformPromiseWith(flushPromise, () => {\n            if (readable._state === 'errored') {\n                throw readable._storedError;\n            }\n            ReadableStreamDefaultControllerClose(readable._readableStreamController);\n        }, r => {\n            TransformStreamError(stream, r);\n            throw readable._storedError;\n        });\n    }\n    // TransformStreamDefaultSource Algorithms\n    function TransformStreamDefaultSourcePullAlgorithm(stream) {\n        // Invariant. Enforced by the promises returned by start() and pull().\n        TransformStreamSetBackpressure(stream, false);\n        // Prevent the next pull() call until there is backpressure.\n        return stream._backpressureChangePromise;\n    }\n    // Helper functions for the TransformStreamDefaultController.\n    function defaultControllerBrandCheckException(name) {\n        return new TypeError(`TransformStreamDefaultController.prototype.${name} can only be used on a TransformStreamDefaultController`);\n    }\n    // Helper functions for the TransformStream.\n    function streamBrandCheckException(name) {\n        return new TypeError(`TransformStream.prototype.${name} can only be used on a TransformStream`);\n    }\n\n    exports.ByteLengthQueuingStrategy = ByteLengthQueuingStrategy;\n    exports.CountQueuingStrategy = CountQueuingStrategy;\n    exports.ReadableByteStreamController = ReadableByteStreamController;\n    exports.ReadableStream = ReadableStream;\n    exports.ReadableStreamBYOBReader = ReadableStreamBYOBReader;\n    exports.ReadableStreamBYOBRequest = ReadableStreamBYOBRequest;\n    exports.ReadableStreamDefaultController = ReadableStreamDefaultController;\n    exports.ReadableStreamDefaultReader = ReadableStreamDefaultReader;\n    exports.TransformStream = TransformStream;\n    exports.TransformStreamDefaultController = TransformStreamDefaultController;\n    exports.WritableStream = WritableStream;\n    exports.WritableStreamDefaultController = WritableStreamDefaultController;\n    exports.WritableStreamDefaultWriter = WritableStreamDefaultWriter;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=ponyfill.es2018.js.map\n","module.exports = require(\"vscode\");","module.exports = require(\"buffer\");","module.exports = require(\"node:process\");","module.exports = require(\"node:stream/web\");","module.exports = require(\"worker_threads\");","/* c8 ignore start */\n// 64 KiB (same size chrome slice theirs blob into Uint8array's)\nconst POOL_SIZE = 65536\n\nif (!globalThis.ReadableStream) {\n  // `node:stream/web` got introduced in v16.5.0 as experimental\n  // and it's preferred over the polyfilled version. So we also\n  // suppress the warning that gets emitted by NodeJS for using it.\n  try {\n    const process = require('node:process')\n    const { emitWarning } = process\n    try {\n      process.emitWarning = () => {}\n      Object.assign(globalThis, require('node:stream/web'))\n      process.emitWarning = emitWarning\n    } catch (error) {\n      process.emitWarning = emitWarning\n      throw error\n    }\n  } catch (error) {\n    // fallback to polyfill implementation\n    Object.assign(globalThis, require('web-streams-polyfill/dist/ponyfill.es2018.js'))\n  }\n}\n\ntry {\n  // Don't use node: prefix for this, require+node: is not supported until node v14.14\n  // Only `import()` can use prefix in 12.20 and later\n  const { Blob } = require('buffer')\n  if (Blob && !Blob.prototype.stream) {\n    Blob.prototype.stream = function name (params) {\n      let position = 0\n      const blob = this\n\n      return new ReadableStream({\n        type: 'bytes',\n        async pull (ctrl) {\n          const chunk = blob.slice(position, Math.min(blob.size, position + POOL_SIZE))\n          const buffer = await chunk.arrayBuffer()\n          position += buffer.byteLength\n          ctrl.enqueue(new Uint8Array(buffer))\n\n          if (position === blob.size) {\n            ctrl.close()\n          }\n        }\n      })\n    }\n  }\n} catch (error) {}\n/* c8 ignore end */\n","import Blob from './index.js'\n\nconst _File = class File extends Blob {\n  #lastModified = 0\n  #name = ''\n\n  /**\n   * @param {*[]} fileBits\n   * @param {string} fileName\n   * @param {{lastModified?: number, type?: string}} options\n   */// @ts-ignore\n  constructor (fileBits, fileName, options = {}) {\n    if (arguments.length < 2) {\n      throw new TypeError(`Failed to construct 'File': 2 arguments required, but only ${arguments.length} present.`)\n    }\n    super(fileBits, options)\n\n    if (options === null) options = {}\n\n    // Simulate WebIDL type casting for NaN value in lastModified option.\n    const lastModified = options.lastModified === undefined ? Date.now() : Number(options.lastModified)\n    if (!Number.isNaN(lastModified)) {\n      this.#lastModified = lastModified\n    }\n\n    this.#name = String(fileName)\n  }\n\n  get name () {\n    return this.#name\n  }\n\n  get lastModified () {\n    return this.#lastModified\n  }\n\n  get [Symbol.toStringTag] () {\n    return 'File'\n  }\n\n  static [Symbol.hasInstance] (object) {\n    return !!object && object instanceof Blob &&\n      /^(File)$/.test(object[Symbol.toStringTag])\n  }\n}\n\n/** @type {typeof globalThis.File} */// @ts-ignore\nexport const File = _File\nexport default File\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"node:fs\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"node:path\");","import { statSync, createReadStream, promises as fs } from 'node:fs'\nimport { basename } from 'node:path'\nimport DOMException from 'node-domexception'\n\nimport File from './file.js'\nimport Blob from './index.js'\n\nconst { stat } = fs\n\n/**\n * @param {string} path filepath on the disk\n * @param {string} [type] mimetype to use\n */\nconst blobFromSync = (path, type) => fromBlob(statSync(path), path, type)\n\n/**\n * @param {string} path filepath on the disk\n * @param {string} [type] mimetype to use\n * @returns {Promise<Blob>}\n */\nconst blobFrom = (path, type) => stat(path).then(stat => fromBlob(stat, path, type))\n\n/**\n * @param {string} path filepath on the disk\n * @param {string} [type] mimetype to use\n * @returns {Promise<File>}\n */\nconst fileFrom = (path, type) => stat(path).then(stat => fromFile(stat, path, type))\n\n/**\n * @param {string} path filepath on the disk\n * @param {string} [type] mimetype to use\n */\nconst fileFromSync = (path, type) => fromFile(statSync(path), path, type)\n\n// @ts-ignore\nconst fromBlob = (stat, path, type = '') => new Blob([new BlobDataItem({\n  path,\n  size: stat.size,\n  lastModified: stat.mtimeMs,\n  start: 0\n})], { type })\n\n// @ts-ignore\nconst fromFile = (stat, path, type = '') => new File([new BlobDataItem({\n  path,\n  size: stat.size,\n  lastModified: stat.mtimeMs,\n  start: 0\n})], basename(path), { type, lastModified: stat.mtimeMs })\n\n/**\n * This is a blob backed up by a file on the disk\n * with minium requirement. Its wrapped around a Blob as a blobPart\n * so you have no direct access to this.\n *\n * @private\n */\nclass BlobDataItem {\n  #path\n  #start\n\n  constructor (options) {\n    this.#path = options.path\n    this.#start = options.start\n    this.size = options.size\n    this.lastModified = options.lastModified\n  }\n\n  /**\n   * Slicing arguments is first validated and formatted\n   * to not be out of range by Blob.prototype.slice\n   */\n  slice (start, end) {\n    return new BlobDataItem({\n      path: this.#path,\n      lastModified: this.lastModified,\n      size: end - start,\n      start: this.#start + start\n    })\n  }\n\n  async * stream () {\n    const { mtimeMs } = await stat(this.#path)\n    if (mtimeMs > this.lastModified) {\n      throw new DOMException('The requested file could not be read, typically due to permission problems that have occurred after a reference to a file was acquired.', 'NotReadableError')\n    }\n    yield * createReadStream(this.#path, {\n      start: this.#start,\n      end: this.#start + this.size - 1\n    })\n  }\n\n  get [Symbol.toStringTag] () {\n    return 'Blob'\n  }\n}\n\nexport default blobFromSync\nexport { File, Blob, blobFrom, blobFromSync, fileFrom, fileFromSync }\n","/*! fetch-blob. MIT License. Jimmy Wärting <https://jimmy.warting.se/opensource> */\n\n// TODO (jimmywarting): in the feature use conditional loading with top level await (requires 14.x)\n// Node has recently added whatwg stream into core\n\nimport './streams.cjs'\n\n// 64 KiB (same size chrome slice theirs blob into Uint8array's)\nconst POOL_SIZE = 65536\n\n/** @param {(Blob | Uint8Array)[]} parts */\nasync function * toIterator (parts, clone = true) {\n  for (const part of parts) {\n    if ('stream' in part) {\n      yield * (/** @type {AsyncIterableIterator<Uint8Array>} */ (part.stream()))\n    } else if (ArrayBuffer.isView(part)) {\n      if (clone) {\n        let position = part.byteOffset\n        const end = part.byteOffset + part.byteLength\n        while (position !== end) {\n          const size = Math.min(end - position, POOL_SIZE)\n          const chunk = part.buffer.slice(position, position + size)\n          position += chunk.byteLength\n          yield new Uint8Array(chunk)\n        }\n      } else {\n        yield part\n      }\n    /* c8 ignore next 10 */\n    } else {\n      // For blobs that have arrayBuffer but no stream method (nodes buffer.Blob)\n      let position = 0, b = (/** @type {Blob} */ (part))\n      while (position !== b.size) {\n        const chunk = b.slice(position, Math.min(b.size, position + POOL_SIZE))\n        const buffer = await chunk.arrayBuffer()\n        position += buffer.byteLength\n        yield new Uint8Array(buffer)\n      }\n    }\n  }\n}\n\nconst _Blob = class Blob {\n  /** @type {Array.<(Blob|Uint8Array)>} */\n  #parts = []\n  #type = ''\n  #size = 0\n  #endings = 'transparent'\n\n  /**\n   * The Blob() constructor returns a new Blob object. The content\n   * of the blob consists of the concatenation of the values given\n   * in the parameter array.\n   *\n   * @param {*} blobParts\n   * @param {{ type?: string, endings?: string }} [options]\n   */\n  constructor (blobParts = [], options = {}) {\n    if (typeof blobParts !== 'object' || blobParts === null) {\n      throw new TypeError('Failed to construct \\'Blob\\': The provided value cannot be converted to a sequence.')\n    }\n\n    if (typeof blobParts[Symbol.iterator] !== 'function') {\n      throw new TypeError('Failed to construct \\'Blob\\': The object must have a callable @@iterator property.')\n    }\n\n    if (typeof options !== 'object' && typeof options !== 'function') {\n      throw new TypeError('Failed to construct \\'Blob\\': parameter 2 cannot convert to dictionary.')\n    }\n\n    if (options === null) options = {}\n\n    const encoder = new TextEncoder()\n    for (const element of blobParts) {\n      let part\n      if (ArrayBuffer.isView(element)) {\n        part = new Uint8Array(element.buffer.slice(element.byteOffset, element.byteOffset + element.byteLength))\n      } else if (element instanceof ArrayBuffer) {\n        part = new Uint8Array(element.slice(0))\n      } else if (element instanceof Blob) {\n        part = element\n      } else {\n        part = encoder.encode(`${element}`)\n      }\n\n      this.#size += ArrayBuffer.isView(part) ? part.byteLength : part.size\n      this.#parts.push(part)\n    }\n\n    this.#endings = `${options.endings === undefined ? 'transparent' : options.endings}`\n    const type = options.type === undefined ? '' : String(options.type)\n    this.#type = /^[\\x20-\\x7E]*$/.test(type) ? type : ''\n  }\n\n  /**\n   * The Blob interface's size property returns the\n   * size of the Blob in bytes.\n   */\n  get size () {\n    return this.#size\n  }\n\n  /**\n   * The type property of a Blob object returns the MIME type of the file.\n   */\n  get type () {\n    return this.#type\n  }\n\n  /**\n   * The text() method in the Blob interface returns a Promise\n   * that resolves with a string containing the contents of\n   * the blob, interpreted as UTF-8.\n   *\n   * @return {Promise<string>}\n   */\n  async text () {\n    // More optimized than using this.arrayBuffer()\n    // that requires twice as much ram\n    const decoder = new TextDecoder()\n    let str = ''\n    for await (const part of toIterator(this.#parts, false)) {\n      str += decoder.decode(part, { stream: true })\n    }\n    // Remaining\n    str += decoder.decode()\n    return str\n  }\n\n  /**\n   * The arrayBuffer() method in the Blob interface returns a\n   * Promise that resolves with the contents of the blob as\n   * binary data contained in an ArrayBuffer.\n   *\n   * @return {Promise<ArrayBuffer>}\n   */\n  async arrayBuffer () {\n    // Easier way... Just a unnecessary overhead\n    // const view = new Uint8Array(this.size);\n    // await this.stream().getReader({mode: 'byob'}).read(view);\n    // return view.buffer;\n\n    const data = new Uint8Array(this.size)\n    let offset = 0\n    for await (const chunk of toIterator(this.#parts, false)) {\n      data.set(chunk, offset)\n      offset += chunk.length\n    }\n\n    return data.buffer\n  }\n\n  stream () {\n    const it = toIterator(this.#parts, true)\n\n    return new globalThis.ReadableStream({\n      // @ts-ignore\n      type: 'bytes',\n      async pull (ctrl) {\n        const chunk = await it.next()\n        chunk.done ? ctrl.close() : ctrl.enqueue(chunk.value)\n      },\n\n      async cancel () {\n        await it.return()\n      }\n    })\n  }\n\n  /**\n   * The Blob interface's slice() method creates and returns a\n   * new Blob object which contains data from a subset of the\n   * blob on which it's called.\n   *\n   * @param {number} [start]\n   * @param {number} [end]\n   * @param {string} [type]\n   */\n  slice (start = 0, end = this.size, type = '') {\n    const { size } = this\n\n    let relativeStart = start < 0 ? Math.max(size + start, 0) : Math.min(start, size)\n    let relativeEnd = end < 0 ? Math.max(size + end, 0) : Math.min(end, size)\n\n    const span = Math.max(relativeEnd - relativeStart, 0)\n    const parts = this.#parts\n    const blobParts = []\n    let added = 0\n\n    for (const part of parts) {\n      // don't add the overflow to new blobParts\n      if (added >= span) {\n        break\n      }\n\n      const size = ArrayBuffer.isView(part) ? part.byteLength : part.size\n      if (relativeStart && size <= relativeStart) {\n        // Skip the beginning and change the relative\n        // start & end position as we skip the unwanted parts\n        relativeStart -= size\n        relativeEnd -= size\n      } else {\n        let chunk\n        if (ArrayBuffer.isView(part)) {\n          chunk = part.subarray(relativeStart, Math.min(size, relativeEnd))\n          added += chunk.byteLength\n        } else {\n          chunk = part.slice(relativeStart, Math.min(size, relativeEnd))\n          added += chunk.size\n        }\n        relativeEnd -= size\n        blobParts.push(chunk)\n        relativeStart = 0 // All next sequential parts should start at 0\n      }\n    }\n\n    const blob = new Blob([], { type: String(type).toLowerCase() })\n    blob.#size = span\n    blob.#parts = blobParts\n\n    return blob\n  }\n\n  get [Symbol.toStringTag] () {\n    return 'Blob'\n  }\n\n  static [Symbol.hasInstance] (object) {\n    return (\n      object &&\n      typeof object === 'object' &&\n      typeof object.constructor === 'function' &&\n      (\n        typeof object.stream === 'function' ||\n        typeof object.arrayBuffer === 'function'\n      ) &&\n      /^(Blob|File)$/.test(object[Symbol.toStringTag])\n    )\n  }\n}\n\nObject.defineProperties(_Blob.prototype, {\n  size: { enumerable: true },\n  type: { enumerable: true },\n  slice: { enumerable: true }\n})\n\n/** @type {typeof globalThis.Blob} */\nexport const Blob = _Blob\nexport default Blob\n","/*! formdata-polyfill. MIT License. Jimmy Wärting <https://jimmy.warting.se/opensource> */\n\nimport C from 'fetch-blob'\nimport F from 'fetch-blob/file.js'\n\nvar {toStringTag:t,iterator:i,hasInstance:h}=Symbol,\nr=Math.random,\nm='append,set,get,getAll,delete,keys,values,entries,forEach,constructor'.split(','),\nf=(a,b,c)=>(a+='',/^(Blob|File)$/.test(b && b[t])?[(c=c!==void 0?c+'':b[t]=='File'?b.name:'blob',a),b.name!==c||b[t]=='blob'?new F([b],c,b):b]:[a,b+'']),\ne=(c,f)=>(f?c:c.replace(/\\r?\\n|\\r/g,'\\r\\n')).replace(/\\n/g,'%0A').replace(/\\r/g,'%0D').replace(/\"/g,'%22'),\nx=(n, a, e)=>{if(a.length<e){throw new TypeError(`Failed to execute '${n}' on 'FormData': ${e} arguments required, but only ${a.length} present.`)}}\n\nexport const File = F\n\n/** @type {typeof globalThis.FormData} */\nexport const FormData = class FormData {\n#d=[];\nconstructor(...a){if(a.length)throw new TypeError(`Failed to construct 'FormData': parameter 1 is not of type 'HTMLFormElement'.`)}\nget [t]() {return 'FormData'}\n[i](){return this.entries()}\nstatic [h](o) {return o&&typeof o==='object'&&o[t]==='FormData'&&!m.some(m=>typeof o[m]!='function')}\nappend(...a){x('append',arguments,2);this.#d.push(f(...a))}\ndelete(a){x('delete',arguments,1);a+='';this.#d=this.#d.filter(([b])=>b!==a)}\nget(a){x('get',arguments,1);a+='';for(var b=this.#d,l=b.length,c=0;c<l;c++)if(b[c][0]===a)return b[c][1];return null}\ngetAll(a,b){x('getAll',arguments,1);b=[];a+='';this.#d.forEach(c=>c[0]===a&&b.push(c[1]));return b}\nhas(a){x('has',arguments,1);a+='';return this.#d.some(b=>b[0]===a)}\nforEach(a,b){x('forEach',arguments,1);for(var [c,d]of this)a.call(b,d,c,this)}\nset(...a){x('set',arguments,2);var b=[],c=!0;a=f(...a);this.#d.forEach(d=>{d[0]===a[0]?c&&(c=!b.push(a)):b.push(d)});c&&b.push(a);this.#d=b}\n*entries(){yield*this.#d}\n*keys(){for(var[a]of this)yield a}\n*values(){for(var[,a]of this)yield a}}\n\n/** @param {FormData} F */\nexport function formDataToBlob (F,B=C){\nvar b=`${r()}${r()}`.replace(/\\./g, '').slice(-28).padStart(32, '-'),c=[],p=`--${b}\\r\\nContent-Disposition: form-data; name=\"`\nF.forEach((v,n)=>typeof v=='string'\n?c.push(p+e(n)+`\"\\r\\n\\r\\n${v.replace(/\\r(?!\\n)|(?<!\\r)\\n/g, '\\r\\n')}\\r\\n`)\n:c.push(p+e(n)+`\"; filename=\"${e(v.name, 1)}\"\\r\\nContent-Type: ${v.type||\"application/octet-stream\"}\\r\\n\\r\\n`, v, '\\r\\n'))\nc.push(`--${b}--`)\nreturn new B(c,{type:\"multipart/form-data; boundary=\"+b})}\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"node:http\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"node:https\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"node:zlib\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"node:stream\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"node:buffer\");","/**\n * Returns a `Buffer` instance from the given data URI `uri`.\n *\n * @param {String} uri Data URI to turn into a Buffer instance\n * @returns {Buffer} Buffer instance from Data URI\n * @api public\n */\nexport function dataUriToBuffer(uri) {\n    if (!/^data:/i.test(uri)) {\n        throw new TypeError('`uri` does not appear to be a Data URI (must begin with \"data:\")');\n    }\n    // strip newlines\n    uri = uri.replace(/\\r?\\n/g, '');\n    // split the URI up into the \"metadata\" and the \"data\" portions\n    const firstComma = uri.indexOf(',');\n    if (firstComma === -1 || firstComma <= 4) {\n        throw new TypeError('malformed data: URI');\n    }\n    // remove the \"data:\" scheme and parse the metadata\n    const meta = uri.substring(5, firstComma).split(';');\n    let charset = '';\n    let base64 = false;\n    const type = meta[0] || 'text/plain';\n    let typeFull = type;\n    for (let i = 1; i < meta.length; i++) {\n        if (meta[i] === 'base64') {\n            base64 = true;\n        }\n        else if (meta[i]) {\n            typeFull += `;${meta[i]}`;\n            if (meta[i].indexOf('charset=') === 0) {\n                charset = meta[i].substring(8);\n            }\n        }\n    }\n    // defaults to US-ASCII only if type is not provided\n    if (!meta[0] && !charset.length) {\n        typeFull += ';charset=US-ASCII';\n        charset = 'US-ASCII';\n    }\n    // get the encoded data portion and decode URI-encoded chars\n    const encoding = base64 ? 'base64' : 'ascii';\n    const data = unescape(uri.substring(firstComma + 1));\n    const buffer = Buffer.from(data, encoding);\n    // set `.type` and `.typeFull` properties to MIME type\n    buffer.type = type;\n    buffer.typeFull = typeFull;\n    // set the `.charset` property\n    buffer.charset = charset;\n    return buffer;\n}\nexport default dataUriToBuffer;\n//# sourceMappingURL=index.js.map","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"node:util\");","export class FetchBaseError extends Error {\n\tconstructor(message, type) {\n\t\tsuper(message);\n\t\t// Hide custom error implementation details from end-users\n\t\tError.captureStackTrace(this, this.constructor);\n\n\t\tthis.type = type;\n\t}\n\n\tget name() {\n\t\treturn this.constructor.name;\n\t}\n\n\tget [Symbol.toStringTag]() {\n\t\treturn this.constructor.name;\n\t}\n}\n","\nimport {FetchBaseError} from './base.js';\n\n/**\n * @typedef {{ address?: string, code: string, dest?: string, errno: number, info?: object, message: string, path?: string, port?: number, syscall: string}} SystemError\n*/\n\n/**\n * FetchError interface for operational errors\n */\nexport class FetchError extends FetchBaseError {\n\t/**\n\t * @param  {string} message -      Error message for human\n\t * @param  {string} [type] -        Error type for machine\n\t * @param  {SystemError} [systemError] - For Node.js system error\n\t */\n\tconstructor(message, type, systemError) {\n\t\tsuper(message, type);\n\t\t// When err.type is `system`, err.erroredSysCall contains system error and err.code contains system error code\n\t\tif (systemError) {\n\t\t\t// eslint-disable-next-line no-multi-assign\n\t\t\tthis.code = this.errno = systemError.code;\n\t\t\tthis.erroredSysCall = systemError.syscall;\n\t\t}\n\t}\n}\n","/**\n * Is.js\n *\n * Object type checks.\n */\n\nconst NAME = Symbol.toStringTag;\n\n/**\n * Check if `obj` is a URLSearchParams object\n * ref: https://github.com/node-fetch/node-fetch/issues/296#issuecomment-307598143\n * @param {*} object - Object to check for\n * @return {boolean}\n */\nexport const isURLSearchParameters = object => {\n\treturn (\n\t\ttypeof object === 'object' &&\n\t\ttypeof object.append === 'function' &&\n\t\ttypeof object.delete === 'function' &&\n\t\ttypeof object.get === 'function' &&\n\t\ttypeof object.getAll === 'function' &&\n\t\ttypeof object.has === 'function' &&\n\t\ttypeof object.set === 'function' &&\n\t\ttypeof object.sort === 'function' &&\n\t\tobject[NAME] === 'URLSearchParams'\n\t);\n};\n\n/**\n * Check if `object` is a W3C `Blob` object (which `File` inherits from)\n * @param {*} object - Object to check for\n * @return {boolean}\n */\nexport const isBlob = object => {\n\treturn (\n\t\tobject &&\n\t\ttypeof object === 'object' &&\n\t\ttypeof object.arrayBuffer === 'function' &&\n\t\ttypeof object.type === 'string' &&\n\t\ttypeof object.stream === 'function' &&\n\t\ttypeof object.constructor === 'function' &&\n\t\t/^(Blob|File)$/.test(object[NAME])\n\t);\n};\n\n/**\n * Check if `obj` is an instance of AbortSignal.\n * @param {*} object - Object to check for\n * @return {boolean}\n */\nexport const isAbortSignal = object => {\n\treturn (\n\t\ttypeof object === 'object' && (\n\t\t\tobject[NAME] === 'AbortSignal' ||\n\t\t\tobject[NAME] === 'EventTarget'\n\t\t)\n\t);\n};\n\n/**\n * isDomainOrSubdomain reports whether sub is a subdomain (or exact match) of\n * the parent domain.\n *\n * Both domains must already be in canonical form.\n * @param {string|URL} original\n * @param {string|URL} destination\n */\nexport const isDomainOrSubdomain = (destination, original) => {\n\tconst orig = new URL(original).hostname;\n\tconst dest = new URL(destination).hostname;\n\n\treturn orig === dest || orig.endsWith(`.${dest}`);\n};\n\n/**\n * isSameProtocol reports whether the two provided URLs use the same protocol.\n *\n * Both domains must already be in canonical form.\n * @param {string|URL} original\n * @param {string|URL} destination\n */\nexport const isSameProtocol = (destination, original) => {\n\tconst orig = new URL(original).protocol;\n\tconst dest = new URL(destination).protocol;\n\n\treturn orig === dest;\n};\n","\n/**\n * Body.js\n *\n * Body interface provides common methods for Request and Response\n */\n\nimport Stream, {PassThrough} from 'node:stream';\nimport {types, deprecate, promisify} from 'node:util';\nimport {Buffer} from 'node:buffer';\n\nimport Blob from 'fetch-blob';\nimport {FormData, formDataToBlob} from 'formdata-polyfill/esm.min.js';\n\nimport {FetchError} from './errors/fetch-error.js';\nimport {FetchBaseError} from './errors/base.js';\nimport {isBlob, isURLSearchParameters} from './utils/is.js';\n\nconst pipeline = promisify(Stream.pipeline);\nconst INTERNALS = Symbol('Body internals');\n\n/**\n * Body mixin\n *\n * Ref: https://fetch.spec.whatwg.org/#body\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nexport default class Body {\n\tconstructor(body, {\n\t\tsize = 0\n\t} = {}) {\n\t\tlet boundary = null;\n\n\t\tif (body === null) {\n\t\t\t// Body is undefined or null\n\t\t\tbody = null;\n\t\t} else if (isURLSearchParameters(body)) {\n\t\t\t// Body is a URLSearchParams\n\t\t\tbody = Buffer.from(body.toString());\n\t\t} else if (isBlob(body)) {\n\t\t\t// Body is blob\n\t\t} else if (Buffer.isBuffer(body)) {\n\t\t\t// Body is Buffer\n\t\t} else if (types.isAnyArrayBuffer(body)) {\n\t\t\t// Body is ArrayBuffer\n\t\t\tbody = Buffer.from(body);\n\t\t} else if (ArrayBuffer.isView(body)) {\n\t\t\t// Body is ArrayBufferView\n\t\t\tbody = Buffer.from(body.buffer, body.byteOffset, body.byteLength);\n\t\t} else if (body instanceof Stream) {\n\t\t\t// Body is stream\n\t\t} else if (body instanceof FormData) {\n\t\t\t// Body is FormData\n\t\t\tbody = formDataToBlob(body);\n\t\t\tboundary = body.type.split('=')[1];\n\t\t} else {\n\t\t\t// None of the above\n\t\t\t// coerce to string then buffer\n\t\t\tbody = Buffer.from(String(body));\n\t\t}\n\n\t\tlet stream = body;\n\n\t\tif (Buffer.isBuffer(body)) {\n\t\t\tstream = Stream.Readable.from(body);\n\t\t} else if (isBlob(body)) {\n\t\t\tstream = Stream.Readable.from(body.stream());\n\t\t}\n\n\t\tthis[INTERNALS] = {\n\t\t\tbody,\n\t\t\tstream,\n\t\t\tboundary,\n\t\t\tdisturbed: false,\n\t\t\terror: null\n\t\t};\n\t\tthis.size = size;\n\n\t\tif (body instanceof Stream) {\n\t\t\tbody.on('error', error_ => {\n\t\t\t\tconst error = error_ instanceof FetchBaseError ?\n\t\t\t\t\terror_ :\n\t\t\t\t\tnew FetchError(`Invalid response body while trying to fetch ${this.url}: ${error_.message}`, 'system', error_);\n\t\t\t\tthis[INTERNALS].error = error;\n\t\t\t});\n\t\t}\n\t}\n\n\tget body() {\n\t\treturn this[INTERNALS].stream;\n\t}\n\n\tget bodyUsed() {\n\t\treturn this[INTERNALS].disturbed;\n\t}\n\n\t/**\n\t * Decode response as ArrayBuffer\n\t *\n\t * @return  Promise\n\t */\n\tasync arrayBuffer() {\n\t\tconst {buffer, byteOffset, byteLength} = await consumeBody(this);\n\t\treturn buffer.slice(byteOffset, byteOffset + byteLength);\n\t}\n\n\tasync formData() {\n\t\tconst ct = this.headers.get('content-type');\n\n\t\tif (ct.startsWith('application/x-www-form-urlencoded')) {\n\t\t\tconst formData = new FormData();\n\t\t\tconst parameters = new URLSearchParams(await this.text());\n\n\t\t\tfor (const [name, value] of parameters) {\n\t\t\t\tformData.append(name, value);\n\t\t\t}\n\n\t\t\treturn formData;\n\t\t}\n\n\t\tconst {toFormData} = await import('./utils/multipart-parser.js');\n\t\treturn toFormData(this.body, ct);\n\t}\n\n\t/**\n\t * Return raw response as Blob\n\t *\n\t * @return Promise\n\t */\n\tasync blob() {\n\t\tconst ct = (this.headers && this.headers.get('content-type')) || (this[INTERNALS].body && this[INTERNALS].body.type) || '';\n\t\tconst buf = await this.arrayBuffer();\n\n\t\treturn new Blob([buf], {\n\t\t\ttype: ct\n\t\t});\n\t}\n\n\t/**\n\t * Decode response as json\n\t *\n\t * @return  Promise\n\t */\n\tasync json() {\n\t\tconst text = await this.text();\n\t\treturn JSON.parse(text);\n\t}\n\n\t/**\n\t * Decode response as text\n\t *\n\t * @return  Promise\n\t */\n\tasync text() {\n\t\tconst buffer = await consumeBody(this);\n\t\treturn new TextDecoder().decode(buffer);\n\t}\n\n\t/**\n\t * Decode response as buffer (non-spec api)\n\t *\n\t * @return  Promise\n\t */\n\tbuffer() {\n\t\treturn consumeBody(this);\n\t}\n}\n\nBody.prototype.buffer = deprecate(Body.prototype.buffer, 'Please use \\'response.arrayBuffer()\\' instead of \\'response.buffer()\\'', 'node-fetch#buffer');\n\n// In browsers, all properties are enumerable.\nObject.defineProperties(Body.prototype, {\n\tbody: {enumerable: true},\n\tbodyUsed: {enumerable: true},\n\tarrayBuffer: {enumerable: true},\n\tblob: {enumerable: true},\n\tjson: {enumerable: true},\n\ttext: {enumerable: true},\n\tdata: {get: deprecate(() => {},\n\t\t'data doesn\\'t exist, use json(), text(), arrayBuffer(), or body instead',\n\t\t'https://github.com/node-fetch/node-fetch/issues/1000 (response)')}\n});\n\n/**\n * Consume and convert an entire Body to a Buffer.\n *\n * Ref: https://fetch.spec.whatwg.org/#concept-body-consume-body\n *\n * @return Promise\n */\nasync function consumeBody(data) {\n\tif (data[INTERNALS].disturbed) {\n\t\tthrow new TypeError(`body used already for: ${data.url}`);\n\t}\n\n\tdata[INTERNALS].disturbed = true;\n\n\tif (data[INTERNALS].error) {\n\t\tthrow data[INTERNALS].error;\n\t}\n\n\tconst {body} = data;\n\n\t// Body is null\n\tif (body === null) {\n\t\treturn Buffer.alloc(0);\n\t}\n\n\t/* c8 ignore next 3 */\n\tif (!(body instanceof Stream)) {\n\t\treturn Buffer.alloc(0);\n\t}\n\n\t// Body is stream\n\t// get ready to actually consume the body\n\tconst accum = [];\n\tlet accumBytes = 0;\n\n\ttry {\n\t\tfor await (const chunk of body) {\n\t\t\tif (data.size > 0 && accumBytes + chunk.length > data.size) {\n\t\t\t\tconst error = new FetchError(`content size at ${data.url} over limit: ${data.size}`, 'max-size');\n\t\t\t\tbody.destroy(error);\n\t\t\t\tthrow error;\n\t\t\t}\n\n\t\t\taccumBytes += chunk.length;\n\t\t\taccum.push(chunk);\n\t\t}\n\t} catch (error) {\n\t\tconst error_ = error instanceof FetchBaseError ? error : new FetchError(`Invalid response body while trying to fetch ${data.url}: ${error.message}`, 'system', error);\n\t\tthrow error_;\n\t}\n\n\tif (body.readableEnded === true || body._readableState.ended === true) {\n\t\ttry {\n\t\t\tif (accum.every(c => typeof c === 'string')) {\n\t\t\t\treturn Buffer.from(accum.join(''));\n\t\t\t}\n\n\t\t\treturn Buffer.concat(accum, accumBytes);\n\t\t} catch (error) {\n\t\t\tthrow new FetchError(`Could not create Buffer from response body for ${data.url}: ${error.message}`, 'system', error);\n\t\t}\n\t} else {\n\t\tthrow new FetchError(`Premature close of server response while trying to fetch ${data.url}`);\n\t}\n}\n\n/**\n * Clone body given Res/Req instance\n *\n * @param   Mixed   instance       Response or Request instance\n * @param   String  highWaterMark  highWaterMark for both PassThrough body streams\n * @return  Mixed\n */\nexport const clone = (instance, highWaterMark) => {\n\tlet p1;\n\tlet p2;\n\tlet {body} = instance[INTERNALS];\n\n\t// Don't allow cloning a used body\n\tif (instance.bodyUsed) {\n\t\tthrow new Error('cannot clone body after it is used');\n\t}\n\n\t// Check that body is a stream and not form-data object\n\t// note: we can't clone the form-data object without having it as a dependency\n\tif ((body instanceof Stream) && (typeof body.getBoundary !== 'function')) {\n\t\t// Tee instance body\n\t\tp1 = new PassThrough({highWaterMark});\n\t\tp2 = new PassThrough({highWaterMark});\n\t\tbody.pipe(p1);\n\t\tbody.pipe(p2);\n\t\t// Set instance body to teed body and return the other teed body\n\t\tinstance[INTERNALS].stream = p1;\n\t\tbody = p2;\n\t}\n\n\treturn body;\n};\n\nconst getNonSpecFormDataBoundary = deprecate(\n\tbody => body.getBoundary(),\n\t'form-data doesn\\'t follow the spec and requires special treatment. Use alternative package',\n\t'https://github.com/node-fetch/node-fetch/issues/1167'\n);\n\n/**\n * Performs the operation \"extract a `Content-Type` value from |object|\" as\n * specified in the specification:\n * https://fetch.spec.whatwg.org/#concept-bodyinit-extract\n *\n * This function assumes that instance.body is present.\n *\n * @param {any} body Any options.body input\n * @returns {string | null}\n */\nexport const extractContentType = (body, request) => {\n\t// Body is null or undefined\n\tif (body === null) {\n\t\treturn null;\n\t}\n\n\t// Body is string\n\tif (typeof body === 'string') {\n\t\treturn 'text/plain;charset=UTF-8';\n\t}\n\n\t// Body is a URLSearchParams\n\tif (isURLSearchParameters(body)) {\n\t\treturn 'application/x-www-form-urlencoded;charset=UTF-8';\n\t}\n\n\t// Body is blob\n\tif (isBlob(body)) {\n\t\treturn body.type || null;\n\t}\n\n\t// Body is a Buffer (Buffer, ArrayBuffer or ArrayBufferView)\n\tif (Buffer.isBuffer(body) || types.isAnyArrayBuffer(body) || ArrayBuffer.isView(body)) {\n\t\treturn null;\n\t}\n\n\tif (body instanceof FormData) {\n\t\treturn `multipart/form-data; boundary=${request[INTERNALS].boundary}`;\n\t}\n\n\t// Detect form data input from form-data module\n\tif (body && typeof body.getBoundary === 'function') {\n\t\treturn `multipart/form-data;boundary=${getNonSpecFormDataBoundary(body)}`;\n\t}\n\n\t// Body is stream - can't really do much about this\n\tif (body instanceof Stream) {\n\t\treturn null;\n\t}\n\n\t// Body constructor defaults other things to string\n\treturn 'text/plain;charset=UTF-8';\n};\n\n/**\n * The Fetch Standard treats this as if \"total bytes\" is a property on the body.\n * For us, we have to explicitly get it with a function.\n *\n * ref: https://fetch.spec.whatwg.org/#concept-body-total-bytes\n *\n * @param {any} obj.body Body object from the Body instance.\n * @returns {number | null}\n */\nexport const getTotalBytes = request => {\n\tconst {body} = request[INTERNALS];\n\n\t// Body is null or undefined\n\tif (body === null) {\n\t\treturn 0;\n\t}\n\n\t// Body is Blob\n\tif (isBlob(body)) {\n\t\treturn body.size;\n\t}\n\n\t// Body is Buffer\n\tif (Buffer.isBuffer(body)) {\n\t\treturn body.length;\n\t}\n\n\t// Detect form data input from form-data module\n\tif (body && typeof body.getLengthSync === 'function') {\n\t\treturn body.hasKnownLength && body.hasKnownLength() ? body.getLengthSync() : null;\n\t}\n\n\t// Body is stream\n\treturn null;\n};\n\n/**\n * Write a Body to a Node.js WritableStream (e.g. http.Request) object.\n *\n * @param {Stream.Writable} dest The stream to write to.\n * @param obj.body Body object from the Body instance.\n * @returns {Promise<void>}\n */\nexport const writeToStream = async (dest, {body}) => {\n\tif (body === null) {\n\t\t// Body is null\n\t\tdest.end();\n\t} else {\n\t\t// Body is stream\n\t\tawait pipeline(body, dest);\n\t}\n};\n","/**\n * Headers.js\n *\n * Headers class offers convenient helpers\n */\n\nimport {types} from 'node:util';\nimport http from 'node:http';\n\n/* c8 ignore next 9 */\nconst validateHeaderName = typeof http.validateHeaderName === 'function' ?\n\thttp.validateHeaderName :\n\tname => {\n\t\tif (!/^[\\^`\\-\\w!#$%&'*+.|~]+$/.test(name)) {\n\t\t\tconst error = new TypeError(`Header name must be a valid HTTP token [${name}]`);\n\t\t\tObject.defineProperty(error, 'code', {value: 'ERR_INVALID_HTTP_TOKEN'});\n\t\t\tthrow error;\n\t\t}\n\t};\n\n/* c8 ignore next 9 */\nconst validateHeaderValue = typeof http.validateHeaderValue === 'function' ?\n\thttp.validateHeaderValue :\n\t(name, value) => {\n\t\tif (/[^\\t\\u0020-\\u007E\\u0080-\\u00FF]/.test(value)) {\n\t\t\tconst error = new TypeError(`Invalid character in header content [\"${name}\"]`);\n\t\t\tObject.defineProperty(error, 'code', {value: 'ERR_INVALID_CHAR'});\n\t\t\tthrow error;\n\t\t}\n\t};\n\n/**\n * @typedef {Headers | Record<string, string> | Iterable<readonly [string, string]> | Iterable<Iterable<string>>} HeadersInit\n */\n\n/**\n * This Fetch API interface allows you to perform various actions on HTTP request and response headers.\n * These actions include retrieving, setting, adding to, and removing.\n * A Headers object has an associated header list, which is initially empty and consists of zero or more name and value pairs.\n * You can add to this using methods like append() (see Examples.)\n * In all methods of this interface, header names are matched by case-insensitive byte sequence.\n *\n */\nexport default class Headers extends URLSearchParams {\n\t/**\n\t * Headers class\n\t *\n\t * @constructor\n\t * @param {HeadersInit} [init] - Response headers\n\t */\n\tconstructor(init) {\n\t\t// Validate and normalize init object in [name, value(s)][]\n\t\t/** @type {string[][]} */\n\t\tlet result = [];\n\t\tif (init instanceof Headers) {\n\t\t\tconst raw = init.raw();\n\t\t\tfor (const [name, values] of Object.entries(raw)) {\n\t\t\t\tresult.push(...values.map(value => [name, value]));\n\t\t\t}\n\t\t} else if (init == null) { // eslint-disable-line no-eq-null, eqeqeq\n\t\t\t// No op\n\t\t} else if (typeof init === 'object' && !types.isBoxedPrimitive(init)) {\n\t\t\tconst method = init[Symbol.iterator];\n\t\t\t// eslint-disable-next-line no-eq-null, eqeqeq\n\t\t\tif (method == null) {\n\t\t\t\t// Record<ByteString, ByteString>\n\t\t\t\tresult.push(...Object.entries(init));\n\t\t\t} else {\n\t\t\t\tif (typeof method !== 'function') {\n\t\t\t\t\tthrow new TypeError('Header pairs must be iterable');\n\t\t\t\t}\n\n\t\t\t\t// Sequence<sequence<ByteString>>\n\t\t\t\t// Note: per spec we have to first exhaust the lists then process them\n\t\t\t\tresult = [...init]\n\t\t\t\t\t.map(pair => {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\ttypeof pair !== 'object' || types.isBoxedPrimitive(pair)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tthrow new TypeError('Each header pair must be an iterable object');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn [...pair];\n\t\t\t\t\t}).map(pair => {\n\t\t\t\t\t\tif (pair.length !== 2) {\n\t\t\t\t\t\t\tthrow new TypeError('Each header pair must be a name/value tuple');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn [...pair];\n\t\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new TypeError('Failed to construct \\'Headers\\': The provided value is not of type \\'(sequence<sequence<ByteString>> or record<ByteString, ByteString>)');\n\t\t}\n\n\t\t// Validate and lowercase\n\t\tresult =\n\t\t\tresult.length > 0 ?\n\t\t\t\tresult.map(([name, value]) => {\n\t\t\t\t\tvalidateHeaderName(name);\n\t\t\t\t\tvalidateHeaderValue(name, String(value));\n\t\t\t\t\treturn [String(name).toLowerCase(), String(value)];\n\t\t\t\t}) :\n\t\t\t\tundefined;\n\n\t\tsuper(result);\n\n\t\t// Returning a Proxy that will lowercase key names, validate parameters and sort keys\n\t\t// eslint-disable-next-line no-constructor-return\n\t\treturn new Proxy(this, {\n\t\t\tget(target, p, receiver) {\n\t\t\t\tswitch (p) {\n\t\t\t\t\tcase 'append':\n\t\t\t\t\tcase 'set':\n\t\t\t\t\t\treturn (name, value) => {\n\t\t\t\t\t\t\tvalidateHeaderName(name);\n\t\t\t\t\t\t\tvalidateHeaderValue(name, String(value));\n\t\t\t\t\t\t\treturn URLSearchParams.prototype[p].call(\n\t\t\t\t\t\t\t\ttarget,\n\t\t\t\t\t\t\t\tString(name).toLowerCase(),\n\t\t\t\t\t\t\t\tString(value)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t};\n\n\t\t\t\t\tcase 'delete':\n\t\t\t\t\tcase 'has':\n\t\t\t\t\tcase 'getAll':\n\t\t\t\t\t\treturn name => {\n\t\t\t\t\t\t\tvalidateHeaderName(name);\n\t\t\t\t\t\t\treturn URLSearchParams.prototype[p].call(\n\t\t\t\t\t\t\t\ttarget,\n\t\t\t\t\t\t\t\tString(name).toLowerCase()\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t};\n\n\t\t\t\t\tcase 'keys':\n\t\t\t\t\t\treturn () => {\n\t\t\t\t\t\t\ttarget.sort();\n\t\t\t\t\t\t\treturn new Set(URLSearchParams.prototype.keys.call(target)).keys();\n\t\t\t\t\t\t};\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn Reflect.get(target, p, receiver);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\t/* c8 ignore next */\n\t}\n\n\tget [Symbol.toStringTag]() {\n\t\treturn this.constructor.name;\n\t}\n\n\ttoString() {\n\t\treturn Object.prototype.toString.call(this);\n\t}\n\n\tget(name) {\n\t\tconst values = this.getAll(name);\n\t\tif (values.length === 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlet value = values.join(', ');\n\t\tif (/^content-encoding$/i.test(name)) {\n\t\t\tvalue = value.toLowerCase();\n\t\t}\n\n\t\treturn value;\n\t}\n\n\tforEach(callback, thisArg = undefined) {\n\t\tfor (const name of this.keys()) {\n\t\t\tReflect.apply(callback, thisArg, [this.get(name), name, this]);\n\t\t}\n\t}\n\n\t* values() {\n\t\tfor (const name of this.keys()) {\n\t\t\tyield this.get(name);\n\t\t}\n\t}\n\n\t/**\n\t * @type {() => IterableIterator<[string, string]>}\n\t */\n\t* entries() {\n\t\tfor (const name of this.keys()) {\n\t\t\tyield [name, this.get(name)];\n\t\t}\n\t}\n\n\t[Symbol.iterator]() {\n\t\treturn this.entries();\n\t}\n\n\t/**\n\t * Node-fetch non-spec method\n\t * returning all headers and their values as array\n\t * @returns {Record<string, string[]>}\n\t */\n\traw() {\n\t\treturn [...this.keys()].reduce((result, key) => {\n\t\t\tresult[key] = this.getAll(key);\n\t\t\treturn result;\n\t\t}, {});\n\t}\n\n\t/**\n\t * For better console.log(headers) and also to convert Headers into Node.js Request compatible format\n\t */\n\t[Symbol.for('nodejs.util.inspect.custom')]() {\n\t\treturn [...this.keys()].reduce((result, key) => {\n\t\t\tconst values = this.getAll(key);\n\t\t\t// Http.request() only supports string as Host header.\n\t\t\t// This hack makes specifying custom Host header possible.\n\t\t\tif (key === 'host') {\n\t\t\t\tresult[key] = values[0];\n\t\t\t} else {\n\t\t\t\tresult[key] = values.length > 1 ? values : values[0];\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}, {});\n\t}\n}\n\n/**\n * Re-shaping object for Web IDL tests\n * Only need to do it for overridden methods\n */\nObject.defineProperties(\n\tHeaders.prototype,\n\t['get', 'entries', 'forEach', 'values'].reduce((result, property) => {\n\t\tresult[property] = {enumerable: true};\n\t\treturn result;\n\t}, {})\n);\n\n/**\n * Create a Headers object from an http.IncomingMessage.rawHeaders, ignoring those that do\n * not conform to HTTP grammar productions.\n * @param {import('http').IncomingMessage['rawHeaders']} headers\n */\nexport function fromRawHeaders(headers = []) {\n\treturn new Headers(\n\t\theaders\n\t\t\t// Split into pairs\n\t\t\t.reduce((result, value, index, array) => {\n\t\t\t\tif (index % 2 === 0) {\n\t\t\t\t\tresult.push(array.slice(index, index + 2));\n\t\t\t\t}\n\n\t\t\t\treturn result;\n\t\t\t}, [])\n\t\t\t.filter(([name, value]) => {\n\t\t\t\ttry {\n\t\t\t\t\tvalidateHeaderName(name);\n\t\t\t\t\tvalidateHeaderValue(name, String(value));\n\t\t\t\t\treturn true;\n\t\t\t\t} catch {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t})\n\n\t);\n}\n","const redirectStatus = new Set([301, 302, 303, 307, 308]);\n\n/**\n * Redirect code matching\n *\n * @param {number} code - Status code\n * @return {boolean}\n */\nexport const isRedirect = code => {\n\treturn redirectStatus.has(code);\n};\n","/**\n * Response.js\n *\n * Response class provides content decoding\n */\n\nimport Headers from './headers.js';\nimport Body, {clone, extractContentType} from './body.js';\nimport {isRedirect} from './utils/is-redirect.js';\n\nconst INTERNALS = Symbol('Response internals');\n\n/**\n * Response class\n *\n * Ref: https://fetch.spec.whatwg.org/#response-class\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nexport default class Response extends Body {\n\tconstructor(body = null, options = {}) {\n\t\tsuper(body, options);\n\n\t\t// eslint-disable-next-line no-eq-null, eqeqeq, no-negated-condition\n\t\tconst status = options.status != null ? options.status : 200;\n\n\t\tconst headers = new Headers(options.headers);\n\n\t\tif (body !== null && !headers.has('Content-Type')) {\n\t\t\tconst contentType = extractContentType(body, this);\n\t\t\tif (contentType) {\n\t\t\t\theaders.append('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\tthis[INTERNALS] = {\n\t\t\ttype: 'default',\n\t\t\turl: options.url,\n\t\t\tstatus,\n\t\t\tstatusText: options.statusText || '',\n\t\t\theaders,\n\t\t\tcounter: options.counter,\n\t\t\thighWaterMark: options.highWaterMark\n\t\t};\n\t}\n\n\tget type() {\n\t\treturn this[INTERNALS].type;\n\t}\n\n\tget url() {\n\t\treturn this[INTERNALS].url || '';\n\t}\n\n\tget status() {\n\t\treturn this[INTERNALS].status;\n\t}\n\n\t/**\n\t * Convenience property representing if the request ended normally\n\t */\n\tget ok() {\n\t\treturn this[INTERNALS].status >= 200 && this[INTERNALS].status < 300;\n\t}\n\n\tget redirected() {\n\t\treturn this[INTERNALS].counter > 0;\n\t}\n\n\tget statusText() {\n\t\treturn this[INTERNALS].statusText;\n\t}\n\n\tget headers() {\n\t\treturn this[INTERNALS].headers;\n\t}\n\n\tget highWaterMark() {\n\t\treturn this[INTERNALS].highWaterMark;\n\t}\n\n\t/**\n\t * Clone this response\n\t *\n\t * @return  Response\n\t */\n\tclone() {\n\t\treturn new Response(clone(this, this.highWaterMark), {\n\t\t\ttype: this.type,\n\t\t\turl: this.url,\n\t\t\tstatus: this.status,\n\t\t\tstatusText: this.statusText,\n\t\t\theaders: this.headers,\n\t\t\tok: this.ok,\n\t\t\tredirected: this.redirected,\n\t\t\tsize: this.size,\n\t\t\thighWaterMark: this.highWaterMark\n\t\t});\n\t}\n\n\t/**\n\t * @param {string} url    The URL that the new response is to originate from.\n\t * @param {number} status An optional status code for the response (e.g., 302.)\n\t * @returns {Response}    A Response object.\n\t */\n\tstatic redirect(url, status = 302) {\n\t\tif (!isRedirect(status)) {\n\t\t\tthrow new RangeError('Failed to execute \"redirect\" on \"response\": Invalid status code');\n\t\t}\n\n\t\treturn new Response(null, {\n\t\t\theaders: {\n\t\t\t\tlocation: new URL(url).toString()\n\t\t\t},\n\t\t\tstatus\n\t\t});\n\t}\n\n\tstatic error() {\n\t\tconst response = new Response(null, {status: 0, statusText: ''});\n\t\tresponse[INTERNALS].type = 'error';\n\t\treturn response;\n\t}\n\n\tstatic json(data = undefined, init = {}) {\n\t\tconst body = JSON.stringify(data);\n\n\t\tif (body === undefined) {\n\t\t\tthrow new TypeError('data is not JSON serializable');\n\t\t}\n\n\t\tconst headers = new Headers(init && init.headers);\n\n\t\tif (!headers.has('content-type')) {\n\t\t\theaders.set('content-type', 'application/json');\n\t\t}\n\n\t\treturn new Response(body, {\n\t\t\t...init,\n\t\t\theaders\n\t\t});\n\t}\n\n\tget [Symbol.toStringTag]() {\n\t\treturn 'Response';\n\t}\n}\n\nObject.defineProperties(Response.prototype, {\n\ttype: {enumerable: true},\n\turl: {enumerable: true},\n\tstatus: {enumerable: true},\n\tok: {enumerable: true},\n\tredirected: {enumerable: true},\n\tstatusText: {enumerable: true},\n\theaders: {enumerable: true},\n\tclone: {enumerable: true}\n});\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"node:url\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"node:net\");","import {isIP} from 'node:net';\n\n/**\n * @external URL\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/URL|URL}\n */\n\n/**\n * @module utils/referrer\n * @private\n */\n\n/**\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#strip-url|Referrer Policy §8.4. Strip url for use as a referrer}\n * @param {string} URL\n * @param {boolean} [originOnly=false]\n */\nexport function stripURLForUseAsAReferrer(url, originOnly = false) {\n\t// 1. If url is null, return no referrer.\n\tif (url == null) { // eslint-disable-line no-eq-null, eqeqeq\n\t\treturn 'no-referrer';\n\t}\n\n\turl = new URL(url);\n\n\t// 2. If url's scheme is a local scheme, then return no referrer.\n\tif (/^(about|blob|data):$/.test(url.protocol)) {\n\t\treturn 'no-referrer';\n\t}\n\n\t// 3. Set url's username to the empty string.\n\turl.username = '';\n\n\t// 4. Set url's password to null.\n\t// Note: `null` appears to be a mistake as this actually results in the password being `\"null\"`.\n\turl.password = '';\n\n\t// 5. Set url's fragment to null.\n\t// Note: `null` appears to be a mistake as this actually results in the fragment being `\"#null\"`.\n\turl.hash = '';\n\n\t// 6. If the origin-only flag is true, then:\n\tif (originOnly) {\n\t\t// 6.1. Set url's path to null.\n\t\t// Note: `null` appears to be a mistake as this actually results in the path being `\"/null\"`.\n\t\turl.pathname = '';\n\n\t\t// 6.2. Set url's query to null.\n\t\t// Note: `null` appears to be a mistake as this actually results in the query being `\"?null\"`.\n\t\turl.search = '';\n\t}\n\n\t// 7. Return url.\n\treturn url;\n}\n\n/**\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#enumdef-referrerpolicy|enum ReferrerPolicy}\n */\nexport const ReferrerPolicy = new Set([\n\t'',\n\t'no-referrer',\n\t'no-referrer-when-downgrade',\n\t'same-origin',\n\t'origin',\n\t'strict-origin',\n\t'origin-when-cross-origin',\n\t'strict-origin-when-cross-origin',\n\t'unsafe-url'\n]);\n\n/**\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#default-referrer-policy|default referrer policy}\n */\nexport const DEFAULT_REFERRER_POLICY = 'strict-origin-when-cross-origin';\n\n/**\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#referrer-policies|Referrer Policy §3. Referrer Policies}\n * @param {string} referrerPolicy\n * @returns {string} referrerPolicy\n */\nexport function validateReferrerPolicy(referrerPolicy) {\n\tif (!ReferrerPolicy.has(referrerPolicy)) {\n\t\tthrow new TypeError(`Invalid referrerPolicy: ${referrerPolicy}`);\n\t}\n\n\treturn referrerPolicy;\n}\n\n/**\n * @see {@link https://w3c.github.io/webappsec-secure-contexts/#is-origin-trustworthy|Referrer Policy §3.2. Is origin potentially trustworthy?}\n * @param {external:URL} url\n * @returns `true`: \"Potentially Trustworthy\", `false`: \"Not Trustworthy\"\n */\nexport function isOriginPotentiallyTrustworthy(url) {\n\t// 1. If origin is an opaque origin, return \"Not Trustworthy\".\n\t// Not applicable\n\n\t// 2. Assert: origin is a tuple origin.\n\t// Not for implementations\n\n\t// 3. If origin's scheme is either \"https\" or \"wss\", return \"Potentially Trustworthy\".\n\tif (/^(http|ws)s:$/.test(url.protocol)) {\n\t\treturn true;\n\t}\n\n\t// 4. If origin's host component matches one of the CIDR notations 127.0.0.0/8 or ::1/128 [RFC4632], return \"Potentially Trustworthy\".\n\tconst hostIp = url.host.replace(/(^\\[)|(]$)/g, '');\n\tconst hostIPVersion = isIP(hostIp);\n\n\tif (hostIPVersion === 4 && /^127\\./.test(hostIp)) {\n\t\treturn true;\n\t}\n\n\tif (hostIPVersion === 6 && /^(((0+:){7})|(::(0+:){0,6}))0*1$/.test(hostIp)) {\n\t\treturn true;\n\t}\n\n\t// 5. If origin's host component is \"localhost\" or falls within \".localhost\", and the user agent conforms to the name resolution rules in [let-localhost-be-localhost], return \"Potentially Trustworthy\".\n\t// We are returning FALSE here because we cannot ensure conformance to\n\t// let-localhost-be-loalhost (https://tools.ietf.org/html/draft-west-let-localhost-be-localhost)\n\tif (url.host === 'localhost' || url.host.endsWith('.localhost')) {\n\t\treturn false;\n\t}\n\n\t// 6. If origin's scheme component is file, return \"Potentially Trustworthy\".\n\tif (url.protocol === 'file:') {\n\t\treturn true;\n\t}\n\n\t// 7. If origin's scheme component is one which the user agent considers to be authenticated, return \"Potentially Trustworthy\".\n\t// Not supported\n\n\t// 8. If origin has been configured as a trustworthy origin, return \"Potentially Trustworthy\".\n\t// Not supported\n\n\t// 9. Return \"Not Trustworthy\".\n\treturn false;\n}\n\n/**\n * @see {@link https://w3c.github.io/webappsec-secure-contexts/#is-url-trustworthy|Referrer Policy §3.3. Is url potentially trustworthy?}\n * @param {external:URL} url\n * @returns `true`: \"Potentially Trustworthy\", `false`: \"Not Trustworthy\"\n */\nexport function isUrlPotentiallyTrustworthy(url) {\n\t// 1. If url is \"about:blank\" or \"about:srcdoc\", return \"Potentially Trustworthy\".\n\tif (/^about:(blank|srcdoc)$/.test(url)) {\n\t\treturn true;\n\t}\n\n\t// 2. If url's scheme is \"data\", return \"Potentially Trustworthy\".\n\tif (url.protocol === 'data:') {\n\t\treturn true;\n\t}\n\n\t// Note: The origin of blob: and filesystem: URLs is the origin of the context in which they were\n\t// created. Therefore, blobs created in a trustworthy origin will themselves be potentially\n\t// trustworthy.\n\tif (/^(blob|filesystem):$/.test(url.protocol)) {\n\t\treturn true;\n\t}\n\n\t// 3. Return the result of executing §3.2 Is origin potentially trustworthy? on url's origin.\n\treturn isOriginPotentiallyTrustworthy(url);\n}\n\n/**\n * Modifies the referrerURL to enforce any extra security policy considerations.\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#determine-requests-referrer|Referrer Policy §8.3. Determine request's Referrer}, step 7\n * @callback module:utils/referrer~referrerURLCallback\n * @param {external:URL} referrerURL\n * @returns {external:URL} modified referrerURL\n */\n\n/**\n * Modifies the referrerOrigin to enforce any extra security policy considerations.\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#determine-requests-referrer|Referrer Policy §8.3. Determine request's Referrer}, step 7\n * @callback module:utils/referrer~referrerOriginCallback\n * @param {external:URL} referrerOrigin\n * @returns {external:URL} modified referrerOrigin\n */\n\n/**\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#determine-requests-referrer|Referrer Policy §8.3. Determine request's Referrer}\n * @param {Request} request\n * @param {object} o\n * @param {module:utils/referrer~referrerURLCallback} o.referrerURLCallback\n * @param {module:utils/referrer~referrerOriginCallback} o.referrerOriginCallback\n * @returns {external:URL} Request's referrer\n */\nexport function determineRequestsReferrer(request, {referrerURLCallback, referrerOriginCallback} = {}) {\n\t// There are 2 notes in the specification about invalid pre-conditions.  We return null, here, for\n\t// these cases:\n\t// > Note: If request's referrer is \"no-referrer\", Fetch will not call into this algorithm.\n\t// > Note: If request's referrer policy is the empty string, Fetch will not call into this\n\t// > algorithm.\n\tif (request.referrer === 'no-referrer' || request.referrerPolicy === '') {\n\t\treturn null;\n\t}\n\n\t// 1. Let policy be request's associated referrer policy.\n\tconst policy = request.referrerPolicy;\n\n\t// 2. Let environment be request's client.\n\t// not applicable to node.js\n\n\t// 3. Switch on request's referrer:\n\tif (request.referrer === 'about:client') {\n\t\treturn 'no-referrer';\n\t}\n\n\t// \"a URL\": Let referrerSource be request's referrer.\n\tconst referrerSource = request.referrer;\n\n\t// 4. Let request's referrerURL be the result of stripping referrerSource for use as a referrer.\n\tlet referrerURL = stripURLForUseAsAReferrer(referrerSource);\n\n\t// 5. Let referrerOrigin be the result of stripping referrerSource for use as a referrer, with the\n\t//    origin-only flag set to true.\n\tlet referrerOrigin = stripURLForUseAsAReferrer(referrerSource, true);\n\n\t// 6. If the result of serializing referrerURL is a string whose length is greater than 4096, set\n\t//    referrerURL to referrerOrigin.\n\tif (referrerURL.toString().length > 4096) {\n\t\treferrerURL = referrerOrigin;\n\t}\n\n\t// 7. The user agent MAY alter referrerURL or referrerOrigin at this point to enforce arbitrary\n\t//    policy considerations in the interests of minimizing data leakage. For example, the user\n\t//    agent could strip the URL down to an origin, modify its host, replace it with an empty\n\t//    string, etc.\n\tif (referrerURLCallback) {\n\t\treferrerURL = referrerURLCallback(referrerURL);\n\t}\n\n\tif (referrerOriginCallback) {\n\t\treferrerOrigin = referrerOriginCallback(referrerOrigin);\n\t}\n\n\t// 8.Execute the statements corresponding to the value of policy:\n\tconst currentURL = new URL(request.url);\n\n\tswitch (policy) {\n\t\tcase 'no-referrer':\n\t\t\treturn 'no-referrer';\n\n\t\tcase 'origin':\n\t\t\treturn referrerOrigin;\n\n\t\tcase 'unsafe-url':\n\t\t\treturn referrerURL;\n\n\t\tcase 'strict-origin':\n\t\t\t// 1. If referrerURL is a potentially trustworthy URL and request's current URL is not a\n\t\t\t//    potentially trustworthy URL, then return no referrer.\n\t\t\tif (isUrlPotentiallyTrustworthy(referrerURL) && !isUrlPotentiallyTrustworthy(currentURL)) {\n\t\t\t\treturn 'no-referrer';\n\t\t\t}\n\n\t\t\t// 2. Return referrerOrigin.\n\t\t\treturn referrerOrigin.toString();\n\n\t\tcase 'strict-origin-when-cross-origin':\n\t\t\t// 1. If the origin of referrerURL and the origin of request's current URL are the same, then\n\t\t\t//    return referrerURL.\n\t\t\tif (referrerURL.origin === currentURL.origin) {\n\t\t\t\treturn referrerURL;\n\t\t\t}\n\n\t\t\t// 2. If referrerURL is a potentially trustworthy URL and request's current URL is not a\n\t\t\t//    potentially trustworthy URL, then return no referrer.\n\t\t\tif (isUrlPotentiallyTrustworthy(referrerURL) && !isUrlPotentiallyTrustworthy(currentURL)) {\n\t\t\t\treturn 'no-referrer';\n\t\t\t}\n\n\t\t\t// 3. Return referrerOrigin.\n\t\t\treturn referrerOrigin;\n\n\t\tcase 'same-origin':\n\t\t\t// 1. If the origin of referrerURL and the origin of request's current URL are the same, then\n\t\t\t//    return referrerURL.\n\t\t\tif (referrerURL.origin === currentURL.origin) {\n\t\t\t\treturn referrerURL;\n\t\t\t}\n\n\t\t\t// 2. Return no referrer.\n\t\t\treturn 'no-referrer';\n\n\t\tcase 'origin-when-cross-origin':\n\t\t\t// 1. If the origin of referrerURL and the origin of request's current URL are the same, then\n\t\t\t//    return referrerURL.\n\t\t\tif (referrerURL.origin === currentURL.origin) {\n\t\t\t\treturn referrerURL;\n\t\t\t}\n\n\t\t\t// Return referrerOrigin.\n\t\t\treturn referrerOrigin;\n\n\t\tcase 'no-referrer-when-downgrade':\n\t\t\t// 1. If referrerURL is a potentially trustworthy URL and request's current URL is not a\n\t\t\t//    potentially trustworthy URL, then return no referrer.\n\t\t\tif (isUrlPotentiallyTrustworthy(referrerURL) && !isUrlPotentiallyTrustworthy(currentURL)) {\n\t\t\t\treturn 'no-referrer';\n\t\t\t}\n\n\t\t\t// 2. Return referrerURL.\n\t\t\treturn referrerURL;\n\n\t\tdefault:\n\t\t\tthrow new TypeError(`Invalid referrerPolicy: ${policy}`);\n\t}\n}\n\n/**\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#parse-referrer-policy-from-header|Referrer Policy §8.1. Parse a referrer policy from a Referrer-Policy header}\n * @param {Headers} headers Response headers\n * @returns {string} policy\n */\nexport function parseReferrerPolicyFromHeader(headers) {\n\t// 1. Let policy-tokens be the result of extracting header list values given `Referrer-Policy`\n\t//    and response’s header list.\n\tconst policyTokens = (headers.get('referrer-policy') || '').split(/[,\\s]+/);\n\n\t// 2. Let policy be the empty string.\n\tlet policy = '';\n\n\t// 3. For each token in policy-tokens, if token is a referrer policy and token is not the empty\n\t//    string, then set policy to token.\n\t// Note: This algorithm loops over multiple policy values to allow deployment of new policy\n\t// values with fallbacks for older user agents, as described in § 11.1 Unknown Policy Values.\n\tfor (const token of policyTokens) {\n\t\tif (token && ReferrerPolicy.has(token)) {\n\t\t\tpolicy = token;\n\t\t}\n\t}\n\n\t// 4. Return policy.\n\treturn policy;\n}\n","/**\n * Request.js\n *\n * Request class contains server only options\n *\n * All spec algorithm step numbers are based on https://fetch.spec.whatwg.org/commit-snapshots/ae716822cb3a61843226cd090eefc6589446c1d2/.\n */\n\nimport {format as formatUrl} from 'node:url';\nimport {deprecate} from 'node:util';\nimport Headers from './headers.js';\nimport Body, {clone, extractContentType, getTotalBytes} from './body.js';\nimport {isAbortSignal} from './utils/is.js';\nimport {getSearch} from './utils/get-search.js';\nimport {\n\tvalidateReferrerPolicy, determineRequestsReferrer, DEFAULT_REFERRER_POLICY\n} from './utils/referrer.js';\n\nconst INTERNALS = Symbol('Request internals');\n\n/**\n * Check if `obj` is an instance of Request.\n *\n * @param  {*} object\n * @return {boolean}\n */\nconst isRequest = object => {\n\treturn (\n\t\ttypeof object === 'object' &&\n\t\ttypeof object[INTERNALS] === 'object'\n\t);\n};\n\nconst doBadDataWarn = deprecate(() => {},\n\t'.data is not a valid RequestInit property, use .body instead',\n\t'https://github.com/node-fetch/node-fetch/issues/1000 (request)');\n\n/**\n * Request class\n *\n * Ref: https://fetch.spec.whatwg.org/#request-class\n *\n * @param   Mixed   input  Url or Request instance\n * @param   Object  init   Custom options\n * @return  Void\n */\nexport default class Request extends Body {\n\tconstructor(input, init = {}) {\n\t\tlet parsedURL;\n\n\t\t// Normalize input and force URL to be encoded as UTF-8 (https://github.com/node-fetch/node-fetch/issues/245)\n\t\tif (isRequest(input)) {\n\t\t\tparsedURL = new URL(input.url);\n\t\t} else {\n\t\t\tparsedURL = new URL(input);\n\t\t\tinput = {};\n\t\t}\n\n\t\tif (parsedURL.username !== '' || parsedURL.password !== '') {\n\t\t\tthrow new TypeError(`${parsedURL} is an url with embedded credentials.`);\n\t\t}\n\n\t\tlet method = init.method || input.method || 'GET';\n\t\tif (/^(delete|get|head|options|post|put)$/i.test(method)) {\n\t\t\tmethod = method.toUpperCase();\n\t\t}\n\n\t\tif (!isRequest(init) && 'data' in init) {\n\t\t\tdoBadDataWarn();\n\t\t}\n\n\t\t// eslint-disable-next-line no-eq-null, eqeqeq\n\t\tif ((init.body != null || (isRequest(input) && input.body !== null)) &&\n\t\t\t(method === 'GET' || method === 'HEAD')) {\n\t\t\tthrow new TypeError('Request with GET/HEAD method cannot have body');\n\t\t}\n\n\t\tconst inputBody = init.body ?\n\t\t\tinit.body :\n\t\t\t(isRequest(input) && input.body !== null ?\n\t\t\t\tclone(input) :\n\t\t\t\tnull);\n\n\t\tsuper(inputBody, {\n\t\t\tsize: init.size || input.size || 0\n\t\t});\n\n\t\tconst headers = new Headers(init.headers || input.headers || {});\n\n\t\tif (inputBody !== null && !headers.has('Content-Type')) {\n\t\t\tconst contentType = extractContentType(inputBody, this);\n\t\t\tif (contentType) {\n\t\t\t\theaders.set('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\tlet signal = isRequest(input) ?\n\t\t\tinput.signal :\n\t\t\tnull;\n\t\tif ('signal' in init) {\n\t\t\tsignal = init.signal;\n\t\t}\n\n\t\t// eslint-disable-next-line no-eq-null, eqeqeq\n\t\tif (signal != null && !isAbortSignal(signal)) {\n\t\t\tthrow new TypeError('Expected signal to be an instanceof AbortSignal or EventTarget');\n\t\t}\n\n\t\t// §5.4, Request constructor steps, step 15.1\n\t\t// eslint-disable-next-line no-eq-null, eqeqeq\n\t\tlet referrer = init.referrer == null ? input.referrer : init.referrer;\n\t\tif (referrer === '') {\n\t\t\t// §5.4, Request constructor steps, step 15.2\n\t\t\treferrer = 'no-referrer';\n\t\t} else if (referrer) {\n\t\t\t// §5.4, Request constructor steps, step 15.3.1, 15.3.2\n\t\t\tconst parsedReferrer = new URL(referrer);\n\t\t\t// §5.4, Request constructor steps, step 15.3.3, 15.3.4\n\t\t\treferrer = /^about:(\\/\\/)?client$/.test(parsedReferrer) ? 'client' : parsedReferrer;\n\t\t} else {\n\t\t\treferrer = undefined;\n\t\t}\n\n\t\tthis[INTERNALS] = {\n\t\t\tmethod,\n\t\t\tredirect: init.redirect || input.redirect || 'follow',\n\t\t\theaders,\n\t\t\tparsedURL,\n\t\t\tsignal,\n\t\t\treferrer\n\t\t};\n\n\t\t// Node-fetch-only options\n\t\tthis.follow = init.follow === undefined ? (input.follow === undefined ? 20 : input.follow) : init.follow;\n\t\tthis.compress = init.compress === undefined ? (input.compress === undefined ? true : input.compress) : init.compress;\n\t\tthis.counter = init.counter || input.counter || 0;\n\t\tthis.agent = init.agent || input.agent;\n\t\tthis.highWaterMark = init.highWaterMark || input.highWaterMark || 16384;\n\t\tthis.insecureHTTPParser = init.insecureHTTPParser || input.insecureHTTPParser || false;\n\n\t\t// §5.4, Request constructor steps, step 16.\n\t\t// Default is empty string per https://fetch.spec.whatwg.org/#concept-request-referrer-policy\n\t\tthis.referrerPolicy = init.referrerPolicy || input.referrerPolicy || '';\n\t}\n\n\t/** @returns {string} */\n\tget method() {\n\t\treturn this[INTERNALS].method;\n\t}\n\n\t/** @returns {string} */\n\tget url() {\n\t\treturn formatUrl(this[INTERNALS].parsedURL);\n\t}\n\n\t/** @returns {Headers} */\n\tget headers() {\n\t\treturn this[INTERNALS].headers;\n\t}\n\n\tget redirect() {\n\t\treturn this[INTERNALS].redirect;\n\t}\n\n\t/** @returns {AbortSignal} */\n\tget signal() {\n\t\treturn this[INTERNALS].signal;\n\t}\n\n\t// https://fetch.spec.whatwg.org/#dom-request-referrer\n\tget referrer() {\n\t\tif (this[INTERNALS].referrer === 'no-referrer') {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (this[INTERNALS].referrer === 'client') {\n\t\t\treturn 'about:client';\n\t\t}\n\n\t\tif (this[INTERNALS].referrer) {\n\t\t\treturn this[INTERNALS].referrer.toString();\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tget referrerPolicy() {\n\t\treturn this[INTERNALS].referrerPolicy;\n\t}\n\n\tset referrerPolicy(referrerPolicy) {\n\t\tthis[INTERNALS].referrerPolicy = validateReferrerPolicy(referrerPolicy);\n\t}\n\n\t/**\n\t * Clone this request\n\t *\n\t * @return  Request\n\t */\n\tclone() {\n\t\treturn new Request(this);\n\t}\n\n\tget [Symbol.toStringTag]() {\n\t\treturn 'Request';\n\t}\n}\n\nObject.defineProperties(Request.prototype, {\n\tmethod: {enumerable: true},\n\turl: {enumerable: true},\n\theaders: {enumerable: true},\n\tredirect: {enumerable: true},\n\tclone: {enumerable: true},\n\tsignal: {enumerable: true},\n\treferrer: {enumerable: true},\n\treferrerPolicy: {enumerable: true}\n});\n\n/**\n * Convert a Request to Node.js http request options.\n *\n * @param {Request} request - A Request instance\n * @return The options object to be passed to http.request\n */\nexport const getNodeRequestOptions = request => {\n\tconst {parsedURL} = request[INTERNALS];\n\tconst headers = new Headers(request[INTERNALS].headers);\n\n\t// Fetch step 1.3\n\tif (!headers.has('Accept')) {\n\t\theaders.set('Accept', '*/*');\n\t}\n\n\t// HTTP-network-or-cache fetch steps 2.4-2.7\n\tlet contentLengthValue = null;\n\tif (request.body === null && /^(post|put)$/i.test(request.method)) {\n\t\tcontentLengthValue = '0';\n\t}\n\n\tif (request.body !== null) {\n\t\tconst totalBytes = getTotalBytes(request);\n\t\t// Set Content-Length if totalBytes is a number (that is not NaN)\n\t\tif (typeof totalBytes === 'number' && !Number.isNaN(totalBytes)) {\n\t\t\tcontentLengthValue = String(totalBytes);\n\t\t}\n\t}\n\n\tif (contentLengthValue) {\n\t\theaders.set('Content-Length', contentLengthValue);\n\t}\n\n\t// 4.1. Main fetch, step 2.6\n\t// > If request's referrer policy is the empty string, then set request's referrer policy to the\n\t// > default referrer policy.\n\tif (request.referrerPolicy === '') {\n\t\trequest.referrerPolicy = DEFAULT_REFERRER_POLICY;\n\t}\n\n\t// 4.1. Main fetch, step 2.7\n\t// > If request's referrer is not \"no-referrer\", set request's referrer to the result of invoking\n\t// > determine request's referrer.\n\tif (request.referrer && request.referrer !== 'no-referrer') {\n\t\trequest[INTERNALS].referrer = determineRequestsReferrer(request);\n\t} else {\n\t\trequest[INTERNALS].referrer = 'no-referrer';\n\t}\n\n\t// 4.5. HTTP-network-or-cache fetch, step 6.9\n\t// > If httpRequest's referrer is a URL, then append `Referer`/httpRequest's referrer, serialized\n\t// >  and isomorphic encoded, to httpRequest's header list.\n\tif (request[INTERNALS].referrer instanceof URL) {\n\t\theaders.set('Referer', request.referrer);\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.11\n\tif (!headers.has('User-Agent')) {\n\t\theaders.set('User-Agent', 'node-fetch');\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.15\n\tif (request.compress && !headers.has('Accept-Encoding')) {\n\t\theaders.set('Accept-Encoding', 'gzip, deflate, br');\n\t}\n\n\tlet {agent} = request;\n\tif (typeof agent === 'function') {\n\t\tagent = agent(parsedURL);\n\t}\n\n\t// HTTP-network fetch step 4.2\n\t// chunked encoding is handled by Node.js\n\n\tconst search = getSearch(parsedURL);\n\n\t// Pass the full URL directly to request(), but overwrite the following\n\t// options:\n\tconst options = {\n\t\t// Overwrite search to retain trailing ? (issue #776)\n\t\tpath: parsedURL.pathname + search,\n\t\t// The following options are not expressed in the URL\n\t\tmethod: request.method,\n\t\theaders: headers[Symbol.for('nodejs.util.inspect.custom')](),\n\t\tinsecureHTTPParser: request.insecureHTTPParser,\n\t\tagent\n\t};\n\n\treturn {\n\t\t/** @type {URL} */\n\t\tparsedURL,\n\t\toptions\n\t};\n};\n","export const getSearch = parsedURL => {\n\tif (parsedURL.search) {\n\t\treturn parsedURL.search;\n\t}\n\n\tconst lastOffset = parsedURL.href.length - 1;\n\tconst hash = parsedURL.hash || (parsedURL.href[lastOffset] === '#' ? '#' : '');\n\treturn parsedURL.href[lastOffset - hash.length] === '?' ? '?' : '';\n};\n","import {FetchBaseError} from './base.js';\n\n/**\n * AbortError interface for cancelled requests\n */\nexport class AbortError extends FetchBaseError {\n\tconstructor(message, type = 'aborted') {\n\t\tsuper(message, type);\n\t}\n}\n","/**\n * Index.js\n *\n * a request API compatible with window.fetch\n *\n * All spec algorithm step numbers are based on https://fetch.spec.whatwg.org/commit-snapshots/ae716822cb3a61843226cd090eefc6589446c1d2/.\n */\n\nimport http from 'node:http';\nimport https from 'node:https';\nimport zlib from 'node:zlib';\nimport Stream, {PassThrough, pipeline as pump} from 'node:stream';\nimport {Buffer} from 'node:buffer';\n\nimport dataUriToBuffer from 'data-uri-to-buffer';\n\nimport {writeToStream, clone} from './body.js';\nimport Response from './response.js';\nimport Headers, {fromRawHeaders} from './headers.js';\nimport Request, {getNodeRequestOptions} from './request.js';\nimport {FetchError} from './errors/fetch-error.js';\nimport {AbortError} from './errors/abort-error.js';\nimport {isRedirect} from './utils/is-redirect.js';\nimport {FormData} from 'formdata-polyfill/esm.min.js';\nimport {isDomainOrSubdomain, isSameProtocol} from './utils/is.js';\nimport {parseReferrerPolicyFromHeader} from './utils/referrer.js';\nimport {\n\tBlob,\n\tFile,\n\tfileFromSync,\n\tfileFrom,\n\tblobFromSync,\n\tblobFrom\n} from 'fetch-blob/from.js';\n\nexport {FormData, Headers, Request, Response, FetchError, AbortError, isRedirect};\nexport {Blob, File, fileFromSync, fileFrom, blobFromSync, blobFrom};\n\nconst supportedSchemas = new Set(['data:', 'http:', 'https:']);\n\n/**\n * Fetch function\n *\n * @param   {string | URL | import('./request').default} url - Absolute url or Request instance\n * @param   {*} [options_] - Fetch options\n * @return  {Promise<import('./response').default>}\n */\nexport default async function fetch(url, options_) {\n\treturn new Promise((resolve, reject) => {\n\t\t// Build request object\n\t\tconst request = new Request(url, options_);\n\t\tconst {parsedURL, options} = getNodeRequestOptions(request);\n\t\tif (!supportedSchemas.has(parsedURL.protocol)) {\n\t\t\tthrow new TypeError(`node-fetch cannot load ${url}. URL scheme \"${parsedURL.protocol.replace(/:$/, '')}\" is not supported.`);\n\t\t}\n\n\t\tif (parsedURL.protocol === 'data:') {\n\t\t\tconst data = dataUriToBuffer(request.url);\n\t\t\tconst response = new Response(data, {headers: {'Content-Type': data.typeFull}});\n\t\t\tresolve(response);\n\t\t\treturn;\n\t\t}\n\n\t\t// Wrap http.request into fetch\n\t\tconst send = (parsedURL.protocol === 'https:' ? https : http).request;\n\t\tconst {signal} = request;\n\t\tlet response = null;\n\n\t\tconst abort = () => {\n\t\t\tconst error = new AbortError('The operation was aborted.');\n\t\t\treject(error);\n\t\t\tif (request.body && request.body instanceof Stream.Readable) {\n\t\t\t\trequest.body.destroy(error);\n\t\t\t}\n\n\t\t\tif (!response || !response.body) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tresponse.body.emit('error', error);\n\t\t};\n\n\t\tif (signal && signal.aborted) {\n\t\t\tabort();\n\t\t\treturn;\n\t\t}\n\n\t\tconst abortAndFinalize = () => {\n\t\t\tabort();\n\t\t\tfinalize();\n\t\t};\n\n\t\t// Send request\n\t\tconst request_ = send(parsedURL.toString(), options);\n\n\t\tif (signal) {\n\t\t\tsignal.addEventListener('abort', abortAndFinalize);\n\t\t}\n\n\t\tconst finalize = () => {\n\t\t\trequest_.abort();\n\t\t\tif (signal) {\n\t\t\t\tsignal.removeEventListener('abort', abortAndFinalize);\n\t\t\t}\n\t\t};\n\n\t\trequest_.on('error', error => {\n\t\t\treject(new FetchError(`request to ${request.url} failed, reason: ${error.message}`, 'system', error));\n\t\t\tfinalize();\n\t\t});\n\n\t\tfixResponseChunkedTransferBadEnding(request_, error => {\n\t\t\tif (response && response.body) {\n\t\t\t\tresponse.body.destroy(error);\n\t\t\t}\n\t\t});\n\n\t\t/* c8 ignore next 18 */\n\t\tif (process.version < 'v14') {\n\t\t\t// Before Node.js 14, pipeline() does not fully support async iterators and does not always\n\t\t\t// properly handle when the socket close/end events are out of order.\n\t\t\trequest_.on('socket', s => {\n\t\t\t\tlet endedWithEventsCount;\n\t\t\t\ts.prependListener('end', () => {\n\t\t\t\t\tendedWithEventsCount = s._eventsCount;\n\t\t\t\t});\n\t\t\t\ts.prependListener('close', hadError => {\n\t\t\t\t\t// if end happened before close but the socket didn't emit an error, do it now\n\t\t\t\t\tif (response && endedWithEventsCount < s._eventsCount && !hadError) {\n\t\t\t\t\t\tconst error = new Error('Premature close');\n\t\t\t\t\t\terror.code = 'ERR_STREAM_PREMATURE_CLOSE';\n\t\t\t\t\t\tresponse.body.emit('error', error);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\trequest_.on('response', response_ => {\n\t\t\trequest_.setTimeout(0);\n\t\t\tconst headers = fromRawHeaders(response_.rawHeaders);\n\n\t\t\t// HTTP fetch step 5\n\t\t\tif (isRedirect(response_.statusCode)) {\n\t\t\t\t// HTTP fetch step 5.2\n\t\t\t\tconst location = headers.get('Location');\n\n\t\t\t\t// HTTP fetch step 5.3\n\t\t\t\tlet locationURL = null;\n\t\t\t\ttry {\n\t\t\t\t\tlocationURL = location === null ? null : new URL(location, request.url);\n\t\t\t\t} catch {\n\t\t\t\t\t// error here can only be invalid URL in Location: header\n\t\t\t\t\t// do not throw when options.redirect == manual\n\t\t\t\t\t// let the user extract the errorneous redirect URL\n\t\t\t\t\tif (request.redirect !== 'manual') {\n\t\t\t\t\t\treject(new FetchError(`uri requested responds with an invalid redirect URL: ${location}`, 'invalid-redirect'));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// HTTP fetch step 5.5\n\t\t\t\tswitch (request.redirect) {\n\t\t\t\t\tcase 'error':\n\t\t\t\t\t\treject(new FetchError(`uri requested responds with a redirect, redirect mode is set to error: ${request.url}`, 'no-redirect'));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\tcase 'manual':\n\t\t\t\t\t\t// Nothing to do\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'follow': {\n\t\t\t\t\t\t// HTTP-redirect fetch step 2\n\t\t\t\t\t\tif (locationURL === null) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 5\n\t\t\t\t\t\tif (request.counter >= request.follow) {\n\t\t\t\t\t\t\treject(new FetchError(`maximum redirect reached at: ${request.url}`, 'max-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 6 (counter increment)\n\t\t\t\t\t\t// Create a new Request object.\n\t\t\t\t\t\tconst requestOptions = {\n\t\t\t\t\t\t\theaders: new Headers(request.headers),\n\t\t\t\t\t\t\tfollow: request.follow,\n\t\t\t\t\t\t\tcounter: request.counter + 1,\n\t\t\t\t\t\t\tagent: request.agent,\n\t\t\t\t\t\t\tcompress: request.compress,\n\t\t\t\t\t\t\tmethod: request.method,\n\t\t\t\t\t\t\tbody: clone(request),\n\t\t\t\t\t\t\tsignal: request.signal,\n\t\t\t\t\t\t\tsize: request.size,\n\t\t\t\t\t\t\treferrer: request.referrer,\n\t\t\t\t\t\t\treferrerPolicy: request.referrerPolicy\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\t// when forwarding sensitive headers like \"Authorization\",\n\t\t\t\t\t\t// \"WWW-Authenticate\", and \"Cookie\" to untrusted targets,\n\t\t\t\t\t\t// headers will be ignored when following a redirect to a domain\n\t\t\t\t\t\t// that is not a subdomain match or exact match of the initial domain.\n\t\t\t\t\t\t// For example, a redirect from \"foo.com\" to either \"foo.com\" or \"sub.foo.com\"\n\t\t\t\t\t\t// will forward the sensitive headers, but a redirect to \"bar.com\" will not.\n\t\t\t\t\t\t// headers will also be ignored when following a redirect to a domain using\n\t\t\t\t\t\t// a different protocol. For example, a redirect from \"https://foo.com\" to \"http://foo.com\"\n\t\t\t\t\t\t// will not forward the sensitive headers\n\t\t\t\t\t\tif (!isDomainOrSubdomain(request.url, locationURL) || !isSameProtocol(request.url, locationURL)) {\n\t\t\t\t\t\t\tfor (const name of ['authorization', 'www-authenticate', 'cookie', 'cookie2']) {\n\t\t\t\t\t\t\t\trequestOptions.headers.delete(name);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 9\n\t\t\t\t\t\tif (response_.statusCode !== 303 && request.body && options_.body instanceof Stream.Readable) {\n\t\t\t\t\t\t\treject(new FetchError('Cannot follow redirect with body being a readable stream', 'unsupported-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 11\n\t\t\t\t\t\tif (response_.statusCode === 303 || ((response_.statusCode === 301 || response_.statusCode === 302) && request.method === 'POST')) {\n\t\t\t\t\t\t\trequestOptions.method = 'GET';\n\t\t\t\t\t\t\trequestOptions.body = undefined;\n\t\t\t\t\t\t\trequestOptions.headers.delete('content-length');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 14\n\t\t\t\t\t\tconst responseReferrerPolicy = parseReferrerPolicyFromHeader(headers);\n\t\t\t\t\t\tif (responseReferrerPolicy) {\n\t\t\t\t\t\t\trequestOptions.referrerPolicy = responseReferrerPolicy;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 15\n\t\t\t\t\t\tresolve(fetch(new Request(locationURL, requestOptions)));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn reject(new TypeError(`Redirect option '${request.redirect}' is not a valid value of RequestRedirect`));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Prepare response\n\t\t\tif (signal) {\n\t\t\t\tresponse_.once('end', () => {\n\t\t\t\t\tsignal.removeEventListener('abort', abortAndFinalize);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tlet body = pump(response_, new PassThrough(), error => {\n\t\t\t\tif (error) {\n\t\t\t\t\treject(error);\n\t\t\t\t}\n\t\t\t});\n\t\t\t// see https://github.com/nodejs/node/pull/29376\n\t\t\t/* c8 ignore next 3 */\n\t\t\tif (process.version < 'v12.10') {\n\t\t\t\tresponse_.on('aborted', abortAndFinalize);\n\t\t\t}\n\n\t\t\tconst responseOptions = {\n\t\t\t\turl: request.url,\n\t\t\t\tstatus: response_.statusCode,\n\t\t\t\tstatusText: response_.statusMessage,\n\t\t\t\theaders,\n\t\t\t\tsize: request.size,\n\t\t\t\tcounter: request.counter,\n\t\t\t\thighWaterMark: request.highWaterMark\n\t\t\t};\n\n\t\t\t// HTTP-network fetch step 12.1.1.3\n\t\t\tconst codings = headers.get('Content-Encoding');\n\n\t\t\t// HTTP-network fetch step 12.1.1.4: handle content codings\n\n\t\t\t// in following scenarios we ignore compression support\n\t\t\t// 1. compression support is disabled\n\t\t\t// 2. HEAD request\n\t\t\t// 3. no Content-Encoding header\n\t\t\t// 4. no content response (204)\n\t\t\t// 5. content not modified response (304)\n\t\t\tif (!request.compress || request.method === 'HEAD' || codings === null || response_.statusCode === 204 || response_.statusCode === 304) {\n\t\t\t\tresponse = new Response(body, responseOptions);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// For Node v6+\n\t\t\t// Be less strict when decoding compressed responses, since sometimes\n\t\t\t// servers send slightly invalid responses that are still accepted\n\t\t\t// by common browsers.\n\t\t\t// Always using Z_SYNC_FLUSH is what cURL does.\n\t\t\tconst zlibOptions = {\n\t\t\t\tflush: zlib.Z_SYNC_FLUSH,\n\t\t\t\tfinishFlush: zlib.Z_SYNC_FLUSH\n\t\t\t};\n\n\t\t\t// For gzip\n\t\t\tif (codings === 'gzip' || codings === 'x-gzip') {\n\t\t\t\tbody = pump(body, zlib.createGunzip(zlibOptions), error => {\n\t\t\t\t\tif (error) {\n\t\t\t\t\t\treject(error);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tresponse = new Response(body, responseOptions);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// For deflate\n\t\t\tif (codings === 'deflate' || codings === 'x-deflate') {\n\t\t\t\t// Handle the infamous raw deflate response from old servers\n\t\t\t\t// a hack for old IIS and Apache servers\n\t\t\t\tconst raw = pump(response_, new PassThrough(), error => {\n\t\t\t\t\tif (error) {\n\t\t\t\t\t\treject(error);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\traw.once('data', chunk => {\n\t\t\t\t\t// See http://stackoverflow.com/questions/37519828\n\t\t\t\t\tif ((chunk[0] & 0x0F) === 0x08) {\n\t\t\t\t\t\tbody = pump(body, zlib.createInflate(), error => {\n\t\t\t\t\t\t\tif (error) {\n\t\t\t\t\t\t\t\treject(error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbody = pump(body, zlib.createInflateRaw(), error => {\n\t\t\t\t\t\t\tif (error) {\n\t\t\t\t\t\t\t\treject(error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tresponse = new Response(body, responseOptions);\n\t\t\t\t\tresolve(response);\n\t\t\t\t});\n\t\t\t\traw.once('end', () => {\n\t\t\t\t\t// Some old IIS servers return zero-length OK deflate responses, so\n\t\t\t\t\t// 'data' is never emitted. See https://github.com/node-fetch/node-fetch/pull/903\n\t\t\t\t\tif (!response) {\n\t\t\t\t\t\tresponse = new Response(body, responseOptions);\n\t\t\t\t\t\tresolve(response);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// For br\n\t\t\tif (codings === 'br') {\n\t\t\t\tbody = pump(body, zlib.createBrotliDecompress(), error => {\n\t\t\t\t\tif (error) {\n\t\t\t\t\t\treject(error);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tresponse = new Response(body, responseOptions);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Otherwise, use response as-is\n\t\t\tresponse = new Response(body, responseOptions);\n\t\t\tresolve(response);\n\t\t});\n\n\t\t// eslint-disable-next-line promise/prefer-await-to-then\n\t\twriteToStream(request_, request).catch(reject);\n\t});\n}\n\nfunction fixResponseChunkedTransferBadEnding(request, errorCallback) {\n\tconst LAST_CHUNK = Buffer.from('0\\r\\n\\r\\n');\n\n\tlet isChunkedTransfer = false;\n\tlet properLastChunkReceived = false;\n\tlet previousChunk;\n\n\trequest.on('response', response => {\n\t\tconst {headers} = response;\n\t\tisChunkedTransfer = headers['transfer-encoding'] === 'chunked' && !headers['content-length'];\n\t});\n\n\trequest.on('socket', socket => {\n\t\tconst onSocketClose = () => {\n\t\t\tif (isChunkedTransfer && !properLastChunkReceived) {\n\t\t\t\tconst error = new Error('Premature close');\n\t\t\t\terror.code = 'ERR_STREAM_PREMATURE_CLOSE';\n\t\t\t\terrorCallback(error);\n\t\t\t}\n\t\t};\n\n\t\tconst onData = buf => {\n\t\t\tproperLastChunkReceived = Buffer.compare(buf.slice(-5), LAST_CHUNK) === 0;\n\n\t\t\t// Sometimes final 0-length chunk and end of message code are in separate packets\n\t\t\tif (!properLastChunkReceived && previousChunk) {\n\t\t\t\tproperLastChunkReceived = (\n\t\t\t\t\tBuffer.compare(previousChunk.slice(-3), LAST_CHUNK.slice(0, 3)) === 0 &&\n\t\t\t\t\tBuffer.compare(buf.slice(-2), LAST_CHUNK.slice(3)) === 0\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tpreviousChunk = buf;\n\t\t};\n\n\t\tsocket.prependListener('close', onSocketClose);\n\t\tsocket.on('data', onData);\n\n\t\trequest.on('close', () => {\n\t\t\tsocket.removeListener('close', onSocketClose);\n\t\t\tsocket.removeListener('data', onData);\n\t\t});\n\t});\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"\" + chunkId + \".extension.js\";\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// The module 'vscode' contains the VS Code extensibility API\n// Import the module and reference it with the alias vscode in your code below\nimport * as vscode from 'vscode';\nimport { KaitenTaskViewProvider } from './providers/task.provider';\nimport { formatUrl } from './helpers/string';\nimport { KaitenTaskStore } from './store';\nimport { KaitenTimeLogViewProvider } from './providers/time-log.provider';\n\n// This method is called when your extension is activated\n// Your extension is activated the very first time the command is executed\nexport async function activate(context: vscode.ExtensionContext) {\n\tconst config = vscode.workspace.getConfiguration('kaiten');\n\tconst kaitenUrl: string = formatUrl(config.get('url')) || '';\n\tconst kaitenApiKey: string = config.get('apiKey') || '';\n\n\tif (!kaitenUrl || !kaitenApiKey) {\n\t\tvscode.window.showErrorMessage(`Необходимо заполнить настройки расширения Kaiten (Api Key + Url)`);\n\t\treturn;\n\t}\n\n\tconst store = new KaitenTaskStore(\n\t\tcontext,\n\t\tkaitenUrl,\n\t\tkaitenApiKey\n\t);\n\tawait store.init();\n\n\tcontext.subscriptions.push(\n\t\tvscode.window.registerWebviewViewProvider(KaitenTaskViewProvider.viewType, store.providerKaitenTask),\n\t\tvscode.window.registerWebviewViewProvider(KaitenTimeLogViewProvider.viewType, store.providerKaitenTimeLog),\n\t);\n\t\n\n\tcontext.subscriptions.push(\n\t\tvscode.commands.registerCommand('kaiten.task.open', () => {\n\t\t\tvscode.env.openExternal(vscode.Uri.parse(store.taskUrl));\n\t\t}),\n\t\tvscode.commands.registerCommand('kaiten.task.refresh', async () => {\n\t\t\tawait store.updateTaskData();\n\t\t}),\n\t\tvscode.commands.registerCommand('kaiten.time-log.refresh', async () => {\n\t\t\tstore.providerKaitenTimeLog.clearForm();\n\t\t\tawait store.updateTimeLogs();\n\t\t}),\n\t);\n\t// context.subscriptions.push(disposable_1, disposable_2);\n\n}\n\n// This method is called when your extension is deactivated\nexport function deactivate() {}\n\n"],"names":["installedChunks","globalThis","DOMException","MessageChannel","port","port1","ab","ArrayBuffer","postMessage","err","constructor","name","module","exports","SUCCESS_STATUSES","baseUrl","apiKey","this","getTask","id","error","data","request","kaitenOptions","method","errorMessage","getRoles","getTimeLogs","taskId","addTimeLog","payload","body","JSON","stringify","updateTimeLog","logId","removeTimeLog","url","options","Promise","resolve","reject","then","async","res","status","statusText","includes","json","message","catch","console","log","params","credentials","headers","Accept","Authorization","extension","vscode","extensions","getExtension","undefined","isActive","activate","getAPI","Input","label","inputHtml","className","base","branchName","result","exec","formatUrl","endsWith","slice","length","convertKaitenDescription","desc","replaceAll","a","b","c","text","i","charAt","Math","floor","possible","random","formatDate","date","regCheck","year","month","day","formatTime","time","minutes","hours","KaitenTaskViewProvider","_extensionUri","taskData","resolveWebviewView","webviewView","context","_token","_view","webview","enableScripts","localResourceRoots","html","_getHtmlForWebview","onDidReceiveMessage","type","window","activeTextEditor","insertSnippet","SnippetString","value","onDidChangeVisibility","visible","updateTaskData","taskInfoHtml","_generateTaskInfoHtml","show","scriptUri","asWebviewUri","Uri","joinPath","styleResetUri","styleVSCodeUri","styleMainUri","nonce","getNonce","cspSource","description","split","forEach","item","push","descHtml","join","title","viewType","KaitenTimeLogViewProvider","view","store","$this","editTimeLog","updateTimeLogsData","timeLogListHtml","_generateTimeLogListHtml","updateRolesData","rolesOptionsHtml","_generateRoleOptionsHtml","timeLog","timeLogs","find","Number","clearForm","styleInputUri","codiconsUri","forDate","timeSpent","roleSelect","userRoles","comment","sort","Date","for_date","map","role","time_spent","author","full_name","_taskUrl","_taskId","_timeLogs","_userRoles","kaitenApi","KaitenApiService","providerKaitenTask","extensionUri","providerKaitenTimeLog","init","gitExt","all","getBuiltInGitApi","initRoles","state","repositories","repo","onDidChange","HEAD","taskUrl","generateKaitenLink","onDidOpenRepository","withProgress","response","updateTimeLogs","logs","roles","viewId","promise","location","showErrorMessage","showQuickPick","canPickMany","matchOnDescription","matchOnDetail","ignoreFocusOut","placeHolder","factory","SymbolPolyfill","Symbol","iterator","noop","globals","self","global","typeIsObject","x","rethrowAssertionErrorRejection","originalPromise","originalPromiseThen","prototype","originalPromiseResolve","bind","originalPromiseReject","newPromise","executor","promiseResolvedWith","promiseRejectedWith","reason","PerformPromiseThen","onFulfilled","onRejected","call","uponPromise","uponFulfillment","uponRejection","transformPromiseWith","fulfillmentHandler","rejectionHandler","setPromiseIsHandledToTrue","queueMicrotask","globalQueueMicrotask","resolvedPromise","fn","reflectCall","F","V","args","TypeError","Function","apply","promiseCall","SimpleQueue","_cursor","_size","_front","_elements","_next","_back","element","oldBack","newBack","QUEUE_MAX_ARRAY_SIZE","shift","oldFront","newFront","oldCursor","newCursor","elements","callback","node","peek","front","cursor","ReadableStreamReaderGenericInitialize","reader","stream","_ownerReadableStream","_reader","_state","defaultReaderClosedPromiseInitialize","defaultReaderClosedPromiseResolve","defaultReaderClosedPromiseInitializeAsResolved","defaultReaderClosedPromiseInitializeAsRejected","_storedError","ReadableStreamReaderGenericCancel","ReadableStreamCancel","ReadableStreamReaderGenericRelease","defaultReaderClosedPromiseReject","defaultReaderClosedPromiseResetToRejected","readerLockException","_closedPromise","_closedPromise_resolve","_closedPromise_reject","AbortSteps","ErrorSteps","CancelSteps","PullSteps","NumberIsFinite","isFinite","MathTrunc","trunc","v","ceil","assertDictionary","obj","assertFunction","assertObject","isObject","assertRequiredArgument","position","assertRequiredField","field","convertUnrestrictedDouble","censorNegativeZero","convertUnsignedLongLongWithEnforceRange","upperBound","MAX_SAFE_INTEGER","integerPart","assertReadableStream","IsReadableStream","AcquireReadableStreamDefaultReader","ReadableStreamDefaultReader","ReadableStreamAddReadRequest","readRequest","_readRequests","ReadableStreamFulfillReadRequest","chunk","done","_closeSteps","_chunkSteps","ReadableStreamGetNumReadRequests","ReadableStreamHasDefaultReader","IsReadableStreamDefaultReader","IsReadableStreamLocked","closed","defaultReaderBrandCheckException","cancel","read","resolvePromise","rejectPromise","ReadableStreamDefaultReaderRead","_errorSteps","e","releaseLock","Object","hasOwnProperty","_disturbed","_readableStreamController","defineProperties","enumerable","toStringTag","defineProperty","configurable","AsyncIteratorPrototype","getPrototypeOf","ReadableStreamAsyncIteratorImpl","preventCancel","_ongoingPromise","_isFinished","_preventCancel","next","nextSteps","_nextSteps","returnSteps","_returnSteps","ReadableStreamAsyncIteratorPrototype","IsReadableStreamAsyncIterator","_asyncIteratorImpl","streamAsyncIteratorBrandCheckException","return","_a","setPrototypeOf","NumberIsNaN","isNaN","CreateArrayFromList","CopyDataBlockBytes","dest","destOffset","src","srcOffset","n","Uint8Array","set","ArrayBufferSlice","buffer","begin","end","CloneAsUint8Array","O","byteOffset","byteLength","DequeueValue","container","pair","_queue","_queueTotalSize","size","EnqueueValueWithSize","Infinity","RangeError","ResetQueue","ReadableStreamBYOBRequest","IsReadableStreamBYOBRequest","byobRequestBrandCheckException","respond","bytesWritten","_associatedReadableByteStreamController","ReadableByteStreamControllerRespond","respondWithNewView","isView","ReadableByteStreamControllerRespondWithNewView","ReadableByteStreamController","byobRequest","IsReadableByteStreamController","byteStreamControllerBrandCheckException","ReadableByteStreamControllerGetBYOBRequest","desiredSize","ReadableByteStreamControllerGetDesiredSize","close","_closeRequested","_controlledReadableByteStream","ReadableByteStreamControllerClose","enqueue","ReadableByteStreamControllerEnqueue","ReadableByteStreamControllerError","ReadableByteStreamControllerClearPendingPullIntos","_cancelAlgorithm","ReadableByteStreamControllerClearAlgorithms","entry","ReadableByteStreamControllerHandleQueueDrain","autoAllocateChunkSize","_autoAllocateChunkSize","bufferE","pullIntoDescriptor","bufferByteLength","bytesFilled","elementSize","viewConstructor","readerType","_pendingPullIntos","ReadableByteStreamControllerCallPullIfNeeded","controller","shouldPull","_started","ReadableStreamHasBYOBReader","ReadableStreamGetNumReadIntoRequests","ReadableByteStreamControllerShouldCallPull","_pulling","_pullAgain","_pullAlgorithm","ReadableByteStreamControllerInvalidateBYOBRequest","ReadableByteStreamControllerCommitPullIntoDescriptor","filledView","ReadableByteStreamControllerConvertPullIntoDescriptor","readIntoRequest","_readIntoRequests","ReadableStreamFulfillReadIntoRequest","ReadableByteStreamControllerEnqueueChunkToQueue","ReadableByteStreamControllerFillPullIntoDescriptorFromQueue","currentAlignedBytes","maxBytesToCopy","min","maxBytesFilled","maxAlignedBytes","totalBytesToCopyRemaining","ready","queue","headOfQueue","bytesToCopy","destStart","ReadableByteStreamControllerFillHeadPullIntoDescriptor","ReadableStreamClose","_byobRequest","ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue","ReadableByteStreamControllerShiftPendingPullInto","ReadableByteStreamControllerRespondInternal","firstDescriptor","ReadableByteStreamControllerRespondInClosedState","remainderSize","remainder","ReadableByteStreamControllerRespondInReadableState","transferredBuffer","firstPendingPullInto","ReadableStreamError","create","SetUpReadableStreamBYOBRequest","_strategyHWM","viewByteLength","SetUpReadableByteStreamController","startAlgorithm","pullAlgorithm","cancelAlgorithm","highWaterMark","r","AcquireReadableStreamBYOBReader","ReadableStreamBYOBReader","ReadableStreamAddReadIntoRequest","IsReadableStreamBYOBReader","byobReaderBrandCheckException","ReadableStreamBYOBReaderRead","DataView","BYTES_PER_ELEMENT","ctor","emptyView","ReadableByteStreamControllerPullInto","ExtractHighWaterMark","strategy","defaultHWM","ExtractSizeAlgorithm","convertQueuingStrategy","convertQueuingStrategySize","convertUnderlyingSinkAbortCallback","original","convertUnderlyingSinkCloseCallback","convertUnderlyingSinkStartCallback","convertUnderlyingSinkWriteCallback","assertWritableStream","IsWritableStream","supportsAbortController","AbortController","WritableStream","rawUnderlyingSink","rawStrategy","underlyingSink","abort","start","write","convertUnderlyingSink","InitializeWritableStream","sizeAlgorithm","WritableStreamDefaultController","writeAlgorithm","closeAlgorithm","abortAlgorithm","SetUpWritableStreamDefaultController","SetUpWritableStreamDefaultControllerFromUnderlyingSink","locked","streamBrandCheckException$2","IsWritableStreamLocked","WritableStreamAbort","WritableStreamCloseQueuedOrInFlight","WritableStreamClose","getWriter","AcquireWritableStreamDefaultWriter","WritableStreamDefaultWriter","_writer","_writableStreamController","_writeRequests","_inFlightWriteRequest","_closeRequest","_inFlightCloseRequest","_pendingAbortRequest","_backpressure","_abortReason","_abortController","_promise","wasAlreadyErroring","_resolve","_reject","_reason","_wasAlreadyErroring","WritableStreamStartErroring","closeRequest","writer","defaultWriterReadyPromiseResolve","closeSentinel","WritableStreamDefaultControllerAdvanceQueueIfNeeded","WritableStreamDealWithRejection","WritableStreamFinishErroring","WritableStreamDefaultWriterEnsureReadyPromiseRejected","WritableStreamHasOperationMarkedInFlight","storedError","writeRequest","WritableStreamRejectCloseAndClosedPromiseIfNeeded","abortRequest","defaultWriterClosedPromiseReject","WritableStreamUpdateBackpressure","backpressure","defaultWriterReadyPromiseInitialize","defaultWriterReadyPromiseReset","_ownerWritableStream","defaultWriterReadyPromiseInitializeAsResolved","defaultWriterClosedPromiseInitialize","defaultWriterReadyPromiseInitializeAsRejected","defaultWriterClosedPromiseResolve","defaultWriterClosedPromiseInitializeAsRejected","IsWritableStreamDefaultWriter","defaultWriterBrandCheckException","defaultWriterLockException","WritableStreamDefaultControllerGetDesiredSize","WritableStreamDefaultWriterGetDesiredSize","_readyPromise","WritableStreamDefaultWriterAbort","WritableStreamDefaultWriterClose","WritableStreamDefaultWriterRelease","WritableStreamDefaultWriterWrite","_readyPromiseState","defaultWriterReadyPromiseReject","defaultWriterReadyPromiseResetToRejected","releasedError","_closedPromiseState","defaultWriterClosedPromiseResetToRejected","WritableStreamDefaultWriterEnsureClosedPromiseRejected","chunkSize","_strategySizeAlgorithm","chunkSizeE","WritableStreamDefaultControllerErrorIfNeeded","WritableStreamDefaultControllerGetChunkSize","WritableStreamAddWriteRequest","enqueueE","_controlledWritableStream","WritableStreamDefaultControllerGetBackpressure","WritableStreamDefaultControllerWrite","abortReason","IsWritableStreamDefaultController","defaultControllerBrandCheckException$2","signal","WritableStreamDefaultControllerError","_abortAlgorithm","WritableStreamDefaultControllerClearAlgorithms","createAbortController","_writeAlgorithm","_closeAlgorithm","WritableStreamMarkCloseRequestInFlight","sinkClosePromise","WritableStreamFinishInFlightClose","WritableStreamFinishInFlightCloseWithError","WritableStreamDefaultControllerProcessClose","WritableStreamMarkFirstWriteRequestInFlight","WritableStreamFinishInFlightWrite","WritableStreamFinishInFlightWriteWithError","WritableStreamDefaultControllerProcessWrite","_readyPromise_resolve","_readyPromise_reject","NativeDOMException","DOMException$1","isDOMExceptionConstructor","Error","captureStackTrace","writable","createDOMExceptionPolyfill","ReadableStreamPipeTo","source","preventClose","preventAbort","shuttingDown","currentWrite","actions","shutdownWithAction","action","aborted","addEventListener","isOrBecomesErrored","shutdown","WritableStreamDefaultWriterCloseWithErrorPropagation","destClosed","waitForWritesToFinish","oldCurrentWrite","originalIsError","originalError","doTheRest","finalize","newError","isError","removeEventListener","resolveLoop","rejectLoop","resolveRead","rejectRead","ReadableStreamDefaultController","IsReadableStreamDefaultController","defaultControllerBrandCheckException$1","ReadableStreamDefaultControllerGetDesiredSize","ReadableStreamDefaultControllerCanCloseOrEnqueue","ReadableStreamDefaultControllerClose","ReadableStreamDefaultControllerEnqueue","ReadableStreamDefaultControllerError","ReadableStreamDefaultControllerClearAlgorithms","_controlledReadableStream","ReadableStreamDefaultControllerCallPullIfNeeded","ReadableStreamDefaultControllerShouldCallPull","SetUpReadableStreamDefaultController","convertUnderlyingSourceCancelCallback","convertUnderlyingSourcePullCallback","convertUnderlyingSourceStartCallback","convertReadableStreamType","convertReadableStreamReaderMode","mode","convertPipeOptions","isAbortSignal","assertAbortSignal","Boolean","ReadableStream","rawUnderlyingSource","underlyingSource","pull","convertUnderlyingDefaultOrByteSource","InitializeReadableStream","underlyingByteSource","SetUpReadableByteStreamControllerFromUnderlyingSource","SetUpReadableStreamDefaultControllerFromUnderlyingSource","streamBrandCheckException$1","getReader","rawOptions","convertReaderOptions","pipeThrough","rawTransform","transform","readable","convertReadableWritablePair","pipeTo","destination","tee","reason1","reason2","branch1","branch2","resolveCancelPromise","reading","readAgainForBranch1","readAgainForBranch2","canceled1","canceled2","cancelPromise","forwardReaderError","thisReader","pullWithDefaultReader","chunk1","chunk2","cloneE","pull1Algorithm","pull2Algorithm","pullWithBYOBReader","forBranch2","byobBranch","otherBranch","byobCanceled","clonedChunk","otherCanceled","CreateReadableByteStream","compositeReason","cancelResult","ReadableByteStreamTee","cloneForBranch2","readAgain","CreateReadableStream","ReadableStreamDefaultTee","values","impl","AcquireReadableStreamAsyncIterator","convertIteratorOptions","convertQueuingStrategyInit","asyncIterator","byteLengthSizeFunction","ByteLengthQueuingStrategy","_byteLengthQueuingStrategyHighWaterMark","IsByteLengthQueuingStrategy","byteLengthBrandCheckException","countSizeFunction","CountQueuingStrategy","_countQueuingStrategyHighWaterMark","IsCountQueuingStrategy","countBrandCheckException","convertTransformerFlushCallback","convertTransformerStartCallback","convertTransformerTransformCallback","TransformStream","rawTransformer","rawWritableStrategy","rawReadableStrategy","writableStrategy","readableStrategy","transformer","flush","readableType","writableType","convertTransformer","readableHighWaterMark","readableSizeAlgorithm","writableHighWaterMark","writableSizeAlgorithm","startPromise_resolve","startPromise","_writable","CreateWritableStream","_transformStreamController","_backpressureChangePromise","TransformStreamDefaultControllerPerformTransform","TransformStreamDefaultSinkWriteAlgorithm","_readable","flushPromise","_flushAlgorithm","TransformStreamDefaultControllerClearAlgorithms","TransformStreamError","TransformStreamDefaultSinkCloseAlgorithm","TransformStreamDefaultSinkAbortAlgorithm","TransformStreamSetBackpressure","TransformStreamDefaultSourcePullAlgorithm","TransformStreamErrorWritableAndUnblockWrite","_backpressureChangePromise_resolve","InitializeTransformStream","TransformStreamDefaultController","transformAlgorithm","TransformStreamDefaultControllerEnqueue","transformResultE","flushAlgorithm","_controlledTransformStream","_transformAlgorithm","SetUpTransformStreamDefaultController","SetUpTransformStreamDefaultControllerFromTransformer","IsTransformStream","streamBrandCheckException","IsTransformStreamDefaultController","defaultControllerBrandCheckException","terminate","TransformStreamDefaultControllerTerminate","readableController","ReadableStreamDefaultControllerHasBackpressure","require","process","emitWarning","assign","Blob","blob","ctrl","arrayBuffer","fileBits","fileName","arguments","super","lastModified","now","String","hasInstance","object","test","stat","blobFromSync","path","fromBlob","statSync","blobFrom","fileFrom","fromFile","fileFromSync","BlobDataItem","mtimeMs","basename","createReadStream","toIterator","parts","clone","part","_Blob","blobParts","encoder","TextEncoder","encode","endings","decoder","TextDecoder","str","decode","offset","it","relativeStart","max","relativeEnd","span","added","subarray","toLowerCase","t","h","m","f","replace","FormData","entries","o","some","append","filter","get","l","getAll","has","d","keys","formDataToBlob","B","padStart","p","uri","firstComma","indexOf","meta","substring","charset","base64","typeFull","encoding","unescape","Buffer","from","FetchBaseError","FetchError","systemError","code","errno","erroredSysCall","syscall","NAME","isURLSearchParameters","delete","isBlob","isDomainOrSubdomain","orig","URL","hostname","isSameProtocol","protocol","pipeline","promisify","INTERNALS","Body","boundary","toString","isBuffer","types","isAnyArrayBuffer","disturbed","on","error_","bodyUsed","consumeBody","formData","ct","startsWith","parameters","URLSearchParams","toFormData","buf","parse","alloc","accum","accumBytes","destroy","readableEnded","_readableState","ended","every","concat","deprecate","instance","p1","p2","getBoundary","PassThrough","pipe","getNonSpecFormDataBoundary","extractContentType","writeToStream","validateHeaderName","validateHeaderValue","Headers","raw","isBoxedPrimitive","Proxy","target","receiver","Set","Reflect","thisArg","reduce","key","for","property","redirectStatus","isRedirect","Response","contentType","counter","ok","redirected","redirect","stripURLForUseAsAReferrer","originOnly","username","password","hash","pathname","search","ReferrerPolicy","isUrlPotentiallyTrustworthy","hostIp","host","hostIPVersion","isIP","isOriginPotentiallyTrustworthy","isRequest","doBadDataWarn","Request","input","parsedURL","toUpperCase","inputBody","referrer","parsedReferrer","follow","compress","agent","insecureHTTPParser","referrerPolicy","format","validateReferrerPolicy","getNodeRequestOptions","contentLengthValue","totalBytes","getLengthSync","hasKnownLength","getTotalBytes","referrerURLCallback","referrerOriginCallback","policy","referrerSource","referrerURL","referrerOrigin","currentURL","origin","determineRequestsReferrer","lastOffset","href","getSearch","AbortError","supportedSchemas","fetch","options_","send","emit","abortAndFinalize","request_","errorCallback","LAST_CHUNK","previousChunk","isChunkedTransfer","properLastChunkReceived","socket","onSocketClose","onData","compare","prependListener","removeListener","fixResponseChunkedTransferBadEnding","version","s","endedWithEventsCount","_eventsCount","hadError","response_","setTimeout","index","array","fromRawHeaders","rawHeaders","statusCode","locationURL","requestOptions","responseReferrerPolicy","policyTokens","token","parseReferrerPolicyFromHeader","once","responseOptions","statusMessage","codings","zlibOptions","finishFlush","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","definition","chunkId","promises","u","prop","moreModules","modules","chunkIds","ids","runtime","installChunk","config","workspace","getConfiguration","kaitenUrl","kaitenApiKey","KaitenTaskStore","subscriptions","registerWebviewViewProvider","commands","registerCommand","env","openExternal"],"sourceRoot":""}