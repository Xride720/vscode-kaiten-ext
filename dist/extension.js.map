{"version":3,"file":"extension.js","mappings":"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","sources":["webpack://kaiten-ext/webpack/runtime/require chunk loading","webpack://kaiten-ext/./node_modules/node-domexception/index.js","webpack://kaiten-ext/./src/api/kaiten.ts","webpack://kaiten-ext/./src/controllers/checklist.controller.ts","webpack://kaiten-ext/./src/controllers/time-log.controller.ts","webpack://kaiten-ext/./src/helpers/git.ts","webpack://kaiten-ext/./src/helpers/html.ts","webpack://kaiten-ext/./src/helpers/string.ts","webpack://kaiten-ext/./src/providers/checklist.provider.ts","webpack://kaiten-ext/./src/providers/task.provider.ts","webpack://kaiten-ext/./src/providers/time-log.provider.ts","webpack://kaiten-ext/./src/store/index.ts","webpack://kaiten-ext/./node_modules/web-streams-polyfill/dist/ponyfill.es2018.js","webpack://kaiten-ext/external commonjs \"vscode\"","webpack://kaiten-ext/external node-commonjs \"buffer\"","webpack://kaiten-ext/external node-commonjs \"node:process\"","webpack://kaiten-ext/external node-commonjs \"node:stream/web\"","webpack://kaiten-ext/external node-commonjs \"worker_threads\"","webpack://kaiten-ext/./node_modules/fetch-blob/streams.cjs","webpack://kaiten-ext/./node_modules/fetch-blob/file.js","webpack://kaiten-ext/external node-commonjs \"node:fs\"","webpack://kaiten-ext/external node-commonjs \"node:path\"","webpack://kaiten-ext/./node_modules/fetch-blob/from.js","webpack://kaiten-ext/./node_modules/fetch-blob/index.js","webpack://kaiten-ext/./node_modules/formdata-polyfill/esm.min.js","webpack://kaiten-ext/external node-commonjs \"node:http\"","webpack://kaiten-ext/external node-commonjs \"node:https\"","webpack://kaiten-ext/external node-commonjs \"node:zlib\"","webpack://kaiten-ext/external node-commonjs \"node:stream\"","webpack://kaiten-ext/external node-commonjs \"node:buffer\"","webpack://kaiten-ext/./node_modules/data-uri-to-buffer/dist/index.js","webpack://kaiten-ext/external node-commonjs \"node:util\"","webpack://kaiten-ext/./node_modules/node-fetch/src/errors/base.js","webpack://kaiten-ext/./node_modules/node-fetch/src/errors/fetch-error.js","webpack://kaiten-ext/./node_modules/node-fetch/src/utils/is.js","webpack://kaiten-ext/./node_modules/node-fetch/src/body.js","webpack://kaiten-ext/./node_modules/node-fetch/src/headers.js","webpack://kaiten-ext/./node_modules/node-fetch/src/utils/is-redirect.js","webpack://kaiten-ext/./node_modules/node-fetch/src/response.js","webpack://kaiten-ext/external node-commonjs \"node:url\"","webpack://kaiten-ext/external node-commonjs \"node:net\"","webpack://kaiten-ext/./node_modules/node-fetch/src/utils/referrer.js","webpack://kaiten-ext/./node_modules/node-fetch/src/request.js","webpack://kaiten-ext/./node_modules/node-fetch/src/utils/get-search.js","webpack://kaiten-ext/./node_modules/node-fetch/src/errors/abort-error.js","webpack://kaiten-ext/./node_modules/node-fetch/src/index.js","webpack://kaiten-ext/webpack/bootstrap","webpack://kaiten-ext/webpack/runtime/define property getters","webpack://kaiten-ext/webpack/runtime/ensure chunk","webpack://kaiten-ext/webpack/runtime/get javascript chunk filename","webpack://kaiten-ext/webpack/runtime/hasOwnProperty shorthand","webpack://kaiten-ext/webpack/runtime/make namespace object","webpack://kaiten-ext/./src/extension.ts"],"sourcesContent":["// no baseURI\n\n// object to store loaded chunks\n// \"1\" means \"loaded\", otherwise not loaded yet\nvar installedChunks = {\n\t179: 1\n};\n\n// no on chunks loaded\n\nvar installChunk = (chunk) => {\n\tvar moreModules = chunk.modules, chunkIds = chunk.ids, runtime = chunk.runtime;\n\tfor(var moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\tfor(var i = 0; i < chunkIds.length; i++)\n\t\tinstalledChunks[chunkIds[i]] = 1;\n\n};\n\n// require() chunk loading for javascript\n__webpack_require__.f.require = (chunkId, promises) => {\n\t// \"1\" is the signal for \"already loaded\"\n\tif(!installedChunks[chunkId]) {\n\t\tif(true) { // all chunks have JS\n\t\t\tinstallChunk(require(\"./\" + __webpack_require__.u(chunkId)));\n\t\t} else installedChunks[chunkId] = 1;\n\t}\n};\n\n// no external install chunk\n\n// no HMR\n\n// no HMR manifest","/*! node-domexception. MIT License. Jimmy Wärting <https://jimmy.warting.se/opensource> */\n\nif (!globalThis.DOMException) {\n  try {\n    const { MessageChannel } = require('worker_threads'),\n    port = new MessageChannel().port1,\n    ab = new ArrayBuffer()\n    port.postMessage(ab, [ab, ab])\n  } catch (err) {\n    err.constructor.name === 'DOMException' && (\n      globalThis.DOMException = err.constructor\n    )\n  }\n}\n\nmodule.exports = globalThis.DOMException\n","import fetch from \"node-fetch\";\r\nimport { AddKaitenChecklistType, AddTimeLogDataType, AddTimeLogResponseDataType, KaitenCardType, KaitenChecklistItemType, KaitenChecklistType, KaitenRoleType, KaitenTimeLogType, UpdateChecklistItemType, UpdateKaitenChecklistType, UpdateTimeLogDataType, UpdateTimeLogResponseDataType } from \"./kaiten.dto\";\r\n\r\nconst SUCCESS_STATUSES = [200, 201];\r\n\r\nexport class KaitenApiService {\r\n  private baseUrl: string;\r\n  private apiKey: string;\r\n  constructor(\r\n    baseUrl: string,\r\n    apiKey: string\r\n  ) {\r\n    this.apiKey = apiKey;\r\n    this.baseUrl = baseUrl;\r\n  }\r\n\r\n  async getTask(id: string) {\r\n    try {\r\n      const result = await this.request<KaitenCardType>(\r\n        this.baseUrl + '/api/latest/cards/' + id,\r\n        this.kaitenOptions({\r\n          method: 'GET'\r\n        })\r\n      );\r\n\r\n      return { error: false, data: result };\r\n    } catch (error) {\r\n      return {\r\n        error: true,\r\n        errorMessage: error as string\r\n      };\r\n    }\r\n  }\r\n\r\n  async getRoles() {\r\n    try {\r\n      const result = await this.request<KaitenRoleType[]>(\r\n        this.baseUrl + '/api/latest/user-roles',\r\n        this.kaitenOptions({\r\n          method: 'GET'\r\n        })\r\n      );\r\n\r\n      return { error: false, data: result };\r\n    } catch (error) {\r\n      return {\r\n        error: true,\r\n        errorMessage: error as string\r\n      };\r\n    }\r\n  }\r\n\r\n  async getTimeLogs(taskId: string) {\r\n    try {\r\n      const result = await this.request<KaitenTimeLogType[]>(\r\n        this.baseUrl + '/api/latest/cards/' + taskId + '/time-logs',\r\n        this.kaitenOptions({\r\n          method: 'GET'\r\n        })\r\n      );\r\n\r\n      return { error: false, data: result };\r\n    } catch (error) {\r\n      return {\r\n        error: true,\r\n        errorMessage: error as string\r\n      };\r\n    }\r\n  }\r\n  async addTimeLog(taskId: string, payload: AddTimeLogDataType) {\r\n    try {\r\n      const result = await this.request<AddTimeLogResponseDataType>(\r\n        this.baseUrl + '/api/latest/cards/' + taskId + '/time-logs',\r\n        this.kaitenOptions({\r\n          method: 'POST',\r\n          body: JSON.stringify(payload)\r\n        })\r\n      );\r\n\r\n      return { error: false, data: result };\r\n    } catch (error) {\r\n      return {\r\n        error: true,\r\n        errorMessage: error as string\r\n      };\r\n    }\r\n  }\r\n  async updateTimeLog(taskId: string, logId: string, payload: UpdateTimeLogDataType) {\r\n    try {\r\n      const result = await this.request<UpdateTimeLogResponseDataType>(\r\n        this.baseUrl + '/api/latest/cards/' + taskId + '/time-logs/' + logId,\r\n        this.kaitenOptions({\r\n          method: 'PATCH',\r\n          body: JSON.stringify(payload)\r\n        })\r\n      );\r\n\r\n      return { error: false, data: result };\r\n    } catch (error) {\r\n      return {\r\n        error: true,\r\n        errorMessage: error as string\r\n      };\r\n    }\r\n  }\r\n  async removeTimeLog(taskId: string, logId: string) {\r\n    try {\r\n      const result = await this.request<{ id: number }>(\r\n        this.baseUrl + '/api/latest/cards/' + taskId + '/time-logs/' + logId,\r\n        this.kaitenOptions({\r\n          method: 'DELETE'\r\n        })\r\n      );\r\n\r\n      return { error: false, data: result };\r\n    } catch (error) {\r\n      return {\r\n        error: true,\r\n        errorMessage: error as string\r\n      };\r\n    }\r\n  }\r\n\r\n  async addCheckList(taskId: string, payload: AddKaitenChecklistType) {\r\n    try {\r\n      const result = await this.request<KaitenChecklistType>(\r\n        this.baseUrl + '/api/latest/cards/' + taskId + '/checklists',\r\n        this.kaitenOptions({\r\n          method: 'POST',\r\n          body: JSON.stringify(payload)\r\n        })\r\n      );\r\n\r\n      return { error: false, data: result };\r\n    } catch (error) {\r\n      return {\r\n        error: true,\r\n        errorMessage: error as string\r\n      };\r\n    }\r\n  }\r\n  async updateCheckList(taskId: string, checklistId: number, payload: UpdateKaitenChecklistType) {\r\n    try {\r\n      const result = await this.request<KaitenChecklistType>(\r\n        this.baseUrl + '/api/latest/cards/' + taskId + '/checklists/' + checklistId,\r\n        this.kaitenOptions({\r\n          method: 'PATCH',\r\n          body: JSON.stringify(payload)\r\n        })\r\n      );\r\n\r\n      return { error: false, data: result };\r\n    } catch (error) {\r\n      return {\r\n        error: true,\r\n        errorMessage: error as string\r\n      };\r\n    }\r\n  }\r\n  async deleteCheckList(taskId: string, checklistId: number) {\r\n    try {\r\n      const result = await this.request<{ id: number }>(\r\n        this.baseUrl + '/api/latest/cards/' + taskId + '/checklists/' + checklistId,\r\n        this.kaitenOptions({\r\n          method: 'DELETE'\r\n        })\r\n      );\r\n\r\n      return { error: false, data: result };\r\n    } catch (error) {\r\n      return {\r\n        error: true,\r\n        errorMessage: error as string\r\n      };\r\n    }\r\n  }\r\n\r\n  async addCheckListItem(taskId: string, checklistId: number, payload: { text: string }) {\r\n    try {\r\n      const result = await this.request<KaitenChecklistItemType>(\r\n        this.baseUrl + '/api/latest/cards/' + taskId + '/checklists/' + checklistId + '/items',\r\n        this.kaitenOptions({\r\n          method: 'POST',\r\n          body: JSON.stringify(payload)\r\n        })\r\n      );\r\n\r\n      return { error: false, data: result };\r\n    } catch (error) {\r\n      return {\r\n        error: true,\r\n        errorMessage: error as string\r\n      };\r\n    }\r\n  }\r\n  async updateCheckListItem(taskId: string, checklistId: number, itemId: number, payload: UpdateChecklistItemType) {\r\n    try {\r\n      const result = await this.request<KaitenChecklistItemType>(\r\n        this.baseUrl + '/api/latest/cards/' + taskId + '/checklists/' + checklistId + '/items/' + itemId,\r\n        this.kaitenOptions({\r\n          method: 'PATCH',\r\n          body: JSON.stringify(payload)\r\n        })\r\n      );\r\n\r\n      return { error: false, data: result };\r\n    } catch (error) {\r\n      return {\r\n        error: true,\r\n        errorMessage: error as string\r\n      };\r\n    }\r\n  }\r\n  async deleteCheckListItem(taskId: string, checklistId: number, itemId: number) {\r\n    try {\r\n      const result = await this.request<{ id: number }>(\r\n        this.baseUrl + '/api/latest/cards/' + taskId + '/checklists/' + checklistId + '/items/' + itemId,\r\n        this.kaitenOptions({\r\n          method: 'DELETE'\r\n        })\r\n      );\r\n\r\n      return { error: false, data: result };\r\n    } catch (error) {\r\n      return {\r\n        error: true,\r\n        errorMessage: error as string\r\n      };\r\n    }\r\n  }\r\n\r\n  request<T>(url: string, options: Record<string, any>): Promise<T> {\r\n    return new Promise((resolve, reject) => {\r\n      try {\r\n        fetch(url, options).then(async (res) => {\r\n          if (res.status === 401) {\r\n            reject(\r\n              `${res.status} ${res.statusText}`\r\n                + (res.url.includes('kaiten') ? '. Проверьте или обновите Kaiten api key' : '')\r\n            );\r\n          } else {\r\n            let data: any;\r\n            try {\r\n              data = await res.json();\r\n            } catch (error) {\r\n              data = {};\r\n            }\r\n            if (!SUCCESS_STATUSES.includes(res.status)) {\r\n              reject(data.message || data.error || `${res.status} ${res.statusText}. URL: ${url}`);\r\n            } else {\r\n              resolve(data);\r\n            }\r\n          }\r\n        }).catch(err => {\r\n          console.log(err);\r\n          reject(`${err.message}. URL: ${url}`);\r\n          return err;\r\n        })\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n      \r\n    });\r\n  }\r\n  \r\n  kaitenOptions(params = {}) {\r\n    return {\r\n      credentials: 'include',\r\n      headers: {\r\n        'Content-Type': 'application/json;charset=utf-8',\r\n        Accept: 'application/json',\r\n        Authorization: 'Bearer ' + this.apiKey\r\n      },\r\n      ...params\r\n    };\r\n  }\r\n}","import { UpdateChecklistItemType } from \"../api/kaiten.dto\";\r\nimport { CheckList, CheckListItem, KaitenCheckListProvider } from \"../providers/checklist.provider\";\r\nimport { KaitenTaskStore } from \"../store\";\r\nimport * as vscode from 'vscode';\r\n\r\nexport class CheckListController {\r\n\r\n  private store: KaitenTaskStore;\r\n  \r\n  constructor(\r\n    context: vscode.ExtensionContext,\r\n\t\tstore: KaitenTaskStore\r\n  ) {\r\n    this.store = store;  \r\n    context.subscriptions.push(      \r\n      vscode.commands.registerCommand('kaiten.checklist.add', async () => {\r\n        await this.addCheckList();\r\n      }),\r\n      vscode.commands.registerCommand('kaiten.checklist.edit', async (list: CheckList) => {\r\n        await this.editCheckList(list);\r\n      }),\r\n      vscode.commands.registerCommand('kaiten.checklist.delete', async (list: CheckList) => {\r\n        await this.deleteCheckList(list);\r\n      }),\r\n      vscode.commands.registerCommand('kaiten.checklist.add-item', async (list: CheckList) => {\r\n        await this.addCheckListItem(list);\r\n      }),\r\n      vscode.commands.registerCommand('kaiten.checklist.edit-item', async (item: CheckListItem) => {\r\n        await this.editCheckListItem(item);\r\n      }),\r\n      vscode.commands.registerCommand('kaiten.checklist.delete-item', async (item: CheckListItem) => {\r\n        await this.deleteCheckListItem(item);\r\n      }),\r\n    );\r\n\t}\r\n\r\n  public async addCheckList() {\r\n    const input = await vscode.window.showInputBox({\r\n      title: `Новый чек-лист`,\r\n      placeHolder: 'Введите название нового чек-листа'\r\n    });\r\n    if (!input) return;\r\n\r\n    const response = await this.store.withProgress(\r\n      KaitenCheckListProvider.viewType,\r\n      this.store.kaitenApi.addCheckList(this.store.taskId, { name: input })\r\n    );\r\n\r\n    if (!response.error) {\r\n      if (this.store.taskData) {\r\n        response.data && this.store.taskData.checklists.push(response.data);\r\n        this.store.providerKaitenCheckList.refresh();\r\n      }\r\n      \r\n    } else {\r\n      vscode.window.showErrorMessage(response.errorMessage || 'Ошибка обновления чек-листа');\r\n    }\r\n  }\r\n\r\n  public async editCheckList(list: CheckList) {\r\n    const input = await vscode.window.showInputBox({\r\n      title: `Редактирование названия чек-листа`,\r\n      placeHolder: 'Введите название чек-листа',\r\n      value: list.data.name\r\n    });\r\n    if (!input) return;\r\n    const response = await this.store.withProgress(\r\n      KaitenCheckListProvider.viewType,\r\n      this.store.kaitenApi.updateCheckList(this.store.taskId, list.data.id, {\r\n        name: input\r\n      })\r\n    );\r\n\r\n    if (!response.error) {\r\n      if (this.store.taskData) {\r\n        this.store.taskData.checklists = this.store.taskData.checklists.map(listItem => listItem.id === list.data.id ? {\r\n          ...listItem,\r\n          name: input\r\n        } : listItem);\r\n        this.store.providerKaitenCheckList.refresh();\r\n      }\r\n    } else {\r\n      vscode.window.showErrorMessage(response.errorMessage || 'Ошибка обновления чек-листа');\r\n    }\r\n  }\r\n\r\n  public async deleteCheckList(list: CheckList) {\r\n    const id = list.data.id;\r\n\r\n    const confirm = await vscode.window.showQuickPick(['Да', 'Нет'], {\r\n      canPickMany: false,\r\n      placeHolder: 'Выберите нужный вариант',\r\n      title: `Удалить чек-лист \"${list.data.name}\" ?`\r\n    });\r\n    if (confirm !== 'Да') return;\r\n\r\n    const response = await this.store.withProgress(\r\n      KaitenCheckListProvider.viewType,\r\n      this.store.kaitenApi.deleteCheckList(this.store.taskId, id)\r\n    );\r\n\r\n    if (!response.error) {\r\n      if (this.store.taskData) {\r\n        this.store.taskData.checklists = this.store.taskData.checklists.filter(list => list.id !== id);\r\n        this.store.providerKaitenCheckList.refresh();\r\n      }\r\n    } else {\r\n      vscode.window.showErrorMessage(response.errorMessage || 'Ошибка обновления чек-листа');\r\n    }\r\n  }\r\n\r\n\r\n\r\n  public async addCheckListItem(checklist: CheckList) {\r\n    const checklistId = checklist.data.id;\r\n    const input = await vscode.window.showInputBox({\r\n      title: `Новый пункт чек-листа \"${checklist.data.name}\"`,\r\n      placeHolder: 'Введите текст нового пункта'\r\n    });\r\n    if (!input) return;\r\n\r\n    const response = await this.store.withProgress(\r\n      KaitenCheckListProvider.viewType,\r\n      this.store.kaitenApi.addCheckListItem(this.store.taskId, checklistId, { text: input })\r\n    );\r\n\r\n    if (!response.error) {\r\n      if (this.store.taskData) {\r\n        this.store.taskData.checklists = this.store.taskData.checklists.map(list => list.id === checklistId ? {\r\n          ...list,\r\n          items: response.data ? [...(list.items || []), response.data] : list.items\r\n        } : list);\r\n        this.store.providerKaitenCheckList.refresh();\r\n      }\r\n    } else {\r\n      vscode.window.showErrorMessage(response.errorMessage || 'Ошибка обновления чек-листа');\r\n    }\r\n  }\r\n\r\n  public async editCheckListItem(item: CheckListItem) {\r\n    const input = await vscode.window.showInputBox({\r\n      title: `Редактирование пункта чек-листа`,\r\n      placeHolder: 'Введите текст пункта',\r\n      value: item.data.text\r\n    });\r\n    if (!input) return;\r\n    await this.changeCheckListItem(item.data.id, item.data.checklist_id, { text: input });\r\n  }\r\n\r\n  public async changeCheckListItem(id: number, checklistId: number, payload: UpdateChecklistItemType) {\r\n    const response = await this.store.withProgress(\r\n      KaitenCheckListProvider.viewType,\r\n      this.store.kaitenApi.updateCheckListItem(this.store.taskId, checklistId, id, payload)\r\n    );\r\n\r\n    if (!response.error) {\r\n      if (this.store.taskData) {\r\n        this.store.taskData.checklists = this.store.taskData.checklists.map(list => list.id === checklistId ? {\r\n          ...list,\r\n          items: list.items?.map(item => item.id === id && response.data ? response.data : item)\r\n        } : list);\r\n        this.store.providerKaitenCheckList.refresh();\r\n      }\r\n    } else {\r\n      vscode.window.showErrorMessage(response.errorMessage || 'Ошибка обновления чек-листа');\r\n    }\r\n  }\r\n\r\n  public async deleteCheckListItem(item: CheckListItem) {\r\n    const id = item.data.id;\r\n    const checklistId = item.data.checklist_id;\r\n\r\n    const confirm = await vscode.window.showQuickPick(['Да', 'Нет'], {\r\n      canPickMany: false,\r\n      placeHolder: 'Выберите нужный вариант',\r\n      title: 'Удалить пункт чек-листа?'\r\n    });\r\n    if (confirm !== 'Да') return;\r\n\r\n    const response = await this.store.withProgress(\r\n      KaitenCheckListProvider.viewType,\r\n      this.store.kaitenApi.deleteCheckListItem(this.store.taskId, checklistId, id)\r\n    );\r\n\r\n    if (!response.error) {\r\n      if (this.store.taskData) {\r\n        this.store.taskData.checklists = this.store.taskData.checklists.map(list => list.id === checklistId ? {\r\n          ...list,\r\n          items: list.items?.filter(item => item.id !== id)\r\n        } : list);\r\n        this.store.providerKaitenCheckList.refresh();\r\n      }\r\n    } else {\r\n      vscode.window.showErrorMessage(response.errorMessage || 'Ошибка обновления чек-листа');\r\n    }\r\n  }\r\n\r\n}","import { AddTimeLogDataType, UpdateTimeLogDataType } from \"../api/kaiten.dto\";\r\nimport { KaitenTimeLogViewProvider } from \"../providers/time-log.provider\";\r\nimport { KaitenTaskStore } from \"../store\";\r\nimport * as vscode from 'vscode';\r\n\r\nexport class TimeLogController {\r\n\r\n  private store: KaitenTaskStore;\r\n  \r\n  constructor(\r\n    context: vscode.ExtensionContext,\r\n\t\tstore: KaitenTaskStore\r\n  ) {\r\n    this.store = store;  \r\n    context.subscriptions.push(\r\n      vscode.commands.registerCommand('kaiten.time-log.refresh', async () => {\r\n        store.providerKaitenTimeLog.clearForm();\r\n        await store.updateTimeLogs();\r\n      }),\r\n    );\r\n\t}\r\n  \r\n  public async updateTimeLogs() {\r\n    const response = await this.store.withProgress(\r\n      KaitenTimeLogViewProvider.viewType,\r\n      this.store.kaitenApi.getTimeLogs(this.store.taskId)\r\n    );\r\n\t\tif (!response.error && response.data) {\r\n\t\t\tthis.store.timeLogs = response.data;\r\n\t\t}\r\n  }\r\n  public async addTimeLog(payload: AddTimeLogDataType) {\r\n    const response = await this.store.withProgress(\r\n      KaitenTimeLogViewProvider.viewType,\r\n      this.store.kaitenApi.addTimeLog(this.store.taskId, payload)\r\n    );\r\n\r\n    if (!response.error) {\r\n      await this.updateTimeLogs();\r\n    } else {\r\n      vscode.window.showErrorMessage(response.errorMessage || 'Ошибка создания записи');\r\n    }\r\n  }\r\n\r\n  public async updateTimeLog(payload: UpdateTimeLogDataType & { id: string }) {\r\n    const response = await this.store.withProgress(\r\n      KaitenTimeLogViewProvider.viewType,\r\n      this.store.kaitenApi.updateTimeLog(this.store.taskId, payload.id, payload)\r\n    );\r\n\r\n    if (!response.error) {\r\n      await this.updateTimeLogs();\r\n    } else {\r\n      vscode.window.showErrorMessage(response.errorMessage || 'Ошибка обновления записи');\r\n    }\r\n  }\r\n\r\n  public async removeTimeLog(logId: string) {\r\n    const confirm = await vscode.window.showQuickPick(['Да', 'Нет'], {\r\n      canPickMany: false,\r\n      placeHolder: 'Выберите нужный вариант',\r\n      title: 'Удалить запись?'\r\n    });\r\n    if (confirm !== 'Да') return;\r\n    const response = await this.store.withProgress(\r\n      KaitenTimeLogViewProvider.viewType,\r\n      this.store.kaitenApi.removeTimeLog(this.store.taskId, logId)\r\n    );\r\n    \r\n    if (!response.error) {\r\n      await this.updateTimeLogs();\r\n    } else {\r\n      vscode.window.showErrorMessage(response.errorMessage || 'Ошибка удаления записи');\r\n    }\r\n  }\r\n}","import * as vscode from 'vscode';\r\nimport { API as BuiltInGitApi, GitExtension, Repository } from '../@types/git';\r\n\r\nexport async function getBuiltInGitApi(): Promise<BuiltInGitApi | undefined> {\r\n  try {\r\n    const extension = vscode.extensions.getExtension('vscode.git') as vscode.Extension<GitExtension>;\r\n    if (extension !== undefined) {\r\n        const gitExtension = extension.isActive ? extension.exports : await extension.activate();\r\n\r\n        return gitExtension.getAPI(1);\r\n    }\r\n  } catch {}\r\n\r\n  return undefined;\r\n}","export const Input = (\r\n  name: string,\r\n  label: string,\r\n  inputHtml: string,\r\n  className?: string\r\n) => `\r\n<div class=\"input-container ${className || ''}\">\r\n  ${inputHtml}\r\n  <fieldset aria-hidden=\"true\" class=\"input-fieldset\">\r\n    <legend class=\"input-legend\">\r\n      <span>\r\n        ${label}\r\n      </span>\r\n    </legend>\r\n  </fieldset>\r\n  <label class=\"input-label\" for=\"${name}\">${label}</label>\r\n</div>\r\n`;","export function generateKaitenLink(base: string, branchName: string): string | null {\r\n  const result = /(\\d{7,8})/.exec(branchName);\r\n  if (!result) return null;\r\n  return `${base}/${result[1]}`;\r\n}\r\n\r\nexport const formatUrl = (url?: string) => {\r\n  return url?.endsWith('/') ? url.slice(0, url.length - 1) : url;\r\n};\r\n\r\nexport const convertKaitenDescription = (desc: string) => {\r\n  return desc.replaceAll(/\\[([\\W\\w]*)\\]\\(([\\W\\w]*)\\)/g, (a, b, c) => { \r\n    return `<a href=\"${c}\">${b || c}</a>`;\r\n  })\r\n};\r\n\r\nexport function getNonce() {\r\n\tlet text = '';\r\n\tconst possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n\tfor (let i = 0; i < 32; i++) {\r\n\t\ttext += possible.charAt(Math.floor(Math.random() * possible.length));\r\n\t}\r\n\treturn text;\r\n}\r\n/**\r\n * \r\n * @param date - for example 2023-06-19 (YYYY-MM-DD)\r\n * @returns date in format DD.MM.YYYY\r\n */\r\nexport const formatDate = (date: string): string => {\r\n  const regCheck = /(\\d{4,})-(\\d{2,})-(\\d{2,})/g.exec(date);\r\n  if (!regCheck) {\r\n    console.log('date format is not YYYY-MM-DD');\r\n    return date;\r\n  }\r\n  const [, year, month, day] = regCheck;\r\n  return `${day}.${month}.${year}`;\r\n};\r\n\r\n/**\r\n * \r\n * @param time - for example 320\r\n * @returns time in format {x} ч. {y} мин.\r\n */\r\nexport const formatTime = (time: number): string => {\r\n  const minutes = time % 60;\r\n  const hours = Math.floor(time / 60);\r\n  return `${hours ? hours + 'ч. ' : ''} ${minutes ? minutes + 'мин.' : ''}`;\r\n};","import * as vscode from 'vscode';\r\nimport { KaitenTaskStore } from '../store';\r\nimport { KaitenChecklistItemType, KaitenChecklistType } from '../api/kaiten.dto';\r\n\r\nexport class KaitenCheckListProvider implements vscode.TreeDataProvider<CheckList | CheckListItem> {\r\n\r\n\tpublic static readonly viewType = 'kaiten.checklist';\r\n\r\n\tprivate _onDidChangeTreeData: vscode.EventEmitter<CheckList | CheckListItem | undefined | void> = new vscode.EventEmitter<CheckList | CheckListItem | undefined | void>();\r\n\treadonly onDidChangeTreeData: vscode.Event<CheckList | CheckListItem | undefined | void> = this._onDidChangeTreeData.event;\r\n\r\n  private store: KaitenTaskStore;\r\n\r\n  private _view?: vscode.TreeView<CheckList | CheckListItem>;\r\n\r\n\tconstructor(\r\n\t\tstore: KaitenTaskStore\r\n  ) {\r\n    this.store = store;  \r\n\t}\r\n\r\n  set view(_view: vscode.TreeView<CheckList | CheckListItem> | undefined) {\r\n    this._view = _view;\r\n\t\tif (this._view) {\r\n\t\t\tthis._view.onDidChangeCheckboxState(async (e) => {\r\n\t\t\t\tif (!e.items || !e.items.length || ! e.items[0][0]) return;\r\n\t\t\t\tconst item = e.items[0][0];\r\n\t\t\t\tif (item instanceof CheckList) return;\r\n\t\t\t\tawait this.store.checkListController.changeCheckListItem(\r\n\t\t\t\t\titem.data.id,\r\n\t\t\t\t\titem.data.checklist_id,\r\n\t\t\t\t\t{ checked: item.checkboxState === vscode.TreeItemCheckboxState.Checked }\r\n\t\t\t\t);\r\n\t\t\t});\r\n\t\t}\r\n    \r\n  }\r\n  get view() {\r\n    return this._view;\r\n  }\r\n\r\n\trefresh(): void {\r\n\t\tthis._onDidChangeTreeData.fire();\r\n\t}\r\n\r\n\tgetTreeItem(element: CheckList | CheckListItem): vscode.TreeItem {\r\n\t\treturn element;\r\n\t}\r\n\r\n\tgetChildren(element?: CheckList | CheckListItem): Thenable<(CheckList | CheckListItem)[]> {\r\n    if (element && element instanceof CheckListItem) return Promise.resolve([]);\r\n\t\tif (element && element instanceof CheckList) {\r\n\t\t\treturn Promise.resolve(this.getNodeList(element.data.id));\r\n\t\t} else {\r\n\t\t\tif (this.store.taskData?.checklists.length) {\r\n\t\t\t\treturn Promise.resolve(this.getNodeList());\r\n\t\t\t} else {\r\n\t\t\t\tthis.store.taskData?.checklists.length === 0 && vscode.window.showInformationMessage('В задаче нет чек-листов!');\r\n\t\t\t\treturn Promise.resolve([]);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate getNodeList(checkListId?: number): (CheckList | CheckListItem)[] {\r\n    const checklists = (this.store.taskData?.checklists || []).slice();\r\n\t\tif (!checkListId) {\r\n      checklists.sort((a, b) => a.sort_order > b.sort_order ? 1: -1);\r\n      return checklists.map(item => new CheckList(\r\n        item,\r\n        vscode.TreeItemCollapsibleState.Collapsed,\r\n      ))\r\n    } else {\r\n      const checklist = checklists.find(item => item.id === checkListId);\r\n      if (!checklist) return [];\r\n      return checklist.items?.slice().sort((a, b) => a.sort_order > b.sort_order ? 1: -1).map(item => new CheckListItem(\r\n        item\r\n      )) || [];\r\n    }\r\n\t}\r\n\r\n}\r\n\r\nexport class CheckList extends vscode.TreeItem {\r\n\r\n\tconstructor(\r\n\t\tpublic readonly data: KaitenChecklistType,\r\n\t\tpublic readonly collapsibleState: vscode.TreeItemCollapsibleState,\r\n\t\tpublic readonly command?: vscode.Command\r\n\t) {\r\n\t\tsuper(data.name, collapsibleState);\r\n    const checkedCount = data.items?.filter(item => item.checked).length;\r\n\t\tthis.tooltip = data.name;\r\n\t\tthis.description = data.items?.length ? `${checkedCount}/${data.items.length}` : undefined;\r\n\t}\r\n\r\n\tcontextValue = 'kaiten.checklist.checklist';\r\n}\r\n\r\nexport class CheckListItem extends vscode.TreeItem {\r\n\r\n\tconstructor(\r\n\t\tpublic readonly data: KaitenChecklistItemType,\r\n\t\tpublic readonly command?: vscode.Command\r\n\t) {\r\n\t\tsuper(data.text, vscode.TreeItemCollapsibleState.None);\r\n\r\n\t\tthis.tooltip = data.text;\r\n\t\tthis.description = data.checked ? data.checked_by?.full_name : undefined;\r\n\r\n    this.checkboxState = {\r\n      state: data.checked ? vscode.TreeItemCheckboxState.Checked : vscode.TreeItemCheckboxState.Unchecked\r\n    };\r\n\t}\r\n\r\n\tcontextValue = 'kaiten.checklist.checklistItem';\r\n}","import * as vscode from 'vscode';\r\nimport { API as BuiltInGitApi, GitExtension, Repository } from '../@types/git';\r\nimport { convertKaitenDescription, generateKaitenLink, getNonce } from '../helpers/string';\r\nimport { Event } from 'vscode';\r\nimport { KaitenApiService } from '../api/kaiten';\r\nimport { KaitenCardType } from '../api/kaiten.dto';\r\n\r\nexport class KaitenTaskViewProvider implements vscode.WebviewViewProvider {\r\n\r\n\tpublic static readonly viewType = 'kaiten.task';\r\n\r\n\tprivate _view?: vscode.WebviewView;\r\n\r\n\tprivate taskData: KaitenCardType | null = null;\r\n\r\n\tconstructor(\r\n\t\tprivate readonly _extensionUri: vscode.Uri\r\n\t) { }\r\n\r\n\tpublic async resolveWebviewView(\r\n\t\twebviewView: vscode.WebviewView,\r\n\t\tcontext: vscode.WebviewViewResolveContext,\r\n\t\t_token: vscode.CancellationToken,\r\n\t) {\r\n\t\tthis._view = webviewView;\r\n\r\n\t\twebviewView.webview.options = {\r\n\t\t\t// Allow scripts in the webview\r\n\t\t\tenableScripts: true,\r\n\r\n\t\t\tlocalResourceRoots: [\r\n\t\t\t\tthis._extensionUri\r\n\t\t\t]\r\n\t\t};\r\n\r\n\t\twebviewView.webview.html = this._getHtmlForWebview(webviewView.webview);\r\n\r\n\t\twebviewView.webview.onDidReceiveMessage(data => {\r\n\t\t\tswitch (data.type) {\r\n\t\t\t\tcase 'colorSelected':\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tvscode.window.activeTextEditor?.insertSnippet(new vscode.SnippetString(`#${data.value}`));\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\twebviewView.onDidChangeVisibility(() => {\r\n\t\t\twebviewView.webview.html = webviewView.visible ? this._getHtmlForWebview(webviewView.webview) : '';\r\n\t\t});\r\n\t}\r\n\r\n\tpublic updateTaskData(data: KaitenCardType) {\r\n\t\tthis.taskData = data;\r\n\t\tif (this._view) {\r\n\t\t\tconst taskInfoHtml = this._generateTaskInfoHtml(data);\r\n\t\t\tthis._view.webview.postMessage({ type: 'updateTaskData', data: taskInfoHtml });\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _getHtmlForWebview(webview: vscode.Webview) {\r\n\t\t// Get the local path to main script run in the webview, then convert it to a uri we can use in the webview.\r\n\t\tconst scriptUri = webview.asWebviewUri(vscode.Uri.joinPath(this._extensionUri, 'mediaTask', 'main.js'));\r\n\r\n\t\t// Do the same for the stylesheet.\r\n\t\tconst styleResetUri = webview.asWebviewUri(vscode.Uri.joinPath(this._extensionUri, 'mediaTask', 'reset.css'));\r\n\t\tconst styleVSCodeUri = webview.asWebviewUri(vscode.Uri.joinPath(this._extensionUri, 'mediaTask', 'vscode.css'));\r\n\t\tconst styleMainUri = webview.asWebviewUri(vscode.Uri.joinPath(this._extensionUri, 'mediaTask', 'main.css'));\r\n\r\n\t\t// Use a nonce to only allow a specific script to be run.\r\n\t\tconst nonce = getNonce();\r\n\r\n\t\treturn `<!DOCTYPE html>\r\n\t\t\t<html lang=\"en\">\r\n\t\t\t<head>\r\n\t\t\t\t<meta charset=\"UTF-8\">\r\n\r\n\t\t\t\t<!--\r\n\t\t\t\t\tUse a content security policy to only allow loading styles from our extension directory,\r\n\t\t\t\t\tand only allow scripts that have a specific nonce.\r\n\t\t\t\t\t(See the 'webview-sample' extension sample for img-src content security policy examples)\r\n\t\t\t\t-->\r\n\t\t\t\t<meta http-equiv=\"Content-Security-Policy\" content=\"default-src 'none'; style-src ${webview.cspSource}; script-src 'nonce-${nonce}';\">\r\n\r\n\t\t\t\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n\r\n\t\t\t\t<link href=\"${styleResetUri}\" rel=\"stylesheet\">\r\n\t\t\t\t<link href=\"${styleVSCodeUri}\" rel=\"stylesheet\">\r\n\t\t\t\t<link href=\"${styleMainUri}\" rel=\"stylesheet\">\r\n\r\n\t\t\t\t<title>KAiten task</title>\r\n\t\t\t</head>\r\n\t\t\t<body>\r\n\t\t\t\t<div id=\"kaiten-task-info\">${this.taskData ? this._generateTaskInfoHtml(this.taskData) : ''}</div>\r\n\t\t\t\t<script nonce=\"${nonce}\" src=\"${scriptUri}\"></script>\r\n\t\t\t</body>\r\n\t\t\t</html>`;\r\n\t}\r\n\r\n\tprivate _generateTaskInfoHtml(data: KaitenCardType): string {\r\n\t\tconst description: string[] = [];\r\n\t\tdata.description?.split(\"\\n\\n\").forEach(item => {\r\n\t\t\tif (item) description.push(`<p class=\"desc__list-item\">${convertKaitenDescription(item)}</p>`);\r\n\t\t});\r\n\t\tconst descHtml = description.length ? `<div class=\"desc__list\">${description.join(\"\\n\")}</div>` : '';\r\n\t\treturn `\r\n\t\t<h4 class=\"task-title\">${data.title}</h4>\r\n\t\t${descHtml}\r\n\t\t`;\r\n\t}\r\n}\r\n\r\n","import * as vscode from 'vscode';\r\nimport { API as BuiltInGitApi, GitExtension, Repository } from '../@types/git';\r\nimport { convertKaitenDescription, formatDate, formatTime, generateKaitenLink, getNonce } from '../helpers/string';\r\nimport { Event } from 'vscode';\r\nimport { KaitenApiService } from '../api/kaiten';\r\nimport { KaitenCardType, KaitenRoleType, KaitenTimeLogType } from '../api/kaiten.dto';\r\nimport { KaitenTaskStore } from '../store';\r\nimport { Input } from '../helpers/html';\r\n\r\nexport class KaitenTimeLogViewProvider implements vscode.WebviewViewProvider {\r\n\r\n\tpublic static readonly viewType = 'kaiten.time-log';\r\n\r\n\tprivate _view?: vscode.WebviewView;\r\n\r\n\tget view() {\r\n\t\treturn this._view;\r\n\t}\r\n\r\n\tprivate store: KaitenTaskStore;\r\n\r\n\tconstructor(\r\n\t\tprivate readonly _extensionUri: vscode.Uri,\r\n\t\tstore: KaitenTaskStore\r\n\t) {\r\n\t\tthis.store = store;\r\n  }\r\n\r\n\tpublic async resolveWebviewView(\r\n\t\twebviewView: vscode.WebviewView,\r\n\t\tcontext: vscode.WebviewViewResolveContext,\r\n\t\t_token: vscode.CancellationToken,\r\n\t) {\r\n\t\tcontext\r\n\t\tthis._view = webviewView;\r\n\r\n\t\twebviewView.webview.options = {\r\n\t\t\t// Allow scripts in the webview\r\n\t\t\tenableScripts: true,\r\n\r\n\t\t\tlocalResourceRoots: [\r\n\t\t\t\tthis._extensionUri\r\n\t\t\t]\r\n\t\t};\r\n\r\n\t\twebviewView.webview.html = this._getHtmlForWebview(webviewView.webview);\r\n\t\tconst $this = this;\r\n\t\twebviewView.webview.onDidReceiveMessage(data => {\r\n\t\t\tswitch (data.type) {\r\n\t\t\t\tcase 'addTimeLog':\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$this.store.timeLogController.addTimeLog(data.payload);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\tcase 'updateTimeLog':\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$this.store.timeLogController.updateTimeLog(data.payload);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\tcase 'removeTimeLog':\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$this.store.timeLogController.removeTimeLog(data.payload);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\tcase 'editTimeLog':\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$this.editTimeLog(data.payload);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\twebviewView.onDidChangeVisibility(() => {\r\n\t\t\twebviewView.webview.html = webviewView.visible ? this._getHtmlForWebview(webviewView.webview) : '';\r\n\t\t});\r\n\t}\r\n\r\n\tpublic updateTimeLogsData(data: KaitenTimeLogType[]) {\r\n\t\tif (this._view) {\r\n\t\t\tconst timeLogListHtml = this._generateTimeLogListHtml(data);\r\n\t\t\tthis._view.webview.postMessage({ type: 'updateTimeLogsData', data: timeLogListHtml });\r\n\t\t}\r\n\t}\r\n\r\n\tpublic updateRolesData(data: KaitenRoleType[]) {\r\n\t\tif (this._view) {\r\n\t\t\tconst rolesOptionsHtml = this._generateRoleOptionsHtml(data);\r\n\t\t\tthis._view.webview.postMessage({ type: 'updateRolesData', data: rolesOptionsHtml });\r\n\t\t}\r\n\t}\r\n\r\n\tprivate editTimeLog(logId: string) {\r\n\t\tconst timeLog = this.store.timeLogs.find(item => item.id === Number(logId));\r\n\t\tif (!timeLog) return;\r\n\t\tif (this._view) {\r\n\t\t\tthis._view.webview.postMessage({ type: 'setEditedTimeLog', data: timeLog });\r\n\t\t}\r\n\t}\r\n\r\n\tpublic clearForm() {\r\n\t\tif (this._view) {\r\n\t\t\tthis._view.webview.postMessage({ type: 'clearForm' });\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _getHtmlForWebview(webview: vscode.Webview) {\r\n\t\t// Get the local path to main script run in the webview, then convert it to a uri we can use in the webview.\r\n\t\tconst scriptUri = webview.asWebviewUri(vscode.Uri.joinPath(this._extensionUri, 'mediaTimeLogs', 'main.js'));\r\n\r\n\t\tconst styleResetUri = webview.asWebviewUri(vscode.Uri.joinPath(this._extensionUri, 'mediaTimeLogs', 'reset.css'));\r\n\t\tconst styleVSCodeUri = webview.asWebviewUri(vscode.Uri.joinPath(this._extensionUri, 'mediaTimeLogs', 'vscode.css'));\r\n\t\tconst styleMainUri = webview.asWebviewUri(vscode.Uri.joinPath(this._extensionUri, 'mediaTimeLogs', 'main.css'));\r\n\t\tconst styleInputUri = webview.asWebviewUri(vscode.Uri.joinPath(this._extensionUri, 'mediaTimeLogs', 'input.css'));\r\n\t\t// const codiconsUri = webview.asWebviewUri(vscode.Uri.joinPath(this._extensionUri, 'node_modules', '@vscode/codicons', 'dist', 'codicon.css'));\r\n\t\tconst codiconsUri = webview.asWebviewUri(vscode.Uri.joinPath(this._extensionUri, 'assets', 'codicon.css'));\r\n\r\n\t\tconst nonce = getNonce();\r\n\r\n\t\tconst forDate = Input(\r\n\t\t\t'for_date',\r\n\t\t\t'Дата',\r\n\t\t\t'<input type=\"date\" name=\"for_date\" placeholder=\"Выберите дату\" />'\r\n\t\t);\r\n\r\n\t\tconst timeSpent = Input(\r\n\t\t\t'time_spent',\r\n\t\t\t'Затрачено времени',\r\n\t\t\t'<input type=\"number\" name=\"time_spent\" placeholder=\"в минутах\" />'\r\n\t\t);\r\n\r\n\t\tconst roleSelect = Input(\r\n\t\t\t'role_id',\r\n\t\t\t'Роль',\r\n\t\t\t`\r\n\t\t\t\t<select\r\n\t\t\t\t\tname=\"role_id\"\r\n\t\t\t\t\tid=\"role_select\"\r\n\t\t\t\t\tclass=\"monaco-select-box monaco-select-box-dropdown-padding setting-control-focus-target\"\r\n\t\t\t\t>\t\r\n\t\t\t\t\t${this._generateRoleOptionsHtml(this.store.userRoles)}\r\n\t\t\t\t</select>\r\n\t\t\t`,\r\n\t\t\t'select-container'\r\n\t\t);\r\n\t\t\r\n\t\tconst comment = Input(\r\n\t\t\t'comment',\r\n\t\t\t'Комментарий',\r\n\t\t\t'<textarea name=\"comment\"></textarea>',\r\n\t\t\t'cont-comment'\r\n\t\t);\r\n\r\n\t\treturn `<!DOCTYPE html>\r\n\t\t\t<html lang=\"en\">\r\n\t\t\t<head>\r\n\t\t\t\t<meta charset=\"UTF-8\">\r\n\r\n\t\t\t\t<!--\r\n\t\t\t\t\tUse a content security policy to only allow loading styles from our extension directory,\r\n\t\t\t\t\tand only allow scripts that have a specific nonce.\r\n\t\t\t\t\t(See the 'webview-sample' extension sample for img-src content security policy examples)\r\n\t\t\t\t-->\r\n\t\t\t\t<meta http-equiv=\"Content-Security-Policy\" content=\"default-src 'none'; font-src ${webview.cspSource}; style-src ${webview.cspSource}; script-src 'nonce-${nonce}';\">\r\n\t\t\t\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n\r\n\t\t\t\t<link href=\"${styleResetUri}\" rel=\"stylesheet\">\r\n\t\t\t\t<link href=\"${styleVSCodeUri}\" rel=\"stylesheet\">\r\n\t\t\t\t<link href=\"${styleInputUri}\" rel=\"stylesheet\">\r\n\t\t\t\t<link href=\"${styleMainUri}\" rel=\"stylesheet\">\r\n\t\t\t\t<link href=\"${codiconsUri}\" rel=\"stylesheet\">\r\n\r\n\t\t\t\t<title>KAiten task</title>\r\n\t\t\t</head>\r\n\t\t\t<body>\r\n\t\t\t\t<form id=\"log-form\">\r\n\t\t\t\t\t<div class=\"top-fields\">\r\n\t\t\t\t\t\t${roleSelect}\r\n\t\t\t\t\t\t${timeSpent}\r\n\t\t\t\t\t\t${forDate}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t${comment}\r\n\t\t\t\t\t<div class=\"form-buttons\">\r\n\t\t\t\t\t\t<button id=\"create-btn\" >Создать</button>\r\n\t\t\t\t\t\t<button id=\"cancel-btn\" class=\"kaiten-hidden\" >Отменить</button>\r\n\t\t\t\t\t\t<button id=\"save-btn\" class=\"kaiten-hidden\" >Сохранить</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</form>\r\n\t\t\t\t<ul id=\"kaiten-time-logs-list\">${this.store.timeLogs.length ? this._generateTimeLogListHtml(this.store.timeLogs) : ''}</ul>\r\n\t\t\t\t<script nonce=\"${nonce}\" src=\"${scriptUri}\"></script>\r\n\t\t\t</body>\r\n\t\t\t</html>`;\r\n\t}\r\n\r\n\tprivate _generateTimeLogListHtml(data: KaitenTimeLogType[]): string {\r\n\t\treturn [...data].sort((a, b) => new Date(a.for_date) > new Date(b.for_date) ? -1 : 1).map(item => `\r\n\t\t\t<li class=\"time-log__item\" data-id=\"${item.id}\">\r\n\t\t\t\t<div class=\"top-block\">\r\n\t\t\t\t\t<span class=\"time-log__item-for_date\" title=\"Дата: ${formatDate(item.for_date)}\">${formatDate(item.for_date)}</span>\r\n\t\t\t\t\t<span class=\"time-log__item-role_name\" title=\"Роль: ${item.role.name}\">${item.role.name}</span>\r\n\t\t\t\t\t<span\r\n\t\t\t\t\t\tclass=\"time-log__item-time_spent\"\r\n\t\t\t\t\t\ttitle=\"Затрачено времени: ${formatTime(item.time_spent)}\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t${formatTime(item.time_spent)}\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"bottom-block\">\r\n\t\t\t\t\t<span\r\n\t\t\t\t\t\tclass=\"time-log__item-full_name\"\r\n\t\t\t\t\t\ttitle=\"${item.author.full_name}\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t${item.author.full_name}\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<span class=\"time-log__item-comment\" title=\"${item.comment}\">${item.comment}</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"delete-btn btn\">\r\n\t\t\t\t\t<i class=\"codicon codicon-close\"></i>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"edit-btn btn\">\r\n\t\t\t\t\t<i class=\"codicon codicon-edit\"></i>\r\n\t\t\t\t</div>\r\n\t\t\t</li>\r\n\t\t`).join(\"\\n\");\r\n\t}\r\n\r\n\tprivate _generateRoleOptionsHtml(data: KaitenRoleType[]): string {\r\n\t\treturn data.map(item => `\r\n\t\t\t<option label=\"${item.name}\">${item.id}</option>\r\n\t\t`).join(\"\\n\");\r\n\t}\r\n\r\n}\r\n","import { KaitenApiService } from \"../api/kaiten\";\r\nimport { KaitenTaskViewProvider } from \"../providers/task.provider\";\r\nimport * as vscode from 'vscode';\r\nimport { API as BuiltInGitApi, GitExtension, Repository } from '../@types/git';\r\nimport { getBuiltInGitApi } from \"../helpers/git\";\r\nimport { generateKaitenLink } from \"../helpers/string\";\r\nimport { KaitenCardType, KaitenRoleType, KaitenTimeLogType } from \"../api/kaiten.dto\";\r\nimport { KaitenTimeLogViewProvider } from \"../providers/time-log.provider\";\r\nimport { CheckList, CheckListItem, KaitenCheckListProvider } from \"../providers/checklist.provider\";\r\nimport { TimeLogController } from \"../controllers/time-log.controller\";\r\nimport { CheckListController } from \"../controllers/checklist.controller\";\r\n\r\ntype ViewType = typeof KaitenTaskViewProvider['viewType']\r\n  | typeof KaitenTimeLogViewProvider['viewType']\r\n  | typeof KaitenCheckListProvider['viewType'];\r\n\r\nexport class KaitenTaskStore {\r\n\r\n  private baseUrl: string;\r\n  \r\n\tpublic kaitenApi: KaitenApiService;\r\n\r\n  private _taskUrl: string = '';\r\n\r\n  private _taskId: string = '';\r\n\r\n\tpublic taskData: KaitenCardType | null = null;\r\n\r\n\tprivate _timeLogs: KaitenTimeLogType[] = [];\r\n\r\n  private _userRoles: KaitenRoleType[] = [];\r\n\r\n\tpublic providerKaitenTask: KaitenTaskViewProvider;\r\n\r\n\tpublic providerKaitenTimeLog: KaitenTimeLogViewProvider;\r\n\r\n  public timeLogController: TimeLogController;\r\n\r\n\tpublic providerKaitenCheckList: KaitenCheckListProvider;\r\n  \r\n\tpublic viewCheckList: vscode.TreeView<CheckList | CheckListItem>;\r\n\r\n\tpublic checkListController: CheckListController;\r\n\r\n  public gitExt?: BuiltInGitApi;\r\n\r\n  constructor(\r\n    context: vscode.ExtensionContext,\r\n    baseUrl: string,\r\n    apiKey: string\r\n  ) {\r\n    this.baseUrl = baseUrl;\r\n    this.kaitenApi = new KaitenApiService(baseUrl, apiKey);\r\n    this.providerKaitenTask = new KaitenTaskViewProvider(context.extensionUri);\r\n    this.providerKaitenTimeLog = new KaitenTimeLogViewProvider(context.extensionUri, this);\r\n    this.providerKaitenCheckList = new KaitenCheckListProvider(this);\r\n    this.viewCheckList = vscode.window.createTreeView<CheckList | CheckListItem>(KaitenCheckListProvider.viewType, { treeDataProvider: this.providerKaitenCheckList }); \r\n    this.providerKaitenCheckList.view = this.viewCheckList;\r\n    this.timeLogController = new TimeLogController(context, this);\r\n    this.checkListController = new CheckListController(context, this);\r\n  }\r\n\r\n  async init() {\r\n    const $this = this;\r\n    [this.gitExt] = await Promise.all([getBuiltInGitApi(), this.initRoles()]);\r\n    \r\n    if (!this.gitExt) return;\r\n\r\n    const initBranch = (_repo: Repository) => {\r\n      const callback = () => {\r\n        if (_repo.state.HEAD?.name) {\r\n          this.taskUrl = generateKaitenLink($this.baseUrl, _repo.state.HEAD.name) || '';\r\n          this.taskId = this.taskUrl.split('/').slice(-1)[0];\r\n        }\r\n      };\r\n      callback();\r\n      return callback;\r\n    };\r\n\r\n    if (this.gitExt.state === 'initialized' && this.gitExt.repositories[0]) {\r\n      const repo = this.gitExt.repositories[0];\r\n      repo.state.onDidChange(initBranch(repo));\r\n    } else {\r\n      this.gitExt.onDidOpenRepository((repo: Repository) => {\r\n        repo.state.onDidChange(initBranch(repo));\r\n      });\r\n    }\r\n  }\r\n\r\n  private async initRoles() {\r\n    const result = await this.withProgress(\r\n      KaitenTimeLogViewProvider.viewType,\r\n      this.kaitenApi.getRoles()\r\n    );\r\n    if (!result.error) {\r\n      this.userRoles = result.data || [];\r\n    } else {\r\n      this.userRoles = [];\r\n    }\r\n  }\r\n\r\n  public async updateTaskData() {\r\n    const response = await this.withProgress(\r\n      KaitenTaskViewProvider.viewType,\r\n      this.kaitenApi.getTask(this.taskId)\r\n    );\r\n\t\tif (!response.error && response.data) {\r\n\t\t\tthis.taskData = response.data;\r\n      this.providerKaitenTask.updateTaskData(response.data);\r\n      this.providerKaitenCheckList.refresh();\r\n\t\t\tconsole.log(this.taskData.title);\r\n\t\t}\r\n\t}\r\n\r\n  public async updateTimeLogs() {\r\n    const response = await this.withProgress(\r\n      KaitenTimeLogViewProvider.viewType,\r\n      this.kaitenApi.getTimeLogs(this.taskId)\r\n    );\r\n\t\tif (!response.error && response.data) {\r\n\t\t\tthis.timeLogs = response.data;\r\n\t\t}\r\n  }\r\n\r\n  set taskId(id: string) {\r\n    if (id !== this.taskId) {\r\n      this._taskId = id;\r\n      this.updateTaskData();\r\n      this.updateTimeLogs();\r\n      this.providerKaitenTimeLog.clearForm();\r\n    }\r\n    this._taskId = id;\r\n  }\r\n  \r\n  get taskId() {\r\n    return this._taskId;\r\n  }\r\n\r\n  set taskUrl(url: string) {\r\n    this._taskUrl = url;\r\n  }\r\n\r\n  get taskUrl() {\r\n    return this._taskUrl;\r\n  }\r\n\r\n  set timeLogs(logs: KaitenTimeLogType[]) {\r\n    this._timeLogs = logs;\r\n    \r\n    this.providerKaitenTimeLog.updateTimeLogsData(logs);\r\n  }\r\n\r\n  get timeLogs() {\r\n    return this._timeLogs;\r\n  }\r\n\r\n  set userRoles(roles: KaitenRoleType[]) {\r\n    this._userRoles = roles;\r\n    \r\n    this.providerKaitenTimeLog.updateRolesData(roles);\r\n  }\r\n\r\n  get userRoles() {\r\n    return this._userRoles;\r\n  }\r\n\r\n  public async withProgress<T>(viewId: ViewType, promise: Promise<T>) {\r\n    return await vscode.window.withProgress(\r\n      {\r\n        location: { viewId }\r\n      }, \r\n      async () => {\r\n        const result1 = await promise;\r\n        return result1;\r\n      }\r\n    );\r\n  }\r\n\r\n}","/**\n * web-streams-polyfill v3.2.1\n */\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n    typeof define === 'function' && define.amd ? define(['exports'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.WebStreamsPolyfill = {}));\n}(this, (function (exports) { 'use strict';\n\n    /// <reference lib=\"es2015.symbol\" />\n    const SymbolPolyfill = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ?\n        Symbol :\n        description => `Symbol(${description})`;\n\n    /// <reference lib=\"dom\" />\n    function noop() {\n        return undefined;\n    }\n    function getGlobals() {\n        if (typeof self !== 'undefined') {\n            return self;\n        }\n        else if (typeof window !== 'undefined') {\n            return window;\n        }\n        else if (typeof global !== 'undefined') {\n            return global;\n        }\n        return undefined;\n    }\n    const globals = getGlobals();\n\n    function typeIsObject(x) {\n        return (typeof x === 'object' && x !== null) || typeof x === 'function';\n    }\n    const rethrowAssertionErrorRejection = noop;\n\n    const originalPromise = Promise;\n    const originalPromiseThen = Promise.prototype.then;\n    const originalPromiseResolve = Promise.resolve.bind(originalPromise);\n    const originalPromiseReject = Promise.reject.bind(originalPromise);\n    function newPromise(executor) {\n        return new originalPromise(executor);\n    }\n    function promiseResolvedWith(value) {\n        return originalPromiseResolve(value);\n    }\n    function promiseRejectedWith(reason) {\n        return originalPromiseReject(reason);\n    }\n    function PerformPromiseThen(promise, onFulfilled, onRejected) {\n        // There doesn't appear to be any way to correctly emulate the behaviour from JavaScript, so this is just an\n        // approximation.\n        return originalPromiseThen.call(promise, onFulfilled, onRejected);\n    }\n    function uponPromise(promise, onFulfilled, onRejected) {\n        PerformPromiseThen(PerformPromiseThen(promise, onFulfilled, onRejected), undefined, rethrowAssertionErrorRejection);\n    }\n    function uponFulfillment(promise, onFulfilled) {\n        uponPromise(promise, onFulfilled);\n    }\n    function uponRejection(promise, onRejected) {\n        uponPromise(promise, undefined, onRejected);\n    }\n    function transformPromiseWith(promise, fulfillmentHandler, rejectionHandler) {\n        return PerformPromiseThen(promise, fulfillmentHandler, rejectionHandler);\n    }\n    function setPromiseIsHandledToTrue(promise) {\n        PerformPromiseThen(promise, undefined, rethrowAssertionErrorRejection);\n    }\n    const queueMicrotask = (() => {\n        const globalQueueMicrotask = globals && globals.queueMicrotask;\n        if (typeof globalQueueMicrotask === 'function') {\n            return globalQueueMicrotask;\n        }\n        const resolvedPromise = promiseResolvedWith(undefined);\n        return (fn) => PerformPromiseThen(resolvedPromise, fn);\n    })();\n    function reflectCall(F, V, args) {\n        if (typeof F !== 'function') {\n            throw new TypeError('Argument is not a function');\n        }\n        return Function.prototype.apply.call(F, V, args);\n    }\n    function promiseCall(F, V, args) {\n        try {\n            return promiseResolvedWith(reflectCall(F, V, args));\n        }\n        catch (value) {\n            return promiseRejectedWith(value);\n        }\n    }\n\n    // Original from Chromium\n    // https://chromium.googlesource.com/chromium/src/+/0aee4434a4dba42a42abaea9bfbc0cd196a63bc1/third_party/blink/renderer/core/streams/SimpleQueue.js\n    const QUEUE_MAX_ARRAY_SIZE = 16384;\n    /**\n     * Simple queue structure.\n     *\n     * Avoids scalability issues with using a packed array directly by using\n     * multiple arrays in a linked list and keeping the array size bounded.\n     */\n    class SimpleQueue {\n        constructor() {\n            this._cursor = 0;\n            this._size = 0;\n            // _front and _back are always defined.\n            this._front = {\n                _elements: [],\n                _next: undefined\n            };\n            this._back = this._front;\n            // The cursor is used to avoid calling Array.shift().\n            // It contains the index of the front element of the array inside the\n            // front-most node. It is always in the range [0, QUEUE_MAX_ARRAY_SIZE).\n            this._cursor = 0;\n            // When there is only one node, size === elements.length - cursor.\n            this._size = 0;\n        }\n        get length() {\n            return this._size;\n        }\n        // For exception safety, this method is structured in order:\n        // 1. Read state\n        // 2. Calculate required state mutations\n        // 3. Perform state mutations\n        push(element) {\n            const oldBack = this._back;\n            let newBack = oldBack;\n            if (oldBack._elements.length === QUEUE_MAX_ARRAY_SIZE - 1) {\n                newBack = {\n                    _elements: [],\n                    _next: undefined\n                };\n            }\n            // push() is the mutation most likely to throw an exception, so it\n            // goes first.\n            oldBack._elements.push(element);\n            if (newBack !== oldBack) {\n                this._back = newBack;\n                oldBack._next = newBack;\n            }\n            ++this._size;\n        }\n        // Like push(), shift() follows the read -> calculate -> mutate pattern for\n        // exception safety.\n        shift() { // must not be called on an empty queue\n            const oldFront = this._front;\n            let newFront = oldFront;\n            const oldCursor = this._cursor;\n            let newCursor = oldCursor + 1;\n            const elements = oldFront._elements;\n            const element = elements[oldCursor];\n            if (newCursor === QUEUE_MAX_ARRAY_SIZE) {\n                newFront = oldFront._next;\n                newCursor = 0;\n            }\n            // No mutations before this point.\n            --this._size;\n            this._cursor = newCursor;\n            if (oldFront !== newFront) {\n                this._front = newFront;\n            }\n            // Permit shifted element to be garbage collected.\n            elements[oldCursor] = undefined;\n            return element;\n        }\n        // The tricky thing about forEach() is that it can be called\n        // re-entrantly. The queue may be mutated inside the callback. It is easy to\n        // see that push() within the callback has no negative effects since the end\n        // of the queue is checked for on every iteration. If shift() is called\n        // repeatedly within the callback then the next iteration may return an\n        // element that has been removed. In this case the callback will be called\n        // with undefined values until we either \"catch up\" with elements that still\n        // exist or reach the back of the queue.\n        forEach(callback) {\n            let i = this._cursor;\n            let node = this._front;\n            let elements = node._elements;\n            while (i !== elements.length || node._next !== undefined) {\n                if (i === elements.length) {\n                    node = node._next;\n                    elements = node._elements;\n                    i = 0;\n                    if (elements.length === 0) {\n                        break;\n                    }\n                }\n                callback(elements[i]);\n                ++i;\n            }\n        }\n        // Return the element that would be returned if shift() was called now,\n        // without modifying the queue.\n        peek() { // must not be called on an empty queue\n            const front = this._front;\n            const cursor = this._cursor;\n            return front._elements[cursor];\n        }\n    }\n\n    function ReadableStreamReaderGenericInitialize(reader, stream) {\n        reader._ownerReadableStream = stream;\n        stream._reader = reader;\n        if (stream._state === 'readable') {\n            defaultReaderClosedPromiseInitialize(reader);\n        }\n        else if (stream._state === 'closed') {\n            defaultReaderClosedPromiseInitializeAsResolved(reader);\n        }\n        else {\n            defaultReaderClosedPromiseInitializeAsRejected(reader, stream._storedError);\n        }\n    }\n    // A client of ReadableStreamDefaultReader and ReadableStreamBYOBReader may use these functions directly to bypass state\n    // check.\n    function ReadableStreamReaderGenericCancel(reader, reason) {\n        const stream = reader._ownerReadableStream;\n        return ReadableStreamCancel(stream, reason);\n    }\n    function ReadableStreamReaderGenericRelease(reader) {\n        if (reader._ownerReadableStream._state === 'readable') {\n            defaultReaderClosedPromiseReject(reader, new TypeError(`Reader was released and can no longer be used to monitor the stream's closedness`));\n        }\n        else {\n            defaultReaderClosedPromiseResetToRejected(reader, new TypeError(`Reader was released and can no longer be used to monitor the stream's closedness`));\n        }\n        reader._ownerReadableStream._reader = undefined;\n        reader._ownerReadableStream = undefined;\n    }\n    // Helper functions for the readers.\n    function readerLockException(name) {\n        return new TypeError('Cannot ' + name + ' a stream using a released reader');\n    }\n    // Helper functions for the ReadableStreamDefaultReader.\n    function defaultReaderClosedPromiseInitialize(reader) {\n        reader._closedPromise = newPromise((resolve, reject) => {\n            reader._closedPromise_resolve = resolve;\n            reader._closedPromise_reject = reject;\n        });\n    }\n    function defaultReaderClosedPromiseInitializeAsRejected(reader, reason) {\n        defaultReaderClosedPromiseInitialize(reader);\n        defaultReaderClosedPromiseReject(reader, reason);\n    }\n    function defaultReaderClosedPromiseInitializeAsResolved(reader) {\n        defaultReaderClosedPromiseInitialize(reader);\n        defaultReaderClosedPromiseResolve(reader);\n    }\n    function defaultReaderClosedPromiseReject(reader, reason) {\n        if (reader._closedPromise_reject === undefined) {\n            return;\n        }\n        setPromiseIsHandledToTrue(reader._closedPromise);\n        reader._closedPromise_reject(reason);\n        reader._closedPromise_resolve = undefined;\n        reader._closedPromise_reject = undefined;\n    }\n    function defaultReaderClosedPromiseResetToRejected(reader, reason) {\n        defaultReaderClosedPromiseInitializeAsRejected(reader, reason);\n    }\n    function defaultReaderClosedPromiseResolve(reader) {\n        if (reader._closedPromise_resolve === undefined) {\n            return;\n        }\n        reader._closedPromise_resolve(undefined);\n        reader._closedPromise_resolve = undefined;\n        reader._closedPromise_reject = undefined;\n    }\n\n    const AbortSteps = SymbolPolyfill('[[AbortSteps]]');\n    const ErrorSteps = SymbolPolyfill('[[ErrorSteps]]');\n    const CancelSteps = SymbolPolyfill('[[CancelSteps]]');\n    const PullSteps = SymbolPolyfill('[[PullSteps]]');\n\n    /// <reference lib=\"es2015.core\" />\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isFinite#Polyfill\n    const NumberIsFinite = Number.isFinite || function (x) {\n        return typeof x === 'number' && isFinite(x);\n    };\n\n    /// <reference lib=\"es2015.core\" />\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/trunc#Polyfill\n    const MathTrunc = Math.trunc || function (v) {\n        return v < 0 ? Math.ceil(v) : Math.floor(v);\n    };\n\n    // https://heycam.github.io/webidl/#idl-dictionaries\n    function isDictionary(x) {\n        return typeof x === 'object' || typeof x === 'function';\n    }\n    function assertDictionary(obj, context) {\n        if (obj !== undefined && !isDictionary(obj)) {\n            throw new TypeError(`${context} is not an object.`);\n        }\n    }\n    // https://heycam.github.io/webidl/#idl-callback-functions\n    function assertFunction(x, context) {\n        if (typeof x !== 'function') {\n            throw new TypeError(`${context} is not a function.`);\n        }\n    }\n    // https://heycam.github.io/webidl/#idl-object\n    function isObject(x) {\n        return (typeof x === 'object' && x !== null) || typeof x === 'function';\n    }\n    function assertObject(x, context) {\n        if (!isObject(x)) {\n            throw new TypeError(`${context} is not an object.`);\n        }\n    }\n    function assertRequiredArgument(x, position, context) {\n        if (x === undefined) {\n            throw new TypeError(`Parameter ${position} is required in '${context}'.`);\n        }\n    }\n    function assertRequiredField(x, field, context) {\n        if (x === undefined) {\n            throw new TypeError(`${field} is required in '${context}'.`);\n        }\n    }\n    // https://heycam.github.io/webidl/#idl-unrestricted-double\n    function convertUnrestrictedDouble(value) {\n        return Number(value);\n    }\n    function censorNegativeZero(x) {\n        return x === 0 ? 0 : x;\n    }\n    function integerPart(x) {\n        return censorNegativeZero(MathTrunc(x));\n    }\n    // https://heycam.github.io/webidl/#idl-unsigned-long-long\n    function convertUnsignedLongLongWithEnforceRange(value, context) {\n        const lowerBound = 0;\n        const upperBound = Number.MAX_SAFE_INTEGER;\n        let x = Number(value);\n        x = censorNegativeZero(x);\n        if (!NumberIsFinite(x)) {\n            throw new TypeError(`${context} is not a finite number`);\n        }\n        x = integerPart(x);\n        if (x < lowerBound || x > upperBound) {\n            throw new TypeError(`${context} is outside the accepted range of ${lowerBound} to ${upperBound}, inclusive`);\n        }\n        if (!NumberIsFinite(x) || x === 0) {\n            return 0;\n        }\n        // TODO Use BigInt if supported?\n        // let xBigInt = BigInt(integerPart(x));\n        // xBigInt = BigInt.asUintN(64, xBigInt);\n        // return Number(xBigInt);\n        return x;\n    }\n\n    function assertReadableStream(x, context) {\n        if (!IsReadableStream(x)) {\n            throw new TypeError(`${context} is not a ReadableStream.`);\n        }\n    }\n\n    // Abstract operations for the ReadableStream.\n    function AcquireReadableStreamDefaultReader(stream) {\n        return new ReadableStreamDefaultReader(stream);\n    }\n    // ReadableStream API exposed for controllers.\n    function ReadableStreamAddReadRequest(stream, readRequest) {\n        stream._reader._readRequests.push(readRequest);\n    }\n    function ReadableStreamFulfillReadRequest(stream, chunk, done) {\n        const reader = stream._reader;\n        const readRequest = reader._readRequests.shift();\n        if (done) {\n            readRequest._closeSteps();\n        }\n        else {\n            readRequest._chunkSteps(chunk);\n        }\n    }\n    function ReadableStreamGetNumReadRequests(stream) {\n        return stream._reader._readRequests.length;\n    }\n    function ReadableStreamHasDefaultReader(stream) {\n        const reader = stream._reader;\n        if (reader === undefined) {\n            return false;\n        }\n        if (!IsReadableStreamDefaultReader(reader)) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * A default reader vended by a {@link ReadableStream}.\n     *\n     * @public\n     */\n    class ReadableStreamDefaultReader {\n        constructor(stream) {\n            assertRequiredArgument(stream, 1, 'ReadableStreamDefaultReader');\n            assertReadableStream(stream, 'First parameter');\n            if (IsReadableStreamLocked(stream)) {\n                throw new TypeError('This stream has already been locked for exclusive reading by another reader');\n            }\n            ReadableStreamReaderGenericInitialize(this, stream);\n            this._readRequests = new SimpleQueue();\n        }\n        /**\n         * Returns a promise that will be fulfilled when the stream becomes closed,\n         * or rejected if the stream ever errors or the reader's lock is released before the stream finishes closing.\n         */\n        get closed() {\n            if (!IsReadableStreamDefaultReader(this)) {\n                return promiseRejectedWith(defaultReaderBrandCheckException('closed'));\n            }\n            return this._closedPromise;\n        }\n        /**\n         * If the reader is active, behaves the same as {@link ReadableStream.cancel | stream.cancel(reason)}.\n         */\n        cancel(reason = undefined) {\n            if (!IsReadableStreamDefaultReader(this)) {\n                return promiseRejectedWith(defaultReaderBrandCheckException('cancel'));\n            }\n            if (this._ownerReadableStream === undefined) {\n                return promiseRejectedWith(readerLockException('cancel'));\n            }\n            return ReadableStreamReaderGenericCancel(this, reason);\n        }\n        /**\n         * Returns a promise that allows access to the next chunk from the stream's internal queue, if available.\n         *\n         * If reading a chunk causes the queue to become empty, more data will be pulled from the underlying source.\n         */\n        read() {\n            if (!IsReadableStreamDefaultReader(this)) {\n                return promiseRejectedWith(defaultReaderBrandCheckException('read'));\n            }\n            if (this._ownerReadableStream === undefined) {\n                return promiseRejectedWith(readerLockException('read from'));\n            }\n            let resolvePromise;\n            let rejectPromise;\n            const promise = newPromise((resolve, reject) => {\n                resolvePromise = resolve;\n                rejectPromise = reject;\n            });\n            const readRequest = {\n                _chunkSteps: chunk => resolvePromise({ value: chunk, done: false }),\n                _closeSteps: () => resolvePromise({ value: undefined, done: true }),\n                _errorSteps: e => rejectPromise(e)\n            };\n            ReadableStreamDefaultReaderRead(this, readRequest);\n            return promise;\n        }\n        /**\n         * Releases the reader's lock on the corresponding stream. After the lock is released, the reader is no longer active.\n         * If the associated stream is errored when the lock is released, the reader will appear errored in the same way\n         * from now on; otherwise, the reader will appear closed.\n         *\n         * A reader's lock cannot be released while it still has a pending read request, i.e., if a promise returned by\n         * the reader's {@link ReadableStreamDefaultReader.read | read()} method has not yet been settled. Attempting to\n         * do so will throw a `TypeError` and leave the reader locked to the stream.\n         */\n        releaseLock() {\n            if (!IsReadableStreamDefaultReader(this)) {\n                throw defaultReaderBrandCheckException('releaseLock');\n            }\n            if (this._ownerReadableStream === undefined) {\n                return;\n            }\n            if (this._readRequests.length > 0) {\n                throw new TypeError('Tried to release a reader lock when that reader has pending read() calls un-settled');\n            }\n            ReadableStreamReaderGenericRelease(this);\n        }\n    }\n    Object.defineProperties(ReadableStreamDefaultReader.prototype, {\n        cancel: { enumerable: true },\n        read: { enumerable: true },\n        releaseLock: { enumerable: true },\n        closed: { enumerable: true }\n    });\n    if (typeof SymbolPolyfill.toStringTag === 'symbol') {\n        Object.defineProperty(ReadableStreamDefaultReader.prototype, SymbolPolyfill.toStringTag, {\n            value: 'ReadableStreamDefaultReader',\n            configurable: true\n        });\n    }\n    // Abstract operations for the readers.\n    function IsReadableStreamDefaultReader(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_readRequests')) {\n            return false;\n        }\n        return x instanceof ReadableStreamDefaultReader;\n    }\n    function ReadableStreamDefaultReaderRead(reader, readRequest) {\n        const stream = reader._ownerReadableStream;\n        stream._disturbed = true;\n        if (stream._state === 'closed') {\n            readRequest._closeSteps();\n        }\n        else if (stream._state === 'errored') {\n            readRequest._errorSteps(stream._storedError);\n        }\n        else {\n            stream._readableStreamController[PullSteps](readRequest);\n        }\n    }\n    // Helper functions for the ReadableStreamDefaultReader.\n    function defaultReaderBrandCheckException(name) {\n        return new TypeError(`ReadableStreamDefaultReader.prototype.${name} can only be used on a ReadableStreamDefaultReader`);\n    }\n\n    /// <reference lib=\"es2018.asynciterable\" />\n    /* eslint-disable @typescript-eslint/no-empty-function */\n    const AsyncIteratorPrototype = Object.getPrototypeOf(Object.getPrototypeOf(async function* () { }).prototype);\n\n    /// <reference lib=\"es2018.asynciterable\" />\n    class ReadableStreamAsyncIteratorImpl {\n        constructor(reader, preventCancel) {\n            this._ongoingPromise = undefined;\n            this._isFinished = false;\n            this._reader = reader;\n            this._preventCancel = preventCancel;\n        }\n        next() {\n            const nextSteps = () => this._nextSteps();\n            this._ongoingPromise = this._ongoingPromise ?\n                transformPromiseWith(this._ongoingPromise, nextSteps, nextSteps) :\n                nextSteps();\n            return this._ongoingPromise;\n        }\n        return(value) {\n            const returnSteps = () => this._returnSteps(value);\n            return this._ongoingPromise ?\n                transformPromiseWith(this._ongoingPromise, returnSteps, returnSteps) :\n                returnSteps();\n        }\n        _nextSteps() {\n            if (this._isFinished) {\n                return Promise.resolve({ value: undefined, done: true });\n            }\n            const reader = this._reader;\n            if (reader._ownerReadableStream === undefined) {\n                return promiseRejectedWith(readerLockException('iterate'));\n            }\n            let resolvePromise;\n            let rejectPromise;\n            const promise = newPromise((resolve, reject) => {\n                resolvePromise = resolve;\n                rejectPromise = reject;\n            });\n            const readRequest = {\n                _chunkSteps: chunk => {\n                    this._ongoingPromise = undefined;\n                    // This needs to be delayed by one microtask, otherwise we stop pulling too early which breaks a test.\n                    // FIXME Is this a bug in the specification, or in the test?\n                    queueMicrotask(() => resolvePromise({ value: chunk, done: false }));\n                },\n                _closeSteps: () => {\n                    this._ongoingPromise = undefined;\n                    this._isFinished = true;\n                    ReadableStreamReaderGenericRelease(reader);\n                    resolvePromise({ value: undefined, done: true });\n                },\n                _errorSteps: reason => {\n                    this._ongoingPromise = undefined;\n                    this._isFinished = true;\n                    ReadableStreamReaderGenericRelease(reader);\n                    rejectPromise(reason);\n                }\n            };\n            ReadableStreamDefaultReaderRead(reader, readRequest);\n            return promise;\n        }\n        _returnSteps(value) {\n            if (this._isFinished) {\n                return Promise.resolve({ value, done: true });\n            }\n            this._isFinished = true;\n            const reader = this._reader;\n            if (reader._ownerReadableStream === undefined) {\n                return promiseRejectedWith(readerLockException('finish iterating'));\n            }\n            if (!this._preventCancel) {\n                const result = ReadableStreamReaderGenericCancel(reader, value);\n                ReadableStreamReaderGenericRelease(reader);\n                return transformPromiseWith(result, () => ({ value, done: true }));\n            }\n            ReadableStreamReaderGenericRelease(reader);\n            return promiseResolvedWith({ value, done: true });\n        }\n    }\n    const ReadableStreamAsyncIteratorPrototype = {\n        next() {\n            if (!IsReadableStreamAsyncIterator(this)) {\n                return promiseRejectedWith(streamAsyncIteratorBrandCheckException('next'));\n            }\n            return this._asyncIteratorImpl.next();\n        },\n        return(value) {\n            if (!IsReadableStreamAsyncIterator(this)) {\n                return promiseRejectedWith(streamAsyncIteratorBrandCheckException('return'));\n            }\n            return this._asyncIteratorImpl.return(value);\n        }\n    };\n    if (AsyncIteratorPrototype !== undefined) {\n        Object.setPrototypeOf(ReadableStreamAsyncIteratorPrototype, AsyncIteratorPrototype);\n    }\n    // Abstract operations for the ReadableStream.\n    function AcquireReadableStreamAsyncIterator(stream, preventCancel) {\n        const reader = AcquireReadableStreamDefaultReader(stream);\n        const impl = new ReadableStreamAsyncIteratorImpl(reader, preventCancel);\n        const iterator = Object.create(ReadableStreamAsyncIteratorPrototype);\n        iterator._asyncIteratorImpl = impl;\n        return iterator;\n    }\n    function IsReadableStreamAsyncIterator(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_asyncIteratorImpl')) {\n            return false;\n        }\n        try {\n            // noinspection SuspiciousTypeOfGuard\n            return x._asyncIteratorImpl instanceof\n                ReadableStreamAsyncIteratorImpl;\n        }\n        catch (_a) {\n            return false;\n        }\n    }\n    // Helper functions for the ReadableStream.\n    function streamAsyncIteratorBrandCheckException(name) {\n        return new TypeError(`ReadableStreamAsyncIterator.${name} can only be used on a ReadableSteamAsyncIterator`);\n    }\n\n    /// <reference lib=\"es2015.core\" />\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isNaN#Polyfill\n    const NumberIsNaN = Number.isNaN || function (x) {\n        // eslint-disable-next-line no-self-compare\n        return x !== x;\n    };\n\n    function CreateArrayFromList(elements) {\n        // We use arrays to represent lists, so this is basically a no-op.\n        // Do a slice though just in case we happen to depend on the unique-ness.\n        return elements.slice();\n    }\n    function CopyDataBlockBytes(dest, destOffset, src, srcOffset, n) {\n        new Uint8Array(dest).set(new Uint8Array(src, srcOffset, n), destOffset);\n    }\n    // Not implemented correctly\n    function TransferArrayBuffer(O) {\n        return O;\n    }\n    // Not implemented correctly\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    function IsDetachedBuffer(O) {\n        return false;\n    }\n    function ArrayBufferSlice(buffer, begin, end) {\n        // ArrayBuffer.prototype.slice is not available on IE10\n        // https://www.caniuse.com/mdn-javascript_builtins_arraybuffer_slice\n        if (buffer.slice) {\n            return buffer.slice(begin, end);\n        }\n        const length = end - begin;\n        const slice = new ArrayBuffer(length);\n        CopyDataBlockBytes(slice, 0, buffer, begin, length);\n        return slice;\n    }\n\n    function IsNonNegativeNumber(v) {\n        if (typeof v !== 'number') {\n            return false;\n        }\n        if (NumberIsNaN(v)) {\n            return false;\n        }\n        if (v < 0) {\n            return false;\n        }\n        return true;\n    }\n    function CloneAsUint8Array(O) {\n        const buffer = ArrayBufferSlice(O.buffer, O.byteOffset, O.byteOffset + O.byteLength);\n        return new Uint8Array(buffer);\n    }\n\n    function DequeueValue(container) {\n        const pair = container._queue.shift();\n        container._queueTotalSize -= pair.size;\n        if (container._queueTotalSize < 0) {\n            container._queueTotalSize = 0;\n        }\n        return pair.value;\n    }\n    function EnqueueValueWithSize(container, value, size) {\n        if (!IsNonNegativeNumber(size) || size === Infinity) {\n            throw new RangeError('Size must be a finite, non-NaN, non-negative number.');\n        }\n        container._queue.push({ value, size });\n        container._queueTotalSize += size;\n    }\n    function PeekQueueValue(container) {\n        const pair = container._queue.peek();\n        return pair.value;\n    }\n    function ResetQueue(container) {\n        container._queue = new SimpleQueue();\n        container._queueTotalSize = 0;\n    }\n\n    /**\n     * A pull-into request in a {@link ReadableByteStreamController}.\n     *\n     * @public\n     */\n    class ReadableStreamBYOBRequest {\n        constructor() {\n            throw new TypeError('Illegal constructor');\n        }\n        /**\n         * Returns the view for writing in to, or `null` if the BYOB request has already been responded to.\n         */\n        get view() {\n            if (!IsReadableStreamBYOBRequest(this)) {\n                throw byobRequestBrandCheckException('view');\n            }\n            return this._view;\n        }\n        respond(bytesWritten) {\n            if (!IsReadableStreamBYOBRequest(this)) {\n                throw byobRequestBrandCheckException('respond');\n            }\n            assertRequiredArgument(bytesWritten, 1, 'respond');\n            bytesWritten = convertUnsignedLongLongWithEnforceRange(bytesWritten, 'First parameter');\n            if (this._associatedReadableByteStreamController === undefined) {\n                throw new TypeError('This BYOB request has been invalidated');\n            }\n            if (IsDetachedBuffer(this._view.buffer)) ;\n            ReadableByteStreamControllerRespond(this._associatedReadableByteStreamController, bytesWritten);\n        }\n        respondWithNewView(view) {\n            if (!IsReadableStreamBYOBRequest(this)) {\n                throw byobRequestBrandCheckException('respondWithNewView');\n            }\n            assertRequiredArgument(view, 1, 'respondWithNewView');\n            if (!ArrayBuffer.isView(view)) {\n                throw new TypeError('You can only respond with array buffer views');\n            }\n            if (this._associatedReadableByteStreamController === undefined) {\n                throw new TypeError('This BYOB request has been invalidated');\n            }\n            if (IsDetachedBuffer(view.buffer)) ;\n            ReadableByteStreamControllerRespondWithNewView(this._associatedReadableByteStreamController, view);\n        }\n    }\n    Object.defineProperties(ReadableStreamBYOBRequest.prototype, {\n        respond: { enumerable: true },\n        respondWithNewView: { enumerable: true },\n        view: { enumerable: true }\n    });\n    if (typeof SymbolPolyfill.toStringTag === 'symbol') {\n        Object.defineProperty(ReadableStreamBYOBRequest.prototype, SymbolPolyfill.toStringTag, {\n            value: 'ReadableStreamBYOBRequest',\n            configurable: true\n        });\n    }\n    /**\n     * Allows control of a {@link ReadableStream | readable byte stream}'s state and internal queue.\n     *\n     * @public\n     */\n    class ReadableByteStreamController {\n        constructor() {\n            throw new TypeError('Illegal constructor');\n        }\n        /**\n         * Returns the current BYOB pull request, or `null` if there isn't one.\n         */\n        get byobRequest() {\n            if (!IsReadableByteStreamController(this)) {\n                throw byteStreamControllerBrandCheckException('byobRequest');\n            }\n            return ReadableByteStreamControllerGetBYOBRequest(this);\n        }\n        /**\n         * Returns the desired size to fill the controlled stream's internal queue. It can be negative, if the queue is\n         * over-full. An underlying byte source ought to use this information to determine when and how to apply backpressure.\n         */\n        get desiredSize() {\n            if (!IsReadableByteStreamController(this)) {\n                throw byteStreamControllerBrandCheckException('desiredSize');\n            }\n            return ReadableByteStreamControllerGetDesiredSize(this);\n        }\n        /**\n         * Closes the controlled readable stream. Consumers will still be able to read any previously-enqueued chunks from\n         * the stream, but once those are read, the stream will become closed.\n         */\n        close() {\n            if (!IsReadableByteStreamController(this)) {\n                throw byteStreamControllerBrandCheckException('close');\n            }\n            if (this._closeRequested) {\n                throw new TypeError('The stream has already been closed; do not close it again!');\n            }\n            const state = this._controlledReadableByteStream._state;\n            if (state !== 'readable') {\n                throw new TypeError(`The stream (in ${state} state) is not in the readable state and cannot be closed`);\n            }\n            ReadableByteStreamControllerClose(this);\n        }\n        enqueue(chunk) {\n            if (!IsReadableByteStreamController(this)) {\n                throw byteStreamControllerBrandCheckException('enqueue');\n            }\n            assertRequiredArgument(chunk, 1, 'enqueue');\n            if (!ArrayBuffer.isView(chunk)) {\n                throw new TypeError('chunk must be an array buffer view');\n            }\n            if (chunk.byteLength === 0) {\n                throw new TypeError('chunk must have non-zero byteLength');\n            }\n            if (chunk.buffer.byteLength === 0) {\n                throw new TypeError(`chunk's buffer must have non-zero byteLength`);\n            }\n            if (this._closeRequested) {\n                throw new TypeError('stream is closed or draining');\n            }\n            const state = this._controlledReadableByteStream._state;\n            if (state !== 'readable') {\n                throw new TypeError(`The stream (in ${state} state) is not in the readable state and cannot be enqueued to`);\n            }\n            ReadableByteStreamControllerEnqueue(this, chunk);\n        }\n        /**\n         * Errors the controlled readable stream, making all future interactions with it fail with the given error `e`.\n         */\n        error(e = undefined) {\n            if (!IsReadableByteStreamController(this)) {\n                throw byteStreamControllerBrandCheckException('error');\n            }\n            ReadableByteStreamControllerError(this, e);\n        }\n        /** @internal */\n        [CancelSteps](reason) {\n            ReadableByteStreamControllerClearPendingPullIntos(this);\n            ResetQueue(this);\n            const result = this._cancelAlgorithm(reason);\n            ReadableByteStreamControllerClearAlgorithms(this);\n            return result;\n        }\n        /** @internal */\n        [PullSteps](readRequest) {\n            const stream = this._controlledReadableByteStream;\n            if (this._queueTotalSize > 0) {\n                const entry = this._queue.shift();\n                this._queueTotalSize -= entry.byteLength;\n                ReadableByteStreamControllerHandleQueueDrain(this);\n                const view = new Uint8Array(entry.buffer, entry.byteOffset, entry.byteLength);\n                readRequest._chunkSteps(view);\n                return;\n            }\n            const autoAllocateChunkSize = this._autoAllocateChunkSize;\n            if (autoAllocateChunkSize !== undefined) {\n                let buffer;\n                try {\n                    buffer = new ArrayBuffer(autoAllocateChunkSize);\n                }\n                catch (bufferE) {\n                    readRequest._errorSteps(bufferE);\n                    return;\n                }\n                const pullIntoDescriptor = {\n                    buffer,\n                    bufferByteLength: autoAllocateChunkSize,\n                    byteOffset: 0,\n                    byteLength: autoAllocateChunkSize,\n                    bytesFilled: 0,\n                    elementSize: 1,\n                    viewConstructor: Uint8Array,\n                    readerType: 'default'\n                };\n                this._pendingPullIntos.push(pullIntoDescriptor);\n            }\n            ReadableStreamAddReadRequest(stream, readRequest);\n            ReadableByteStreamControllerCallPullIfNeeded(this);\n        }\n    }\n    Object.defineProperties(ReadableByteStreamController.prototype, {\n        close: { enumerable: true },\n        enqueue: { enumerable: true },\n        error: { enumerable: true },\n        byobRequest: { enumerable: true },\n        desiredSize: { enumerable: true }\n    });\n    if (typeof SymbolPolyfill.toStringTag === 'symbol') {\n        Object.defineProperty(ReadableByteStreamController.prototype, SymbolPolyfill.toStringTag, {\n            value: 'ReadableByteStreamController',\n            configurable: true\n        });\n    }\n    // Abstract operations for the ReadableByteStreamController.\n    function IsReadableByteStreamController(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_controlledReadableByteStream')) {\n            return false;\n        }\n        return x instanceof ReadableByteStreamController;\n    }\n    function IsReadableStreamBYOBRequest(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_associatedReadableByteStreamController')) {\n            return false;\n        }\n        return x instanceof ReadableStreamBYOBRequest;\n    }\n    function ReadableByteStreamControllerCallPullIfNeeded(controller) {\n        const shouldPull = ReadableByteStreamControllerShouldCallPull(controller);\n        if (!shouldPull) {\n            return;\n        }\n        if (controller._pulling) {\n            controller._pullAgain = true;\n            return;\n        }\n        controller._pulling = true;\n        // TODO: Test controller argument\n        const pullPromise = controller._pullAlgorithm();\n        uponPromise(pullPromise, () => {\n            controller._pulling = false;\n            if (controller._pullAgain) {\n                controller._pullAgain = false;\n                ReadableByteStreamControllerCallPullIfNeeded(controller);\n            }\n        }, e => {\n            ReadableByteStreamControllerError(controller, e);\n        });\n    }\n    function ReadableByteStreamControllerClearPendingPullIntos(controller) {\n        ReadableByteStreamControllerInvalidateBYOBRequest(controller);\n        controller._pendingPullIntos = new SimpleQueue();\n    }\n    function ReadableByteStreamControllerCommitPullIntoDescriptor(stream, pullIntoDescriptor) {\n        let done = false;\n        if (stream._state === 'closed') {\n            done = true;\n        }\n        const filledView = ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor);\n        if (pullIntoDescriptor.readerType === 'default') {\n            ReadableStreamFulfillReadRequest(stream, filledView, done);\n        }\n        else {\n            ReadableStreamFulfillReadIntoRequest(stream, filledView, done);\n        }\n    }\n    function ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor) {\n        const bytesFilled = pullIntoDescriptor.bytesFilled;\n        const elementSize = pullIntoDescriptor.elementSize;\n        return new pullIntoDescriptor.viewConstructor(pullIntoDescriptor.buffer, pullIntoDescriptor.byteOffset, bytesFilled / elementSize);\n    }\n    function ReadableByteStreamControllerEnqueueChunkToQueue(controller, buffer, byteOffset, byteLength) {\n        controller._queue.push({ buffer, byteOffset, byteLength });\n        controller._queueTotalSize += byteLength;\n    }\n    function ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor) {\n        const elementSize = pullIntoDescriptor.elementSize;\n        const currentAlignedBytes = pullIntoDescriptor.bytesFilled - pullIntoDescriptor.bytesFilled % elementSize;\n        const maxBytesToCopy = Math.min(controller._queueTotalSize, pullIntoDescriptor.byteLength - pullIntoDescriptor.bytesFilled);\n        const maxBytesFilled = pullIntoDescriptor.bytesFilled + maxBytesToCopy;\n        const maxAlignedBytes = maxBytesFilled - maxBytesFilled % elementSize;\n        let totalBytesToCopyRemaining = maxBytesToCopy;\n        let ready = false;\n        if (maxAlignedBytes > currentAlignedBytes) {\n            totalBytesToCopyRemaining = maxAlignedBytes - pullIntoDescriptor.bytesFilled;\n            ready = true;\n        }\n        const queue = controller._queue;\n        while (totalBytesToCopyRemaining > 0) {\n            const headOfQueue = queue.peek();\n            const bytesToCopy = Math.min(totalBytesToCopyRemaining, headOfQueue.byteLength);\n            const destStart = pullIntoDescriptor.byteOffset + pullIntoDescriptor.bytesFilled;\n            CopyDataBlockBytes(pullIntoDescriptor.buffer, destStart, headOfQueue.buffer, headOfQueue.byteOffset, bytesToCopy);\n            if (headOfQueue.byteLength === bytesToCopy) {\n                queue.shift();\n            }\n            else {\n                headOfQueue.byteOffset += bytesToCopy;\n                headOfQueue.byteLength -= bytesToCopy;\n            }\n            controller._queueTotalSize -= bytesToCopy;\n            ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, bytesToCopy, pullIntoDescriptor);\n            totalBytesToCopyRemaining -= bytesToCopy;\n        }\n        return ready;\n    }\n    function ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, size, pullIntoDescriptor) {\n        pullIntoDescriptor.bytesFilled += size;\n    }\n    function ReadableByteStreamControllerHandleQueueDrain(controller) {\n        if (controller._queueTotalSize === 0 && controller._closeRequested) {\n            ReadableByteStreamControllerClearAlgorithms(controller);\n            ReadableStreamClose(controller._controlledReadableByteStream);\n        }\n        else {\n            ReadableByteStreamControllerCallPullIfNeeded(controller);\n        }\n    }\n    function ReadableByteStreamControllerInvalidateBYOBRequest(controller) {\n        if (controller._byobRequest === null) {\n            return;\n        }\n        controller._byobRequest._associatedReadableByteStreamController = undefined;\n        controller._byobRequest._view = null;\n        controller._byobRequest = null;\n    }\n    function ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller) {\n        while (controller._pendingPullIntos.length > 0) {\n            if (controller._queueTotalSize === 0) {\n                return;\n            }\n            const pullIntoDescriptor = controller._pendingPullIntos.peek();\n            if (ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor)) {\n                ReadableByteStreamControllerShiftPendingPullInto(controller);\n                ReadableByteStreamControllerCommitPullIntoDescriptor(controller._controlledReadableByteStream, pullIntoDescriptor);\n            }\n        }\n    }\n    function ReadableByteStreamControllerPullInto(controller, view, readIntoRequest) {\n        const stream = controller._controlledReadableByteStream;\n        let elementSize = 1;\n        if (view.constructor !== DataView) {\n            elementSize = view.constructor.BYTES_PER_ELEMENT;\n        }\n        const ctor = view.constructor;\n        // try {\n        const buffer = TransferArrayBuffer(view.buffer);\n        // } catch (e) {\n        //   readIntoRequest._errorSteps(e);\n        //   return;\n        // }\n        const pullIntoDescriptor = {\n            buffer,\n            bufferByteLength: buffer.byteLength,\n            byteOffset: view.byteOffset,\n            byteLength: view.byteLength,\n            bytesFilled: 0,\n            elementSize,\n            viewConstructor: ctor,\n            readerType: 'byob'\n        };\n        if (controller._pendingPullIntos.length > 0) {\n            controller._pendingPullIntos.push(pullIntoDescriptor);\n            // No ReadableByteStreamControllerCallPullIfNeeded() call since:\n            // - No change happens on desiredSize\n            // - The source has already been notified of that there's at least 1 pending read(view)\n            ReadableStreamAddReadIntoRequest(stream, readIntoRequest);\n            return;\n        }\n        if (stream._state === 'closed') {\n            const emptyView = new ctor(pullIntoDescriptor.buffer, pullIntoDescriptor.byteOffset, 0);\n            readIntoRequest._closeSteps(emptyView);\n            return;\n        }\n        if (controller._queueTotalSize > 0) {\n            if (ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor)) {\n                const filledView = ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor);\n                ReadableByteStreamControllerHandleQueueDrain(controller);\n                readIntoRequest._chunkSteps(filledView);\n                return;\n            }\n            if (controller._closeRequested) {\n                const e = new TypeError('Insufficient bytes to fill elements in the given buffer');\n                ReadableByteStreamControllerError(controller, e);\n                readIntoRequest._errorSteps(e);\n                return;\n            }\n        }\n        controller._pendingPullIntos.push(pullIntoDescriptor);\n        ReadableStreamAddReadIntoRequest(stream, readIntoRequest);\n        ReadableByteStreamControllerCallPullIfNeeded(controller);\n    }\n    function ReadableByteStreamControllerRespondInClosedState(controller, firstDescriptor) {\n        const stream = controller._controlledReadableByteStream;\n        if (ReadableStreamHasBYOBReader(stream)) {\n            while (ReadableStreamGetNumReadIntoRequests(stream) > 0) {\n                const pullIntoDescriptor = ReadableByteStreamControllerShiftPendingPullInto(controller);\n                ReadableByteStreamControllerCommitPullIntoDescriptor(stream, pullIntoDescriptor);\n            }\n        }\n    }\n    function ReadableByteStreamControllerRespondInReadableState(controller, bytesWritten, pullIntoDescriptor) {\n        ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, bytesWritten, pullIntoDescriptor);\n        if (pullIntoDescriptor.bytesFilled < pullIntoDescriptor.elementSize) {\n            return;\n        }\n        ReadableByteStreamControllerShiftPendingPullInto(controller);\n        const remainderSize = pullIntoDescriptor.bytesFilled % pullIntoDescriptor.elementSize;\n        if (remainderSize > 0) {\n            const end = pullIntoDescriptor.byteOffset + pullIntoDescriptor.bytesFilled;\n            const remainder = ArrayBufferSlice(pullIntoDescriptor.buffer, end - remainderSize, end);\n            ReadableByteStreamControllerEnqueueChunkToQueue(controller, remainder, 0, remainder.byteLength);\n        }\n        pullIntoDescriptor.bytesFilled -= remainderSize;\n        ReadableByteStreamControllerCommitPullIntoDescriptor(controller._controlledReadableByteStream, pullIntoDescriptor);\n        ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller);\n    }\n    function ReadableByteStreamControllerRespondInternal(controller, bytesWritten) {\n        const firstDescriptor = controller._pendingPullIntos.peek();\n        ReadableByteStreamControllerInvalidateBYOBRequest(controller);\n        const state = controller._controlledReadableByteStream._state;\n        if (state === 'closed') {\n            ReadableByteStreamControllerRespondInClosedState(controller);\n        }\n        else {\n            ReadableByteStreamControllerRespondInReadableState(controller, bytesWritten, firstDescriptor);\n        }\n        ReadableByteStreamControllerCallPullIfNeeded(controller);\n    }\n    function ReadableByteStreamControllerShiftPendingPullInto(controller) {\n        const descriptor = controller._pendingPullIntos.shift();\n        return descriptor;\n    }\n    function ReadableByteStreamControllerShouldCallPull(controller) {\n        const stream = controller._controlledReadableByteStream;\n        if (stream._state !== 'readable') {\n            return false;\n        }\n        if (controller._closeRequested) {\n            return false;\n        }\n        if (!controller._started) {\n            return false;\n        }\n        if (ReadableStreamHasDefaultReader(stream) && ReadableStreamGetNumReadRequests(stream) > 0) {\n            return true;\n        }\n        if (ReadableStreamHasBYOBReader(stream) && ReadableStreamGetNumReadIntoRequests(stream) > 0) {\n            return true;\n        }\n        const desiredSize = ReadableByteStreamControllerGetDesiredSize(controller);\n        if (desiredSize > 0) {\n            return true;\n        }\n        return false;\n    }\n    function ReadableByteStreamControllerClearAlgorithms(controller) {\n        controller._pullAlgorithm = undefined;\n        controller._cancelAlgorithm = undefined;\n    }\n    // A client of ReadableByteStreamController may use these functions directly to bypass state check.\n    function ReadableByteStreamControllerClose(controller) {\n        const stream = controller._controlledReadableByteStream;\n        if (controller._closeRequested || stream._state !== 'readable') {\n            return;\n        }\n        if (controller._queueTotalSize > 0) {\n            controller._closeRequested = true;\n            return;\n        }\n        if (controller._pendingPullIntos.length > 0) {\n            const firstPendingPullInto = controller._pendingPullIntos.peek();\n            if (firstPendingPullInto.bytesFilled > 0) {\n                const e = new TypeError('Insufficient bytes to fill elements in the given buffer');\n                ReadableByteStreamControllerError(controller, e);\n                throw e;\n            }\n        }\n        ReadableByteStreamControllerClearAlgorithms(controller);\n        ReadableStreamClose(stream);\n    }\n    function ReadableByteStreamControllerEnqueue(controller, chunk) {\n        const stream = controller._controlledReadableByteStream;\n        if (controller._closeRequested || stream._state !== 'readable') {\n            return;\n        }\n        const buffer = chunk.buffer;\n        const byteOffset = chunk.byteOffset;\n        const byteLength = chunk.byteLength;\n        const transferredBuffer = TransferArrayBuffer(buffer);\n        if (controller._pendingPullIntos.length > 0) {\n            const firstPendingPullInto = controller._pendingPullIntos.peek();\n            if (IsDetachedBuffer(firstPendingPullInto.buffer)) ;\n            firstPendingPullInto.buffer = TransferArrayBuffer(firstPendingPullInto.buffer);\n        }\n        ReadableByteStreamControllerInvalidateBYOBRequest(controller);\n        if (ReadableStreamHasDefaultReader(stream)) {\n            if (ReadableStreamGetNumReadRequests(stream) === 0) {\n                ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\n            }\n            else {\n                if (controller._pendingPullIntos.length > 0) {\n                    ReadableByteStreamControllerShiftPendingPullInto(controller);\n                }\n                const transferredView = new Uint8Array(transferredBuffer, byteOffset, byteLength);\n                ReadableStreamFulfillReadRequest(stream, transferredView, false);\n            }\n        }\n        else if (ReadableStreamHasBYOBReader(stream)) {\n            // TODO: Ideally in this branch detaching should happen only if the buffer is not consumed fully.\n            ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\n            ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller);\n        }\n        else {\n            ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\n        }\n        ReadableByteStreamControllerCallPullIfNeeded(controller);\n    }\n    function ReadableByteStreamControllerError(controller, e) {\n        const stream = controller._controlledReadableByteStream;\n        if (stream._state !== 'readable') {\n            return;\n        }\n        ReadableByteStreamControllerClearPendingPullIntos(controller);\n        ResetQueue(controller);\n        ReadableByteStreamControllerClearAlgorithms(controller);\n        ReadableStreamError(stream, e);\n    }\n    function ReadableByteStreamControllerGetBYOBRequest(controller) {\n        if (controller._byobRequest === null && controller._pendingPullIntos.length > 0) {\n            const firstDescriptor = controller._pendingPullIntos.peek();\n            const view = new Uint8Array(firstDescriptor.buffer, firstDescriptor.byteOffset + firstDescriptor.bytesFilled, firstDescriptor.byteLength - firstDescriptor.bytesFilled);\n            const byobRequest = Object.create(ReadableStreamBYOBRequest.prototype);\n            SetUpReadableStreamBYOBRequest(byobRequest, controller, view);\n            controller._byobRequest = byobRequest;\n        }\n        return controller._byobRequest;\n    }\n    function ReadableByteStreamControllerGetDesiredSize(controller) {\n        const state = controller._controlledReadableByteStream._state;\n        if (state === 'errored') {\n            return null;\n        }\n        if (state === 'closed') {\n            return 0;\n        }\n        return controller._strategyHWM - controller._queueTotalSize;\n    }\n    function ReadableByteStreamControllerRespond(controller, bytesWritten) {\n        const firstDescriptor = controller._pendingPullIntos.peek();\n        const state = controller._controlledReadableByteStream._state;\n        if (state === 'closed') {\n            if (bytesWritten !== 0) {\n                throw new TypeError('bytesWritten must be 0 when calling respond() on a closed stream');\n            }\n        }\n        else {\n            if (bytesWritten === 0) {\n                throw new TypeError('bytesWritten must be greater than 0 when calling respond() on a readable stream');\n            }\n            if (firstDescriptor.bytesFilled + bytesWritten > firstDescriptor.byteLength) {\n                throw new RangeError('bytesWritten out of range');\n            }\n        }\n        firstDescriptor.buffer = TransferArrayBuffer(firstDescriptor.buffer);\n        ReadableByteStreamControllerRespondInternal(controller, bytesWritten);\n    }\n    function ReadableByteStreamControllerRespondWithNewView(controller, view) {\n        const firstDescriptor = controller._pendingPullIntos.peek();\n        const state = controller._controlledReadableByteStream._state;\n        if (state === 'closed') {\n            if (view.byteLength !== 0) {\n                throw new TypeError('The view\\'s length must be 0 when calling respondWithNewView() on a closed stream');\n            }\n        }\n        else {\n            if (view.byteLength === 0) {\n                throw new TypeError('The view\\'s length must be greater than 0 when calling respondWithNewView() on a readable stream');\n            }\n        }\n        if (firstDescriptor.byteOffset + firstDescriptor.bytesFilled !== view.byteOffset) {\n            throw new RangeError('The region specified by view does not match byobRequest');\n        }\n        if (firstDescriptor.bufferByteLength !== view.buffer.byteLength) {\n            throw new RangeError('The buffer of view has different capacity than byobRequest');\n        }\n        if (firstDescriptor.bytesFilled + view.byteLength > firstDescriptor.byteLength) {\n            throw new RangeError('The region specified by view is larger than byobRequest');\n        }\n        const viewByteLength = view.byteLength;\n        firstDescriptor.buffer = TransferArrayBuffer(view.buffer);\n        ReadableByteStreamControllerRespondInternal(controller, viewByteLength);\n    }\n    function SetUpReadableByteStreamController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, autoAllocateChunkSize) {\n        controller._controlledReadableByteStream = stream;\n        controller._pullAgain = false;\n        controller._pulling = false;\n        controller._byobRequest = null;\n        // Need to set the slots so that the assert doesn't fire. In the spec the slots already exist implicitly.\n        controller._queue = controller._queueTotalSize = undefined;\n        ResetQueue(controller);\n        controller._closeRequested = false;\n        controller._started = false;\n        controller._strategyHWM = highWaterMark;\n        controller._pullAlgorithm = pullAlgorithm;\n        controller._cancelAlgorithm = cancelAlgorithm;\n        controller._autoAllocateChunkSize = autoAllocateChunkSize;\n        controller._pendingPullIntos = new SimpleQueue();\n        stream._readableStreamController = controller;\n        const startResult = startAlgorithm();\n        uponPromise(promiseResolvedWith(startResult), () => {\n            controller._started = true;\n            ReadableByteStreamControllerCallPullIfNeeded(controller);\n        }, r => {\n            ReadableByteStreamControllerError(controller, r);\n        });\n    }\n    function SetUpReadableByteStreamControllerFromUnderlyingSource(stream, underlyingByteSource, highWaterMark) {\n        const controller = Object.create(ReadableByteStreamController.prototype);\n        let startAlgorithm = () => undefined;\n        let pullAlgorithm = () => promiseResolvedWith(undefined);\n        let cancelAlgorithm = () => promiseResolvedWith(undefined);\n        if (underlyingByteSource.start !== undefined) {\n            startAlgorithm = () => underlyingByteSource.start(controller);\n        }\n        if (underlyingByteSource.pull !== undefined) {\n            pullAlgorithm = () => underlyingByteSource.pull(controller);\n        }\n        if (underlyingByteSource.cancel !== undefined) {\n            cancelAlgorithm = reason => underlyingByteSource.cancel(reason);\n        }\n        const autoAllocateChunkSize = underlyingByteSource.autoAllocateChunkSize;\n        if (autoAllocateChunkSize === 0) {\n            throw new TypeError('autoAllocateChunkSize must be greater than 0');\n        }\n        SetUpReadableByteStreamController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, autoAllocateChunkSize);\n    }\n    function SetUpReadableStreamBYOBRequest(request, controller, view) {\n        request._associatedReadableByteStreamController = controller;\n        request._view = view;\n    }\n    // Helper functions for the ReadableStreamBYOBRequest.\n    function byobRequestBrandCheckException(name) {\n        return new TypeError(`ReadableStreamBYOBRequest.prototype.${name} can only be used on a ReadableStreamBYOBRequest`);\n    }\n    // Helper functions for the ReadableByteStreamController.\n    function byteStreamControllerBrandCheckException(name) {\n        return new TypeError(`ReadableByteStreamController.prototype.${name} can only be used on a ReadableByteStreamController`);\n    }\n\n    // Abstract operations for the ReadableStream.\n    function AcquireReadableStreamBYOBReader(stream) {\n        return new ReadableStreamBYOBReader(stream);\n    }\n    // ReadableStream API exposed for controllers.\n    function ReadableStreamAddReadIntoRequest(stream, readIntoRequest) {\n        stream._reader._readIntoRequests.push(readIntoRequest);\n    }\n    function ReadableStreamFulfillReadIntoRequest(stream, chunk, done) {\n        const reader = stream._reader;\n        const readIntoRequest = reader._readIntoRequests.shift();\n        if (done) {\n            readIntoRequest._closeSteps(chunk);\n        }\n        else {\n            readIntoRequest._chunkSteps(chunk);\n        }\n    }\n    function ReadableStreamGetNumReadIntoRequests(stream) {\n        return stream._reader._readIntoRequests.length;\n    }\n    function ReadableStreamHasBYOBReader(stream) {\n        const reader = stream._reader;\n        if (reader === undefined) {\n            return false;\n        }\n        if (!IsReadableStreamBYOBReader(reader)) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * A BYOB reader vended by a {@link ReadableStream}.\n     *\n     * @public\n     */\n    class ReadableStreamBYOBReader {\n        constructor(stream) {\n            assertRequiredArgument(stream, 1, 'ReadableStreamBYOBReader');\n            assertReadableStream(stream, 'First parameter');\n            if (IsReadableStreamLocked(stream)) {\n                throw new TypeError('This stream has already been locked for exclusive reading by another reader');\n            }\n            if (!IsReadableByteStreamController(stream._readableStreamController)) {\n                throw new TypeError('Cannot construct a ReadableStreamBYOBReader for a stream not constructed with a byte ' +\n                    'source');\n            }\n            ReadableStreamReaderGenericInitialize(this, stream);\n            this._readIntoRequests = new SimpleQueue();\n        }\n        /**\n         * Returns a promise that will be fulfilled when the stream becomes closed, or rejected if the stream ever errors or\n         * the reader's lock is released before the stream finishes closing.\n         */\n        get closed() {\n            if (!IsReadableStreamBYOBReader(this)) {\n                return promiseRejectedWith(byobReaderBrandCheckException('closed'));\n            }\n            return this._closedPromise;\n        }\n        /**\n         * If the reader is active, behaves the same as {@link ReadableStream.cancel | stream.cancel(reason)}.\n         */\n        cancel(reason = undefined) {\n            if (!IsReadableStreamBYOBReader(this)) {\n                return promiseRejectedWith(byobReaderBrandCheckException('cancel'));\n            }\n            if (this._ownerReadableStream === undefined) {\n                return promiseRejectedWith(readerLockException('cancel'));\n            }\n            return ReadableStreamReaderGenericCancel(this, reason);\n        }\n        /**\n         * Attempts to reads bytes into view, and returns a promise resolved with the result.\n         *\n         * If reading a chunk causes the queue to become empty, more data will be pulled from the underlying source.\n         */\n        read(view) {\n            if (!IsReadableStreamBYOBReader(this)) {\n                return promiseRejectedWith(byobReaderBrandCheckException('read'));\n            }\n            if (!ArrayBuffer.isView(view)) {\n                return promiseRejectedWith(new TypeError('view must be an array buffer view'));\n            }\n            if (view.byteLength === 0) {\n                return promiseRejectedWith(new TypeError('view must have non-zero byteLength'));\n            }\n            if (view.buffer.byteLength === 0) {\n                return promiseRejectedWith(new TypeError(`view's buffer must have non-zero byteLength`));\n            }\n            if (IsDetachedBuffer(view.buffer)) ;\n            if (this._ownerReadableStream === undefined) {\n                return promiseRejectedWith(readerLockException('read from'));\n            }\n            let resolvePromise;\n            let rejectPromise;\n            const promise = newPromise((resolve, reject) => {\n                resolvePromise = resolve;\n                rejectPromise = reject;\n            });\n            const readIntoRequest = {\n                _chunkSteps: chunk => resolvePromise({ value: chunk, done: false }),\n                _closeSteps: chunk => resolvePromise({ value: chunk, done: true }),\n                _errorSteps: e => rejectPromise(e)\n            };\n            ReadableStreamBYOBReaderRead(this, view, readIntoRequest);\n            return promise;\n        }\n        /**\n         * Releases the reader's lock on the corresponding stream. After the lock is released, the reader is no longer active.\n         * If the associated stream is errored when the lock is released, the reader will appear errored in the same way\n         * from now on; otherwise, the reader will appear closed.\n         *\n         * A reader's lock cannot be released while it still has a pending read request, i.e., if a promise returned by\n         * the reader's {@link ReadableStreamBYOBReader.read | read()} method has not yet been settled. Attempting to\n         * do so will throw a `TypeError` and leave the reader locked to the stream.\n         */\n        releaseLock() {\n            if (!IsReadableStreamBYOBReader(this)) {\n                throw byobReaderBrandCheckException('releaseLock');\n            }\n            if (this._ownerReadableStream === undefined) {\n                return;\n            }\n            if (this._readIntoRequests.length > 0) {\n                throw new TypeError('Tried to release a reader lock when that reader has pending read() calls un-settled');\n            }\n            ReadableStreamReaderGenericRelease(this);\n        }\n    }\n    Object.defineProperties(ReadableStreamBYOBReader.prototype, {\n        cancel: { enumerable: true },\n        read: { enumerable: true },\n        releaseLock: { enumerable: true },\n        closed: { enumerable: true }\n    });\n    if (typeof SymbolPolyfill.toStringTag === 'symbol') {\n        Object.defineProperty(ReadableStreamBYOBReader.prototype, SymbolPolyfill.toStringTag, {\n            value: 'ReadableStreamBYOBReader',\n            configurable: true\n        });\n    }\n    // Abstract operations for the readers.\n    function IsReadableStreamBYOBReader(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_readIntoRequests')) {\n            return false;\n        }\n        return x instanceof ReadableStreamBYOBReader;\n    }\n    function ReadableStreamBYOBReaderRead(reader, view, readIntoRequest) {\n        const stream = reader._ownerReadableStream;\n        stream._disturbed = true;\n        if (stream._state === 'errored') {\n            readIntoRequest._errorSteps(stream._storedError);\n        }\n        else {\n            ReadableByteStreamControllerPullInto(stream._readableStreamController, view, readIntoRequest);\n        }\n    }\n    // Helper functions for the ReadableStreamBYOBReader.\n    function byobReaderBrandCheckException(name) {\n        return new TypeError(`ReadableStreamBYOBReader.prototype.${name} can only be used on a ReadableStreamBYOBReader`);\n    }\n\n    function ExtractHighWaterMark(strategy, defaultHWM) {\n        const { highWaterMark } = strategy;\n        if (highWaterMark === undefined) {\n            return defaultHWM;\n        }\n        if (NumberIsNaN(highWaterMark) || highWaterMark < 0) {\n            throw new RangeError('Invalid highWaterMark');\n        }\n        return highWaterMark;\n    }\n    function ExtractSizeAlgorithm(strategy) {\n        const { size } = strategy;\n        if (!size) {\n            return () => 1;\n        }\n        return size;\n    }\n\n    function convertQueuingStrategy(init, context) {\n        assertDictionary(init, context);\n        const highWaterMark = init === null || init === void 0 ? void 0 : init.highWaterMark;\n        const size = init === null || init === void 0 ? void 0 : init.size;\n        return {\n            highWaterMark: highWaterMark === undefined ? undefined : convertUnrestrictedDouble(highWaterMark),\n            size: size === undefined ? undefined : convertQueuingStrategySize(size, `${context} has member 'size' that`)\n        };\n    }\n    function convertQueuingStrategySize(fn, context) {\n        assertFunction(fn, context);\n        return chunk => convertUnrestrictedDouble(fn(chunk));\n    }\n\n    function convertUnderlyingSink(original, context) {\n        assertDictionary(original, context);\n        const abort = original === null || original === void 0 ? void 0 : original.abort;\n        const close = original === null || original === void 0 ? void 0 : original.close;\n        const start = original === null || original === void 0 ? void 0 : original.start;\n        const type = original === null || original === void 0 ? void 0 : original.type;\n        const write = original === null || original === void 0 ? void 0 : original.write;\n        return {\n            abort: abort === undefined ?\n                undefined :\n                convertUnderlyingSinkAbortCallback(abort, original, `${context} has member 'abort' that`),\n            close: close === undefined ?\n                undefined :\n                convertUnderlyingSinkCloseCallback(close, original, `${context} has member 'close' that`),\n            start: start === undefined ?\n                undefined :\n                convertUnderlyingSinkStartCallback(start, original, `${context} has member 'start' that`),\n            write: write === undefined ?\n                undefined :\n                convertUnderlyingSinkWriteCallback(write, original, `${context} has member 'write' that`),\n            type\n        };\n    }\n    function convertUnderlyingSinkAbortCallback(fn, original, context) {\n        assertFunction(fn, context);\n        return (reason) => promiseCall(fn, original, [reason]);\n    }\n    function convertUnderlyingSinkCloseCallback(fn, original, context) {\n        assertFunction(fn, context);\n        return () => promiseCall(fn, original, []);\n    }\n    function convertUnderlyingSinkStartCallback(fn, original, context) {\n        assertFunction(fn, context);\n        return (controller) => reflectCall(fn, original, [controller]);\n    }\n    function convertUnderlyingSinkWriteCallback(fn, original, context) {\n        assertFunction(fn, context);\n        return (chunk, controller) => promiseCall(fn, original, [chunk, controller]);\n    }\n\n    function assertWritableStream(x, context) {\n        if (!IsWritableStream(x)) {\n            throw new TypeError(`${context} is not a WritableStream.`);\n        }\n    }\n\n    function isAbortSignal(value) {\n        if (typeof value !== 'object' || value === null) {\n            return false;\n        }\n        try {\n            return typeof value.aborted === 'boolean';\n        }\n        catch (_a) {\n            // AbortSignal.prototype.aborted throws if its brand check fails\n            return false;\n        }\n    }\n    const supportsAbortController = typeof AbortController === 'function';\n    /**\n     * Construct a new AbortController, if supported by the platform.\n     *\n     * @internal\n     */\n    function createAbortController() {\n        if (supportsAbortController) {\n            return new AbortController();\n        }\n        return undefined;\n    }\n\n    /**\n     * A writable stream represents a destination for data, into which you can write.\n     *\n     * @public\n     */\n    class WritableStream {\n        constructor(rawUnderlyingSink = {}, rawStrategy = {}) {\n            if (rawUnderlyingSink === undefined) {\n                rawUnderlyingSink = null;\n            }\n            else {\n                assertObject(rawUnderlyingSink, 'First parameter');\n            }\n            const strategy = convertQueuingStrategy(rawStrategy, 'Second parameter');\n            const underlyingSink = convertUnderlyingSink(rawUnderlyingSink, 'First parameter');\n            InitializeWritableStream(this);\n            const type = underlyingSink.type;\n            if (type !== undefined) {\n                throw new RangeError('Invalid type is specified');\n            }\n            const sizeAlgorithm = ExtractSizeAlgorithm(strategy);\n            const highWaterMark = ExtractHighWaterMark(strategy, 1);\n            SetUpWritableStreamDefaultControllerFromUnderlyingSink(this, underlyingSink, highWaterMark, sizeAlgorithm);\n        }\n        /**\n         * Returns whether or not the writable stream is locked to a writer.\n         */\n        get locked() {\n            if (!IsWritableStream(this)) {\n                throw streamBrandCheckException$2('locked');\n            }\n            return IsWritableStreamLocked(this);\n        }\n        /**\n         * Aborts the stream, signaling that the producer can no longer successfully write to the stream and it is to be\n         * immediately moved to an errored state, with any queued-up writes discarded. This will also execute any abort\n         * mechanism of the underlying sink.\n         *\n         * The returned promise will fulfill if the stream shuts down successfully, or reject if the underlying sink signaled\n         * that there was an error doing so. Additionally, it will reject with a `TypeError` (without attempting to cancel\n         * the stream) if the stream is currently locked.\n         */\n        abort(reason = undefined) {\n            if (!IsWritableStream(this)) {\n                return promiseRejectedWith(streamBrandCheckException$2('abort'));\n            }\n            if (IsWritableStreamLocked(this)) {\n                return promiseRejectedWith(new TypeError('Cannot abort a stream that already has a writer'));\n            }\n            return WritableStreamAbort(this, reason);\n        }\n        /**\n         * Closes the stream. The underlying sink will finish processing any previously-written chunks, before invoking its\n         * close behavior. During this time any further attempts to write will fail (without erroring the stream).\n         *\n         * The method returns a promise that will fulfill if all remaining chunks are successfully written and the stream\n         * successfully closes, or rejects if an error is encountered during this process. Additionally, it will reject with\n         * a `TypeError` (without attempting to cancel the stream) if the stream is currently locked.\n         */\n        close() {\n            if (!IsWritableStream(this)) {\n                return promiseRejectedWith(streamBrandCheckException$2('close'));\n            }\n            if (IsWritableStreamLocked(this)) {\n                return promiseRejectedWith(new TypeError('Cannot close a stream that already has a writer'));\n            }\n            if (WritableStreamCloseQueuedOrInFlight(this)) {\n                return promiseRejectedWith(new TypeError('Cannot close an already-closing stream'));\n            }\n            return WritableStreamClose(this);\n        }\n        /**\n         * Creates a {@link WritableStreamDefaultWriter | writer} and locks the stream to the new writer. While the stream\n         * is locked, no other writer can be acquired until this one is released.\n         *\n         * This functionality is especially useful for creating abstractions that desire the ability to write to a stream\n         * without interruption or interleaving. By getting a writer for the stream, you can ensure nobody else can write at\n         * the same time, which would cause the resulting written data to be unpredictable and probably useless.\n         */\n        getWriter() {\n            if (!IsWritableStream(this)) {\n                throw streamBrandCheckException$2('getWriter');\n            }\n            return AcquireWritableStreamDefaultWriter(this);\n        }\n    }\n    Object.defineProperties(WritableStream.prototype, {\n        abort: { enumerable: true },\n        close: { enumerable: true },\n        getWriter: { enumerable: true },\n        locked: { enumerable: true }\n    });\n    if (typeof SymbolPolyfill.toStringTag === 'symbol') {\n        Object.defineProperty(WritableStream.prototype, SymbolPolyfill.toStringTag, {\n            value: 'WritableStream',\n            configurable: true\n        });\n    }\n    // Abstract operations for the WritableStream.\n    function AcquireWritableStreamDefaultWriter(stream) {\n        return new WritableStreamDefaultWriter(stream);\n    }\n    // Throws if and only if startAlgorithm throws.\n    function CreateWritableStream(startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, highWaterMark = 1, sizeAlgorithm = () => 1) {\n        const stream = Object.create(WritableStream.prototype);\n        InitializeWritableStream(stream);\n        const controller = Object.create(WritableStreamDefaultController.prototype);\n        SetUpWritableStreamDefaultController(stream, controller, startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, highWaterMark, sizeAlgorithm);\n        return stream;\n    }\n    function InitializeWritableStream(stream) {\n        stream._state = 'writable';\n        // The error that will be reported by new method calls once the state becomes errored. Only set when [[state]] is\n        // 'erroring' or 'errored'. May be set to an undefined value.\n        stream._storedError = undefined;\n        stream._writer = undefined;\n        // Initialize to undefined first because the constructor of the controller checks this\n        // variable to validate the caller.\n        stream._writableStreamController = undefined;\n        // This queue is placed here instead of the writer class in order to allow for passing a writer to the next data\n        // producer without waiting for the queued writes to finish.\n        stream._writeRequests = new SimpleQueue();\n        // Write requests are removed from _writeRequests when write() is called on the underlying sink. This prevents\n        // them from being erroneously rejected on error. If a write() call is in-flight, the request is stored here.\n        stream._inFlightWriteRequest = undefined;\n        // The promise that was returned from writer.close(). Stored here because it may be fulfilled after the writer\n        // has been detached.\n        stream._closeRequest = undefined;\n        // Close request is removed from _closeRequest when close() is called on the underlying sink. This prevents it\n        // from being erroneously rejected on error. If a close() call is in-flight, the request is stored here.\n        stream._inFlightCloseRequest = undefined;\n        // The promise that was returned from writer.abort(). This may also be fulfilled after the writer has detached.\n        stream._pendingAbortRequest = undefined;\n        // The backpressure signal set by the controller.\n        stream._backpressure = false;\n    }\n    function IsWritableStream(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_writableStreamController')) {\n            return false;\n        }\n        return x instanceof WritableStream;\n    }\n    function IsWritableStreamLocked(stream) {\n        if (stream._writer === undefined) {\n            return false;\n        }\n        return true;\n    }\n    function WritableStreamAbort(stream, reason) {\n        var _a;\n        if (stream._state === 'closed' || stream._state === 'errored') {\n            return promiseResolvedWith(undefined);\n        }\n        stream._writableStreamController._abortReason = reason;\n        (_a = stream._writableStreamController._abortController) === null || _a === void 0 ? void 0 : _a.abort();\n        // TypeScript narrows the type of `stream._state` down to 'writable' | 'erroring',\n        // but it doesn't know that signaling abort runs author code that might have changed the state.\n        // Widen the type again by casting to WritableStreamState.\n        const state = stream._state;\n        if (state === 'closed' || state === 'errored') {\n            return promiseResolvedWith(undefined);\n        }\n        if (stream._pendingAbortRequest !== undefined) {\n            return stream._pendingAbortRequest._promise;\n        }\n        let wasAlreadyErroring = false;\n        if (state === 'erroring') {\n            wasAlreadyErroring = true;\n            // reason will not be used, so don't keep a reference to it.\n            reason = undefined;\n        }\n        const promise = newPromise((resolve, reject) => {\n            stream._pendingAbortRequest = {\n                _promise: undefined,\n                _resolve: resolve,\n                _reject: reject,\n                _reason: reason,\n                _wasAlreadyErroring: wasAlreadyErroring\n            };\n        });\n        stream._pendingAbortRequest._promise = promise;\n        if (!wasAlreadyErroring) {\n            WritableStreamStartErroring(stream, reason);\n        }\n        return promise;\n    }\n    function WritableStreamClose(stream) {\n        const state = stream._state;\n        if (state === 'closed' || state === 'errored') {\n            return promiseRejectedWith(new TypeError(`The stream (in ${state} state) is not in the writable state and cannot be closed`));\n        }\n        const promise = newPromise((resolve, reject) => {\n            const closeRequest = {\n                _resolve: resolve,\n                _reject: reject\n            };\n            stream._closeRequest = closeRequest;\n        });\n        const writer = stream._writer;\n        if (writer !== undefined && stream._backpressure && state === 'writable') {\n            defaultWriterReadyPromiseResolve(writer);\n        }\n        WritableStreamDefaultControllerClose(stream._writableStreamController);\n        return promise;\n    }\n    // WritableStream API exposed for controllers.\n    function WritableStreamAddWriteRequest(stream) {\n        const promise = newPromise((resolve, reject) => {\n            const writeRequest = {\n                _resolve: resolve,\n                _reject: reject\n            };\n            stream._writeRequests.push(writeRequest);\n        });\n        return promise;\n    }\n    function WritableStreamDealWithRejection(stream, error) {\n        const state = stream._state;\n        if (state === 'writable') {\n            WritableStreamStartErroring(stream, error);\n            return;\n        }\n        WritableStreamFinishErroring(stream);\n    }\n    function WritableStreamStartErroring(stream, reason) {\n        const controller = stream._writableStreamController;\n        stream._state = 'erroring';\n        stream._storedError = reason;\n        const writer = stream._writer;\n        if (writer !== undefined) {\n            WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, reason);\n        }\n        if (!WritableStreamHasOperationMarkedInFlight(stream) && controller._started) {\n            WritableStreamFinishErroring(stream);\n        }\n    }\n    function WritableStreamFinishErroring(stream) {\n        stream._state = 'errored';\n        stream._writableStreamController[ErrorSteps]();\n        const storedError = stream._storedError;\n        stream._writeRequests.forEach(writeRequest => {\n            writeRequest._reject(storedError);\n        });\n        stream._writeRequests = new SimpleQueue();\n        if (stream._pendingAbortRequest === undefined) {\n            WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n            return;\n        }\n        const abortRequest = stream._pendingAbortRequest;\n        stream._pendingAbortRequest = undefined;\n        if (abortRequest._wasAlreadyErroring) {\n            abortRequest._reject(storedError);\n            WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n            return;\n        }\n        const promise = stream._writableStreamController[AbortSteps](abortRequest._reason);\n        uponPromise(promise, () => {\n            abortRequest._resolve();\n            WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n        }, (reason) => {\n            abortRequest._reject(reason);\n            WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n        });\n    }\n    function WritableStreamFinishInFlightWrite(stream) {\n        stream._inFlightWriteRequest._resolve(undefined);\n        stream._inFlightWriteRequest = undefined;\n    }\n    function WritableStreamFinishInFlightWriteWithError(stream, error) {\n        stream._inFlightWriteRequest._reject(error);\n        stream._inFlightWriteRequest = undefined;\n        WritableStreamDealWithRejection(stream, error);\n    }\n    function WritableStreamFinishInFlightClose(stream) {\n        stream._inFlightCloseRequest._resolve(undefined);\n        stream._inFlightCloseRequest = undefined;\n        const state = stream._state;\n        if (state === 'erroring') {\n            // The error was too late to do anything, so it is ignored.\n            stream._storedError = undefined;\n            if (stream._pendingAbortRequest !== undefined) {\n                stream._pendingAbortRequest._resolve();\n                stream._pendingAbortRequest = undefined;\n            }\n        }\n        stream._state = 'closed';\n        const writer = stream._writer;\n        if (writer !== undefined) {\n            defaultWriterClosedPromiseResolve(writer);\n        }\n    }\n    function WritableStreamFinishInFlightCloseWithError(stream, error) {\n        stream._inFlightCloseRequest._reject(error);\n        stream._inFlightCloseRequest = undefined;\n        // Never execute sink abort() after sink close().\n        if (stream._pendingAbortRequest !== undefined) {\n            stream._pendingAbortRequest._reject(error);\n            stream._pendingAbortRequest = undefined;\n        }\n        WritableStreamDealWithRejection(stream, error);\n    }\n    // TODO(ricea): Fix alphabetical order.\n    function WritableStreamCloseQueuedOrInFlight(stream) {\n        if (stream._closeRequest === undefined && stream._inFlightCloseRequest === undefined) {\n            return false;\n        }\n        return true;\n    }\n    function WritableStreamHasOperationMarkedInFlight(stream) {\n        if (stream._inFlightWriteRequest === undefined && stream._inFlightCloseRequest === undefined) {\n            return false;\n        }\n        return true;\n    }\n    function WritableStreamMarkCloseRequestInFlight(stream) {\n        stream._inFlightCloseRequest = stream._closeRequest;\n        stream._closeRequest = undefined;\n    }\n    function WritableStreamMarkFirstWriteRequestInFlight(stream) {\n        stream._inFlightWriteRequest = stream._writeRequests.shift();\n    }\n    function WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream) {\n        if (stream._closeRequest !== undefined) {\n            stream._closeRequest._reject(stream._storedError);\n            stream._closeRequest = undefined;\n        }\n        const writer = stream._writer;\n        if (writer !== undefined) {\n            defaultWriterClosedPromiseReject(writer, stream._storedError);\n        }\n    }\n    function WritableStreamUpdateBackpressure(stream, backpressure) {\n        const writer = stream._writer;\n        if (writer !== undefined && backpressure !== stream._backpressure) {\n            if (backpressure) {\n                defaultWriterReadyPromiseReset(writer);\n            }\n            else {\n                defaultWriterReadyPromiseResolve(writer);\n            }\n        }\n        stream._backpressure = backpressure;\n    }\n    /**\n     * A default writer vended by a {@link WritableStream}.\n     *\n     * @public\n     */\n    class WritableStreamDefaultWriter {\n        constructor(stream) {\n            assertRequiredArgument(stream, 1, 'WritableStreamDefaultWriter');\n            assertWritableStream(stream, 'First parameter');\n            if (IsWritableStreamLocked(stream)) {\n                throw new TypeError('This stream has already been locked for exclusive writing by another writer');\n            }\n            this._ownerWritableStream = stream;\n            stream._writer = this;\n            const state = stream._state;\n            if (state === 'writable') {\n                if (!WritableStreamCloseQueuedOrInFlight(stream) && stream._backpressure) {\n                    defaultWriterReadyPromiseInitialize(this);\n                }\n                else {\n                    defaultWriterReadyPromiseInitializeAsResolved(this);\n                }\n                defaultWriterClosedPromiseInitialize(this);\n            }\n            else if (state === 'erroring') {\n                defaultWriterReadyPromiseInitializeAsRejected(this, stream._storedError);\n                defaultWriterClosedPromiseInitialize(this);\n            }\n            else if (state === 'closed') {\n                defaultWriterReadyPromiseInitializeAsResolved(this);\n                defaultWriterClosedPromiseInitializeAsResolved(this);\n            }\n            else {\n                const storedError = stream._storedError;\n                defaultWriterReadyPromiseInitializeAsRejected(this, storedError);\n                defaultWriterClosedPromiseInitializeAsRejected(this, storedError);\n            }\n        }\n        /**\n         * Returns a promise that will be fulfilled when the stream becomes closed, or rejected if the stream ever errors or\n         * the writer’s lock is released before the stream finishes closing.\n         */\n        get closed() {\n            if (!IsWritableStreamDefaultWriter(this)) {\n                return promiseRejectedWith(defaultWriterBrandCheckException('closed'));\n            }\n            return this._closedPromise;\n        }\n        /**\n         * Returns the desired size to fill the stream’s internal queue. It can be negative, if the queue is over-full.\n         * A producer can use this information to determine the right amount of data to write.\n         *\n         * It will be `null` if the stream cannot be successfully written to (due to either being errored, or having an abort\n         * queued up). It will return zero if the stream is closed. And the getter will throw an exception if invoked when\n         * the writer’s lock is released.\n         */\n        get desiredSize() {\n            if (!IsWritableStreamDefaultWriter(this)) {\n                throw defaultWriterBrandCheckException('desiredSize');\n            }\n            if (this._ownerWritableStream === undefined) {\n                throw defaultWriterLockException('desiredSize');\n            }\n            return WritableStreamDefaultWriterGetDesiredSize(this);\n        }\n        /**\n         * Returns a promise that will be fulfilled when the desired size to fill the stream’s internal queue transitions\n         * from non-positive to positive, signaling that it is no longer applying backpressure. Once the desired size dips\n         * back to zero or below, the getter will return a new promise that stays pending until the next transition.\n         *\n         * If the stream becomes errored or aborted, or the writer’s lock is released, the returned promise will become\n         * rejected.\n         */\n        get ready() {\n            if (!IsWritableStreamDefaultWriter(this)) {\n                return promiseRejectedWith(defaultWriterBrandCheckException('ready'));\n            }\n            return this._readyPromise;\n        }\n        /**\n         * If the reader is active, behaves the same as {@link WritableStream.abort | stream.abort(reason)}.\n         */\n        abort(reason = undefined) {\n            if (!IsWritableStreamDefaultWriter(this)) {\n                return promiseRejectedWith(defaultWriterBrandCheckException('abort'));\n            }\n            if (this._ownerWritableStream === undefined) {\n                return promiseRejectedWith(defaultWriterLockException('abort'));\n            }\n            return WritableStreamDefaultWriterAbort(this, reason);\n        }\n        /**\n         * If the reader is active, behaves the same as {@link WritableStream.close | stream.close()}.\n         */\n        close() {\n            if (!IsWritableStreamDefaultWriter(this)) {\n                return promiseRejectedWith(defaultWriterBrandCheckException('close'));\n            }\n            const stream = this._ownerWritableStream;\n            if (stream === undefined) {\n                return promiseRejectedWith(defaultWriterLockException('close'));\n            }\n            if (WritableStreamCloseQueuedOrInFlight(stream)) {\n                return promiseRejectedWith(new TypeError('Cannot close an already-closing stream'));\n            }\n            return WritableStreamDefaultWriterClose(this);\n        }\n        /**\n         * Releases the writer’s lock on the corresponding stream. After the lock is released, the writer is no longer active.\n         * If the associated stream is errored when the lock is released, the writer will appear errored in the same way from\n         * now on; otherwise, the writer will appear closed.\n         *\n         * Note that the lock can still be released even if some ongoing writes have not yet finished (i.e. even if the\n         * promises returned from previous calls to {@link WritableStreamDefaultWriter.write | write()} have not yet settled).\n         * It’s not necessary to hold the lock on the writer for the duration of the write; the lock instead simply prevents\n         * other producers from writing in an interleaved manner.\n         */\n        releaseLock() {\n            if (!IsWritableStreamDefaultWriter(this)) {\n                throw defaultWriterBrandCheckException('releaseLock');\n            }\n            const stream = this._ownerWritableStream;\n            if (stream === undefined) {\n                return;\n            }\n            WritableStreamDefaultWriterRelease(this);\n        }\n        write(chunk = undefined) {\n            if (!IsWritableStreamDefaultWriter(this)) {\n                return promiseRejectedWith(defaultWriterBrandCheckException('write'));\n            }\n            if (this._ownerWritableStream === undefined) {\n                return promiseRejectedWith(defaultWriterLockException('write to'));\n            }\n            return WritableStreamDefaultWriterWrite(this, chunk);\n        }\n    }\n    Object.defineProperties(WritableStreamDefaultWriter.prototype, {\n        abort: { enumerable: true },\n        close: { enumerable: true },\n        releaseLock: { enumerable: true },\n        write: { enumerable: true },\n        closed: { enumerable: true },\n        desiredSize: { enumerable: true },\n        ready: { enumerable: true }\n    });\n    if (typeof SymbolPolyfill.toStringTag === 'symbol') {\n        Object.defineProperty(WritableStreamDefaultWriter.prototype, SymbolPolyfill.toStringTag, {\n            value: 'WritableStreamDefaultWriter',\n            configurable: true\n        });\n    }\n    // Abstract operations for the WritableStreamDefaultWriter.\n    function IsWritableStreamDefaultWriter(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_ownerWritableStream')) {\n            return false;\n        }\n        return x instanceof WritableStreamDefaultWriter;\n    }\n    // A client of WritableStreamDefaultWriter may use these functions directly to bypass state check.\n    function WritableStreamDefaultWriterAbort(writer, reason) {\n        const stream = writer._ownerWritableStream;\n        return WritableStreamAbort(stream, reason);\n    }\n    function WritableStreamDefaultWriterClose(writer) {\n        const stream = writer._ownerWritableStream;\n        return WritableStreamClose(stream);\n    }\n    function WritableStreamDefaultWriterCloseWithErrorPropagation(writer) {\n        const stream = writer._ownerWritableStream;\n        const state = stream._state;\n        if (WritableStreamCloseQueuedOrInFlight(stream) || state === 'closed') {\n            return promiseResolvedWith(undefined);\n        }\n        if (state === 'errored') {\n            return promiseRejectedWith(stream._storedError);\n        }\n        return WritableStreamDefaultWriterClose(writer);\n    }\n    function WritableStreamDefaultWriterEnsureClosedPromiseRejected(writer, error) {\n        if (writer._closedPromiseState === 'pending') {\n            defaultWriterClosedPromiseReject(writer, error);\n        }\n        else {\n            defaultWriterClosedPromiseResetToRejected(writer, error);\n        }\n    }\n    function WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, error) {\n        if (writer._readyPromiseState === 'pending') {\n            defaultWriterReadyPromiseReject(writer, error);\n        }\n        else {\n            defaultWriterReadyPromiseResetToRejected(writer, error);\n        }\n    }\n    function WritableStreamDefaultWriterGetDesiredSize(writer) {\n        const stream = writer._ownerWritableStream;\n        const state = stream._state;\n        if (state === 'errored' || state === 'erroring') {\n            return null;\n        }\n        if (state === 'closed') {\n            return 0;\n        }\n        return WritableStreamDefaultControllerGetDesiredSize(stream._writableStreamController);\n    }\n    function WritableStreamDefaultWriterRelease(writer) {\n        const stream = writer._ownerWritableStream;\n        const releasedError = new TypeError(`Writer was released and can no longer be used to monitor the stream's closedness`);\n        WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, releasedError);\n        // The state transitions to \"errored\" before the sink abort() method runs, but the writer.closed promise is not\n        // rejected until afterwards. This means that simply testing state will not work.\n        WritableStreamDefaultWriterEnsureClosedPromiseRejected(writer, releasedError);\n        stream._writer = undefined;\n        writer._ownerWritableStream = undefined;\n    }\n    function WritableStreamDefaultWriterWrite(writer, chunk) {\n        const stream = writer._ownerWritableStream;\n        const controller = stream._writableStreamController;\n        const chunkSize = WritableStreamDefaultControllerGetChunkSize(controller, chunk);\n        if (stream !== writer._ownerWritableStream) {\n            return promiseRejectedWith(defaultWriterLockException('write to'));\n        }\n        const state = stream._state;\n        if (state === 'errored') {\n            return promiseRejectedWith(stream._storedError);\n        }\n        if (WritableStreamCloseQueuedOrInFlight(stream) || state === 'closed') {\n            return promiseRejectedWith(new TypeError('The stream is closing or closed and cannot be written to'));\n        }\n        if (state === 'erroring') {\n            return promiseRejectedWith(stream._storedError);\n        }\n        const promise = WritableStreamAddWriteRequest(stream);\n        WritableStreamDefaultControllerWrite(controller, chunk, chunkSize);\n        return promise;\n    }\n    const closeSentinel = {};\n    /**\n     * Allows control of a {@link WritableStream | writable stream}'s state and internal queue.\n     *\n     * @public\n     */\n    class WritableStreamDefaultController {\n        constructor() {\n            throw new TypeError('Illegal constructor');\n        }\n        /**\n         * The reason which was passed to `WritableStream.abort(reason)` when the stream was aborted.\n         *\n         * @deprecated\n         *  This property has been removed from the specification, see https://github.com/whatwg/streams/pull/1177.\n         *  Use {@link WritableStreamDefaultController.signal}'s `reason` instead.\n         */\n        get abortReason() {\n            if (!IsWritableStreamDefaultController(this)) {\n                throw defaultControllerBrandCheckException$2('abortReason');\n            }\n            return this._abortReason;\n        }\n        /**\n         * An `AbortSignal` that can be used to abort the pending write or close operation when the stream is aborted.\n         */\n        get signal() {\n            if (!IsWritableStreamDefaultController(this)) {\n                throw defaultControllerBrandCheckException$2('signal');\n            }\n            if (this._abortController === undefined) {\n                // Older browsers or older Node versions may not support `AbortController` or `AbortSignal`.\n                // We don't want to bundle and ship an `AbortController` polyfill together with our polyfill,\n                // so instead we only implement support for `signal` if we find a global `AbortController` constructor.\n                throw new TypeError('WritableStreamDefaultController.prototype.signal is not supported');\n            }\n            return this._abortController.signal;\n        }\n        /**\n         * Closes the controlled writable stream, making all future interactions with it fail with the given error `e`.\n         *\n         * This method is rarely used, since usually it suffices to return a rejected promise from one of the underlying\n         * sink's methods. However, it can be useful for suddenly shutting down a stream in response to an event outside the\n         * normal lifecycle of interactions with the underlying sink.\n         */\n        error(e = undefined) {\n            if (!IsWritableStreamDefaultController(this)) {\n                throw defaultControllerBrandCheckException$2('error');\n            }\n            const state = this._controlledWritableStream._state;\n            if (state !== 'writable') {\n                // The stream is closed, errored or will be soon. The sink can't do anything useful if it gets an error here, so\n                // just treat it as a no-op.\n                return;\n            }\n            WritableStreamDefaultControllerError(this, e);\n        }\n        /** @internal */\n        [AbortSteps](reason) {\n            const result = this._abortAlgorithm(reason);\n            WritableStreamDefaultControllerClearAlgorithms(this);\n            return result;\n        }\n        /** @internal */\n        [ErrorSteps]() {\n            ResetQueue(this);\n        }\n    }\n    Object.defineProperties(WritableStreamDefaultController.prototype, {\n        abortReason: { enumerable: true },\n        signal: { enumerable: true },\n        error: { enumerable: true }\n    });\n    if (typeof SymbolPolyfill.toStringTag === 'symbol') {\n        Object.defineProperty(WritableStreamDefaultController.prototype, SymbolPolyfill.toStringTag, {\n            value: 'WritableStreamDefaultController',\n            configurable: true\n        });\n    }\n    // Abstract operations implementing interface required by the WritableStream.\n    function IsWritableStreamDefaultController(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_controlledWritableStream')) {\n            return false;\n        }\n        return x instanceof WritableStreamDefaultController;\n    }\n    function SetUpWritableStreamDefaultController(stream, controller, startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, highWaterMark, sizeAlgorithm) {\n        controller._controlledWritableStream = stream;\n        stream._writableStreamController = controller;\n        // Need to set the slots so that the assert doesn't fire. In the spec the slots already exist implicitly.\n        controller._queue = undefined;\n        controller._queueTotalSize = undefined;\n        ResetQueue(controller);\n        controller._abortReason = undefined;\n        controller._abortController = createAbortController();\n        controller._started = false;\n        controller._strategySizeAlgorithm = sizeAlgorithm;\n        controller._strategyHWM = highWaterMark;\n        controller._writeAlgorithm = writeAlgorithm;\n        controller._closeAlgorithm = closeAlgorithm;\n        controller._abortAlgorithm = abortAlgorithm;\n        const backpressure = WritableStreamDefaultControllerGetBackpressure(controller);\n        WritableStreamUpdateBackpressure(stream, backpressure);\n        const startResult = startAlgorithm();\n        const startPromise = promiseResolvedWith(startResult);\n        uponPromise(startPromise, () => {\n            controller._started = true;\n            WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n        }, r => {\n            controller._started = true;\n            WritableStreamDealWithRejection(stream, r);\n        });\n    }\n    function SetUpWritableStreamDefaultControllerFromUnderlyingSink(stream, underlyingSink, highWaterMark, sizeAlgorithm) {\n        const controller = Object.create(WritableStreamDefaultController.prototype);\n        let startAlgorithm = () => undefined;\n        let writeAlgorithm = () => promiseResolvedWith(undefined);\n        let closeAlgorithm = () => promiseResolvedWith(undefined);\n        let abortAlgorithm = () => promiseResolvedWith(undefined);\n        if (underlyingSink.start !== undefined) {\n            startAlgorithm = () => underlyingSink.start(controller);\n        }\n        if (underlyingSink.write !== undefined) {\n            writeAlgorithm = chunk => underlyingSink.write(chunk, controller);\n        }\n        if (underlyingSink.close !== undefined) {\n            closeAlgorithm = () => underlyingSink.close();\n        }\n        if (underlyingSink.abort !== undefined) {\n            abortAlgorithm = reason => underlyingSink.abort(reason);\n        }\n        SetUpWritableStreamDefaultController(stream, controller, startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, highWaterMark, sizeAlgorithm);\n    }\n    // ClearAlgorithms may be called twice. Erroring the same stream in multiple ways will often result in redundant calls.\n    function WritableStreamDefaultControllerClearAlgorithms(controller) {\n        controller._writeAlgorithm = undefined;\n        controller._closeAlgorithm = undefined;\n        controller._abortAlgorithm = undefined;\n        controller._strategySizeAlgorithm = undefined;\n    }\n    function WritableStreamDefaultControllerClose(controller) {\n        EnqueueValueWithSize(controller, closeSentinel, 0);\n        WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n    }\n    function WritableStreamDefaultControllerGetChunkSize(controller, chunk) {\n        try {\n            return controller._strategySizeAlgorithm(chunk);\n        }\n        catch (chunkSizeE) {\n            WritableStreamDefaultControllerErrorIfNeeded(controller, chunkSizeE);\n            return 1;\n        }\n    }\n    function WritableStreamDefaultControllerGetDesiredSize(controller) {\n        return controller._strategyHWM - controller._queueTotalSize;\n    }\n    function WritableStreamDefaultControllerWrite(controller, chunk, chunkSize) {\n        try {\n            EnqueueValueWithSize(controller, chunk, chunkSize);\n        }\n        catch (enqueueE) {\n            WritableStreamDefaultControllerErrorIfNeeded(controller, enqueueE);\n            return;\n        }\n        const stream = controller._controlledWritableStream;\n        if (!WritableStreamCloseQueuedOrInFlight(stream) && stream._state === 'writable') {\n            const backpressure = WritableStreamDefaultControllerGetBackpressure(controller);\n            WritableStreamUpdateBackpressure(stream, backpressure);\n        }\n        WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n    }\n    // Abstract operations for the WritableStreamDefaultController.\n    function WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller) {\n        const stream = controller._controlledWritableStream;\n        if (!controller._started) {\n            return;\n        }\n        if (stream._inFlightWriteRequest !== undefined) {\n            return;\n        }\n        const state = stream._state;\n        if (state === 'erroring') {\n            WritableStreamFinishErroring(stream);\n            return;\n        }\n        if (controller._queue.length === 0) {\n            return;\n        }\n        const value = PeekQueueValue(controller);\n        if (value === closeSentinel) {\n            WritableStreamDefaultControllerProcessClose(controller);\n        }\n        else {\n            WritableStreamDefaultControllerProcessWrite(controller, value);\n        }\n    }\n    function WritableStreamDefaultControllerErrorIfNeeded(controller, error) {\n        if (controller._controlledWritableStream._state === 'writable') {\n            WritableStreamDefaultControllerError(controller, error);\n        }\n    }\n    function WritableStreamDefaultControllerProcessClose(controller) {\n        const stream = controller._controlledWritableStream;\n        WritableStreamMarkCloseRequestInFlight(stream);\n        DequeueValue(controller);\n        const sinkClosePromise = controller._closeAlgorithm();\n        WritableStreamDefaultControllerClearAlgorithms(controller);\n        uponPromise(sinkClosePromise, () => {\n            WritableStreamFinishInFlightClose(stream);\n        }, reason => {\n            WritableStreamFinishInFlightCloseWithError(stream, reason);\n        });\n    }\n    function WritableStreamDefaultControllerProcessWrite(controller, chunk) {\n        const stream = controller._controlledWritableStream;\n        WritableStreamMarkFirstWriteRequestInFlight(stream);\n        const sinkWritePromise = controller._writeAlgorithm(chunk);\n        uponPromise(sinkWritePromise, () => {\n            WritableStreamFinishInFlightWrite(stream);\n            const state = stream._state;\n            DequeueValue(controller);\n            if (!WritableStreamCloseQueuedOrInFlight(stream) && state === 'writable') {\n                const backpressure = WritableStreamDefaultControllerGetBackpressure(controller);\n                WritableStreamUpdateBackpressure(stream, backpressure);\n            }\n            WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n        }, reason => {\n            if (stream._state === 'writable') {\n                WritableStreamDefaultControllerClearAlgorithms(controller);\n            }\n            WritableStreamFinishInFlightWriteWithError(stream, reason);\n        });\n    }\n    function WritableStreamDefaultControllerGetBackpressure(controller) {\n        const desiredSize = WritableStreamDefaultControllerGetDesiredSize(controller);\n        return desiredSize <= 0;\n    }\n    // A client of WritableStreamDefaultController may use these functions directly to bypass state check.\n    function WritableStreamDefaultControllerError(controller, error) {\n        const stream = controller._controlledWritableStream;\n        WritableStreamDefaultControllerClearAlgorithms(controller);\n        WritableStreamStartErroring(stream, error);\n    }\n    // Helper functions for the WritableStream.\n    function streamBrandCheckException$2(name) {\n        return new TypeError(`WritableStream.prototype.${name} can only be used on a WritableStream`);\n    }\n    // Helper functions for the WritableStreamDefaultController.\n    function defaultControllerBrandCheckException$2(name) {\n        return new TypeError(`WritableStreamDefaultController.prototype.${name} can only be used on a WritableStreamDefaultController`);\n    }\n    // Helper functions for the WritableStreamDefaultWriter.\n    function defaultWriterBrandCheckException(name) {\n        return new TypeError(`WritableStreamDefaultWriter.prototype.${name} can only be used on a WritableStreamDefaultWriter`);\n    }\n    function defaultWriterLockException(name) {\n        return new TypeError('Cannot ' + name + ' a stream using a released writer');\n    }\n    function defaultWriterClosedPromiseInitialize(writer) {\n        writer._closedPromise = newPromise((resolve, reject) => {\n            writer._closedPromise_resolve = resolve;\n            writer._closedPromise_reject = reject;\n            writer._closedPromiseState = 'pending';\n        });\n    }\n    function defaultWriterClosedPromiseInitializeAsRejected(writer, reason) {\n        defaultWriterClosedPromiseInitialize(writer);\n        defaultWriterClosedPromiseReject(writer, reason);\n    }\n    function defaultWriterClosedPromiseInitializeAsResolved(writer) {\n        defaultWriterClosedPromiseInitialize(writer);\n        defaultWriterClosedPromiseResolve(writer);\n    }\n    function defaultWriterClosedPromiseReject(writer, reason) {\n        if (writer._closedPromise_reject === undefined) {\n            return;\n        }\n        setPromiseIsHandledToTrue(writer._closedPromise);\n        writer._closedPromise_reject(reason);\n        writer._closedPromise_resolve = undefined;\n        writer._closedPromise_reject = undefined;\n        writer._closedPromiseState = 'rejected';\n    }\n    function defaultWriterClosedPromiseResetToRejected(writer, reason) {\n        defaultWriterClosedPromiseInitializeAsRejected(writer, reason);\n    }\n    function defaultWriterClosedPromiseResolve(writer) {\n        if (writer._closedPromise_resolve === undefined) {\n            return;\n        }\n        writer._closedPromise_resolve(undefined);\n        writer._closedPromise_resolve = undefined;\n        writer._closedPromise_reject = undefined;\n        writer._closedPromiseState = 'resolved';\n    }\n    function defaultWriterReadyPromiseInitialize(writer) {\n        writer._readyPromise = newPromise((resolve, reject) => {\n            writer._readyPromise_resolve = resolve;\n            writer._readyPromise_reject = reject;\n        });\n        writer._readyPromiseState = 'pending';\n    }\n    function defaultWriterReadyPromiseInitializeAsRejected(writer, reason) {\n        defaultWriterReadyPromiseInitialize(writer);\n        defaultWriterReadyPromiseReject(writer, reason);\n    }\n    function defaultWriterReadyPromiseInitializeAsResolved(writer) {\n        defaultWriterReadyPromiseInitialize(writer);\n        defaultWriterReadyPromiseResolve(writer);\n    }\n    function defaultWriterReadyPromiseReject(writer, reason) {\n        if (writer._readyPromise_reject === undefined) {\n            return;\n        }\n        setPromiseIsHandledToTrue(writer._readyPromise);\n        writer._readyPromise_reject(reason);\n        writer._readyPromise_resolve = undefined;\n        writer._readyPromise_reject = undefined;\n        writer._readyPromiseState = 'rejected';\n    }\n    function defaultWriterReadyPromiseReset(writer) {\n        defaultWriterReadyPromiseInitialize(writer);\n    }\n    function defaultWriterReadyPromiseResetToRejected(writer, reason) {\n        defaultWriterReadyPromiseInitializeAsRejected(writer, reason);\n    }\n    function defaultWriterReadyPromiseResolve(writer) {\n        if (writer._readyPromise_resolve === undefined) {\n            return;\n        }\n        writer._readyPromise_resolve(undefined);\n        writer._readyPromise_resolve = undefined;\n        writer._readyPromise_reject = undefined;\n        writer._readyPromiseState = 'fulfilled';\n    }\n\n    /// <reference lib=\"dom\" />\n    const NativeDOMException = typeof DOMException !== 'undefined' ? DOMException : undefined;\n\n    /// <reference types=\"node\" />\n    function isDOMExceptionConstructor(ctor) {\n        if (!(typeof ctor === 'function' || typeof ctor === 'object')) {\n            return false;\n        }\n        try {\n            new ctor();\n            return true;\n        }\n        catch (_a) {\n            return false;\n        }\n    }\n    function createDOMExceptionPolyfill() {\n        // eslint-disable-next-line no-shadow\n        const ctor = function DOMException(message, name) {\n            this.message = message || '';\n            this.name = name || 'Error';\n            if (Error.captureStackTrace) {\n                Error.captureStackTrace(this, this.constructor);\n            }\n        };\n        ctor.prototype = Object.create(Error.prototype);\n        Object.defineProperty(ctor.prototype, 'constructor', { value: ctor, writable: true, configurable: true });\n        return ctor;\n    }\n    // eslint-disable-next-line no-redeclare\n    const DOMException$1 = isDOMExceptionConstructor(NativeDOMException) ? NativeDOMException : createDOMExceptionPolyfill();\n\n    function ReadableStreamPipeTo(source, dest, preventClose, preventAbort, preventCancel, signal) {\n        const reader = AcquireReadableStreamDefaultReader(source);\n        const writer = AcquireWritableStreamDefaultWriter(dest);\n        source._disturbed = true;\n        let shuttingDown = false;\n        // This is used to keep track of the spec's requirement that we wait for ongoing writes during shutdown.\n        let currentWrite = promiseResolvedWith(undefined);\n        return newPromise((resolve, reject) => {\n            let abortAlgorithm;\n            if (signal !== undefined) {\n                abortAlgorithm = () => {\n                    const error = new DOMException$1('Aborted', 'AbortError');\n                    const actions = [];\n                    if (!preventAbort) {\n                        actions.push(() => {\n                            if (dest._state === 'writable') {\n                                return WritableStreamAbort(dest, error);\n                            }\n                            return promiseResolvedWith(undefined);\n                        });\n                    }\n                    if (!preventCancel) {\n                        actions.push(() => {\n                            if (source._state === 'readable') {\n                                return ReadableStreamCancel(source, error);\n                            }\n                            return promiseResolvedWith(undefined);\n                        });\n                    }\n                    shutdownWithAction(() => Promise.all(actions.map(action => action())), true, error);\n                };\n                if (signal.aborted) {\n                    abortAlgorithm();\n                    return;\n                }\n                signal.addEventListener('abort', abortAlgorithm);\n            }\n            // Using reader and writer, read all chunks from this and write them to dest\n            // - Backpressure must be enforced\n            // - Shutdown must stop all activity\n            function pipeLoop() {\n                return newPromise((resolveLoop, rejectLoop) => {\n                    function next(done) {\n                        if (done) {\n                            resolveLoop();\n                        }\n                        else {\n                            // Use `PerformPromiseThen` instead of `uponPromise` to avoid\n                            // adding unnecessary `.catch(rethrowAssertionErrorRejection)` handlers\n                            PerformPromiseThen(pipeStep(), next, rejectLoop);\n                        }\n                    }\n                    next(false);\n                });\n            }\n            function pipeStep() {\n                if (shuttingDown) {\n                    return promiseResolvedWith(true);\n                }\n                return PerformPromiseThen(writer._readyPromise, () => {\n                    return newPromise((resolveRead, rejectRead) => {\n                        ReadableStreamDefaultReaderRead(reader, {\n                            _chunkSteps: chunk => {\n                                currentWrite = PerformPromiseThen(WritableStreamDefaultWriterWrite(writer, chunk), undefined, noop);\n                                resolveRead(false);\n                            },\n                            _closeSteps: () => resolveRead(true),\n                            _errorSteps: rejectRead\n                        });\n                    });\n                });\n            }\n            // Errors must be propagated forward\n            isOrBecomesErrored(source, reader._closedPromise, storedError => {\n                if (!preventAbort) {\n                    shutdownWithAction(() => WritableStreamAbort(dest, storedError), true, storedError);\n                }\n                else {\n                    shutdown(true, storedError);\n                }\n            });\n            // Errors must be propagated backward\n            isOrBecomesErrored(dest, writer._closedPromise, storedError => {\n                if (!preventCancel) {\n                    shutdownWithAction(() => ReadableStreamCancel(source, storedError), true, storedError);\n                }\n                else {\n                    shutdown(true, storedError);\n                }\n            });\n            // Closing must be propagated forward\n            isOrBecomesClosed(source, reader._closedPromise, () => {\n                if (!preventClose) {\n                    shutdownWithAction(() => WritableStreamDefaultWriterCloseWithErrorPropagation(writer));\n                }\n                else {\n                    shutdown();\n                }\n            });\n            // Closing must be propagated backward\n            if (WritableStreamCloseQueuedOrInFlight(dest) || dest._state === 'closed') {\n                const destClosed = new TypeError('the destination writable stream closed before all data could be piped to it');\n                if (!preventCancel) {\n                    shutdownWithAction(() => ReadableStreamCancel(source, destClosed), true, destClosed);\n                }\n                else {\n                    shutdown(true, destClosed);\n                }\n            }\n            setPromiseIsHandledToTrue(pipeLoop());\n            function waitForWritesToFinish() {\n                // Another write may have started while we were waiting on this currentWrite, so we have to be sure to wait\n                // for that too.\n                const oldCurrentWrite = currentWrite;\n                return PerformPromiseThen(currentWrite, () => oldCurrentWrite !== currentWrite ? waitForWritesToFinish() : undefined);\n            }\n            function isOrBecomesErrored(stream, promise, action) {\n                if (stream._state === 'errored') {\n                    action(stream._storedError);\n                }\n                else {\n                    uponRejection(promise, action);\n                }\n            }\n            function isOrBecomesClosed(stream, promise, action) {\n                if (stream._state === 'closed') {\n                    action();\n                }\n                else {\n                    uponFulfillment(promise, action);\n                }\n            }\n            function shutdownWithAction(action, originalIsError, originalError) {\n                if (shuttingDown) {\n                    return;\n                }\n                shuttingDown = true;\n                if (dest._state === 'writable' && !WritableStreamCloseQueuedOrInFlight(dest)) {\n                    uponFulfillment(waitForWritesToFinish(), doTheRest);\n                }\n                else {\n                    doTheRest();\n                }\n                function doTheRest() {\n                    uponPromise(action(), () => finalize(originalIsError, originalError), newError => finalize(true, newError));\n                }\n            }\n            function shutdown(isError, error) {\n                if (shuttingDown) {\n                    return;\n                }\n                shuttingDown = true;\n                if (dest._state === 'writable' && !WritableStreamCloseQueuedOrInFlight(dest)) {\n                    uponFulfillment(waitForWritesToFinish(), () => finalize(isError, error));\n                }\n                else {\n                    finalize(isError, error);\n                }\n            }\n            function finalize(isError, error) {\n                WritableStreamDefaultWriterRelease(writer);\n                ReadableStreamReaderGenericRelease(reader);\n                if (signal !== undefined) {\n                    signal.removeEventListener('abort', abortAlgorithm);\n                }\n                if (isError) {\n                    reject(error);\n                }\n                else {\n                    resolve(undefined);\n                }\n            }\n        });\n    }\n\n    /**\n     * Allows control of a {@link ReadableStream | readable stream}'s state and internal queue.\n     *\n     * @public\n     */\n    class ReadableStreamDefaultController {\n        constructor() {\n            throw new TypeError('Illegal constructor');\n        }\n        /**\n         * Returns the desired size to fill the controlled stream's internal queue. It can be negative, if the queue is\n         * over-full. An underlying source ought to use this information to determine when and how to apply backpressure.\n         */\n        get desiredSize() {\n            if (!IsReadableStreamDefaultController(this)) {\n                throw defaultControllerBrandCheckException$1('desiredSize');\n            }\n            return ReadableStreamDefaultControllerGetDesiredSize(this);\n        }\n        /**\n         * Closes the controlled readable stream. Consumers will still be able to read any previously-enqueued chunks from\n         * the stream, but once those are read, the stream will become closed.\n         */\n        close() {\n            if (!IsReadableStreamDefaultController(this)) {\n                throw defaultControllerBrandCheckException$1('close');\n            }\n            if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(this)) {\n                throw new TypeError('The stream is not in a state that permits close');\n            }\n            ReadableStreamDefaultControllerClose(this);\n        }\n        enqueue(chunk = undefined) {\n            if (!IsReadableStreamDefaultController(this)) {\n                throw defaultControllerBrandCheckException$1('enqueue');\n            }\n            if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(this)) {\n                throw new TypeError('The stream is not in a state that permits enqueue');\n            }\n            return ReadableStreamDefaultControllerEnqueue(this, chunk);\n        }\n        /**\n         * Errors the controlled readable stream, making all future interactions with it fail with the given error `e`.\n         */\n        error(e = undefined) {\n            if (!IsReadableStreamDefaultController(this)) {\n                throw defaultControllerBrandCheckException$1('error');\n            }\n            ReadableStreamDefaultControllerError(this, e);\n        }\n        /** @internal */\n        [CancelSteps](reason) {\n            ResetQueue(this);\n            const result = this._cancelAlgorithm(reason);\n            ReadableStreamDefaultControllerClearAlgorithms(this);\n            return result;\n        }\n        /** @internal */\n        [PullSteps](readRequest) {\n            const stream = this._controlledReadableStream;\n            if (this._queue.length > 0) {\n                const chunk = DequeueValue(this);\n                if (this._closeRequested && this._queue.length === 0) {\n                    ReadableStreamDefaultControllerClearAlgorithms(this);\n                    ReadableStreamClose(stream);\n                }\n                else {\n                    ReadableStreamDefaultControllerCallPullIfNeeded(this);\n                }\n                readRequest._chunkSteps(chunk);\n            }\n            else {\n                ReadableStreamAddReadRequest(stream, readRequest);\n                ReadableStreamDefaultControllerCallPullIfNeeded(this);\n            }\n        }\n    }\n    Object.defineProperties(ReadableStreamDefaultController.prototype, {\n        close: { enumerable: true },\n        enqueue: { enumerable: true },\n        error: { enumerable: true },\n        desiredSize: { enumerable: true }\n    });\n    if (typeof SymbolPolyfill.toStringTag === 'symbol') {\n        Object.defineProperty(ReadableStreamDefaultController.prototype, SymbolPolyfill.toStringTag, {\n            value: 'ReadableStreamDefaultController',\n            configurable: true\n        });\n    }\n    // Abstract operations for the ReadableStreamDefaultController.\n    function IsReadableStreamDefaultController(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_controlledReadableStream')) {\n            return false;\n        }\n        return x instanceof ReadableStreamDefaultController;\n    }\n    function ReadableStreamDefaultControllerCallPullIfNeeded(controller) {\n        const shouldPull = ReadableStreamDefaultControllerShouldCallPull(controller);\n        if (!shouldPull) {\n            return;\n        }\n        if (controller._pulling) {\n            controller._pullAgain = true;\n            return;\n        }\n        controller._pulling = true;\n        const pullPromise = controller._pullAlgorithm();\n        uponPromise(pullPromise, () => {\n            controller._pulling = false;\n            if (controller._pullAgain) {\n                controller._pullAgain = false;\n                ReadableStreamDefaultControllerCallPullIfNeeded(controller);\n            }\n        }, e => {\n            ReadableStreamDefaultControllerError(controller, e);\n        });\n    }\n    function ReadableStreamDefaultControllerShouldCallPull(controller) {\n        const stream = controller._controlledReadableStream;\n        if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(controller)) {\n            return false;\n        }\n        if (!controller._started) {\n            return false;\n        }\n        if (IsReadableStreamLocked(stream) && ReadableStreamGetNumReadRequests(stream) > 0) {\n            return true;\n        }\n        const desiredSize = ReadableStreamDefaultControllerGetDesiredSize(controller);\n        if (desiredSize > 0) {\n            return true;\n        }\n        return false;\n    }\n    function ReadableStreamDefaultControllerClearAlgorithms(controller) {\n        controller._pullAlgorithm = undefined;\n        controller._cancelAlgorithm = undefined;\n        controller._strategySizeAlgorithm = undefined;\n    }\n    // A client of ReadableStreamDefaultController may use these functions directly to bypass state check.\n    function ReadableStreamDefaultControllerClose(controller) {\n        if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(controller)) {\n            return;\n        }\n        const stream = controller._controlledReadableStream;\n        controller._closeRequested = true;\n        if (controller._queue.length === 0) {\n            ReadableStreamDefaultControllerClearAlgorithms(controller);\n            ReadableStreamClose(stream);\n        }\n    }\n    function ReadableStreamDefaultControllerEnqueue(controller, chunk) {\n        if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(controller)) {\n            return;\n        }\n        const stream = controller._controlledReadableStream;\n        if (IsReadableStreamLocked(stream) && ReadableStreamGetNumReadRequests(stream) > 0) {\n            ReadableStreamFulfillReadRequest(stream, chunk, false);\n        }\n        else {\n            let chunkSize;\n            try {\n                chunkSize = controller._strategySizeAlgorithm(chunk);\n            }\n            catch (chunkSizeE) {\n                ReadableStreamDefaultControllerError(controller, chunkSizeE);\n                throw chunkSizeE;\n            }\n            try {\n                EnqueueValueWithSize(controller, chunk, chunkSize);\n            }\n            catch (enqueueE) {\n                ReadableStreamDefaultControllerError(controller, enqueueE);\n                throw enqueueE;\n            }\n        }\n        ReadableStreamDefaultControllerCallPullIfNeeded(controller);\n    }\n    function ReadableStreamDefaultControllerError(controller, e) {\n        const stream = controller._controlledReadableStream;\n        if (stream._state !== 'readable') {\n            return;\n        }\n        ResetQueue(controller);\n        ReadableStreamDefaultControllerClearAlgorithms(controller);\n        ReadableStreamError(stream, e);\n    }\n    function ReadableStreamDefaultControllerGetDesiredSize(controller) {\n        const state = controller._controlledReadableStream._state;\n        if (state === 'errored') {\n            return null;\n        }\n        if (state === 'closed') {\n            return 0;\n        }\n        return controller._strategyHWM - controller._queueTotalSize;\n    }\n    // This is used in the implementation of TransformStream.\n    function ReadableStreamDefaultControllerHasBackpressure(controller) {\n        if (ReadableStreamDefaultControllerShouldCallPull(controller)) {\n            return false;\n        }\n        return true;\n    }\n    function ReadableStreamDefaultControllerCanCloseOrEnqueue(controller) {\n        const state = controller._controlledReadableStream._state;\n        if (!controller._closeRequested && state === 'readable') {\n            return true;\n        }\n        return false;\n    }\n    function SetUpReadableStreamDefaultController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, sizeAlgorithm) {\n        controller._controlledReadableStream = stream;\n        controller._queue = undefined;\n        controller._queueTotalSize = undefined;\n        ResetQueue(controller);\n        controller._started = false;\n        controller._closeRequested = false;\n        controller._pullAgain = false;\n        controller._pulling = false;\n        controller._strategySizeAlgorithm = sizeAlgorithm;\n        controller._strategyHWM = highWaterMark;\n        controller._pullAlgorithm = pullAlgorithm;\n        controller._cancelAlgorithm = cancelAlgorithm;\n        stream._readableStreamController = controller;\n        const startResult = startAlgorithm();\n        uponPromise(promiseResolvedWith(startResult), () => {\n            controller._started = true;\n            ReadableStreamDefaultControllerCallPullIfNeeded(controller);\n        }, r => {\n            ReadableStreamDefaultControllerError(controller, r);\n        });\n    }\n    function SetUpReadableStreamDefaultControllerFromUnderlyingSource(stream, underlyingSource, highWaterMark, sizeAlgorithm) {\n        const controller = Object.create(ReadableStreamDefaultController.prototype);\n        let startAlgorithm = () => undefined;\n        let pullAlgorithm = () => promiseResolvedWith(undefined);\n        let cancelAlgorithm = () => promiseResolvedWith(undefined);\n        if (underlyingSource.start !== undefined) {\n            startAlgorithm = () => underlyingSource.start(controller);\n        }\n        if (underlyingSource.pull !== undefined) {\n            pullAlgorithm = () => underlyingSource.pull(controller);\n        }\n        if (underlyingSource.cancel !== undefined) {\n            cancelAlgorithm = reason => underlyingSource.cancel(reason);\n        }\n        SetUpReadableStreamDefaultController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, sizeAlgorithm);\n    }\n    // Helper functions for the ReadableStreamDefaultController.\n    function defaultControllerBrandCheckException$1(name) {\n        return new TypeError(`ReadableStreamDefaultController.prototype.${name} can only be used on a ReadableStreamDefaultController`);\n    }\n\n    function ReadableStreamTee(stream, cloneForBranch2) {\n        if (IsReadableByteStreamController(stream._readableStreamController)) {\n            return ReadableByteStreamTee(stream);\n        }\n        return ReadableStreamDefaultTee(stream);\n    }\n    function ReadableStreamDefaultTee(stream, cloneForBranch2) {\n        const reader = AcquireReadableStreamDefaultReader(stream);\n        let reading = false;\n        let readAgain = false;\n        let canceled1 = false;\n        let canceled2 = false;\n        let reason1;\n        let reason2;\n        let branch1;\n        let branch2;\n        let resolveCancelPromise;\n        const cancelPromise = newPromise(resolve => {\n            resolveCancelPromise = resolve;\n        });\n        function pullAlgorithm() {\n            if (reading) {\n                readAgain = true;\n                return promiseResolvedWith(undefined);\n            }\n            reading = true;\n            const readRequest = {\n                _chunkSteps: chunk => {\n                    // This needs to be delayed a microtask because it takes at least a microtask to detect errors (using\n                    // reader._closedPromise below), and we want errors in stream to error both branches immediately. We cannot let\n                    // successful synchronously-available reads get ahead of asynchronously-available errors.\n                    queueMicrotask(() => {\n                        readAgain = false;\n                        const chunk1 = chunk;\n                        const chunk2 = chunk;\n                        // There is no way to access the cloning code right now in the reference implementation.\n                        // If we add one then we'll need an implementation for serializable objects.\n                        // if (!canceled2 && cloneForBranch2) {\n                        //   chunk2 = StructuredDeserialize(StructuredSerialize(chunk2));\n                        // }\n                        if (!canceled1) {\n                            ReadableStreamDefaultControllerEnqueue(branch1._readableStreamController, chunk1);\n                        }\n                        if (!canceled2) {\n                            ReadableStreamDefaultControllerEnqueue(branch2._readableStreamController, chunk2);\n                        }\n                        reading = false;\n                        if (readAgain) {\n                            pullAlgorithm();\n                        }\n                    });\n                },\n                _closeSteps: () => {\n                    reading = false;\n                    if (!canceled1) {\n                        ReadableStreamDefaultControllerClose(branch1._readableStreamController);\n                    }\n                    if (!canceled2) {\n                        ReadableStreamDefaultControllerClose(branch2._readableStreamController);\n                    }\n                    if (!canceled1 || !canceled2) {\n                        resolveCancelPromise(undefined);\n                    }\n                },\n                _errorSteps: () => {\n                    reading = false;\n                }\n            };\n            ReadableStreamDefaultReaderRead(reader, readRequest);\n            return promiseResolvedWith(undefined);\n        }\n        function cancel1Algorithm(reason) {\n            canceled1 = true;\n            reason1 = reason;\n            if (canceled2) {\n                const compositeReason = CreateArrayFromList([reason1, reason2]);\n                const cancelResult = ReadableStreamCancel(stream, compositeReason);\n                resolveCancelPromise(cancelResult);\n            }\n            return cancelPromise;\n        }\n        function cancel2Algorithm(reason) {\n            canceled2 = true;\n            reason2 = reason;\n            if (canceled1) {\n                const compositeReason = CreateArrayFromList([reason1, reason2]);\n                const cancelResult = ReadableStreamCancel(stream, compositeReason);\n                resolveCancelPromise(cancelResult);\n            }\n            return cancelPromise;\n        }\n        function startAlgorithm() {\n            // do nothing\n        }\n        branch1 = CreateReadableStream(startAlgorithm, pullAlgorithm, cancel1Algorithm);\n        branch2 = CreateReadableStream(startAlgorithm, pullAlgorithm, cancel2Algorithm);\n        uponRejection(reader._closedPromise, (r) => {\n            ReadableStreamDefaultControllerError(branch1._readableStreamController, r);\n            ReadableStreamDefaultControllerError(branch2._readableStreamController, r);\n            if (!canceled1 || !canceled2) {\n                resolveCancelPromise(undefined);\n            }\n        });\n        return [branch1, branch2];\n    }\n    function ReadableByteStreamTee(stream) {\n        let reader = AcquireReadableStreamDefaultReader(stream);\n        let reading = false;\n        let readAgainForBranch1 = false;\n        let readAgainForBranch2 = false;\n        let canceled1 = false;\n        let canceled2 = false;\n        let reason1;\n        let reason2;\n        let branch1;\n        let branch2;\n        let resolveCancelPromise;\n        const cancelPromise = newPromise(resolve => {\n            resolveCancelPromise = resolve;\n        });\n        function forwardReaderError(thisReader) {\n            uponRejection(thisReader._closedPromise, r => {\n                if (thisReader !== reader) {\n                    return;\n                }\n                ReadableByteStreamControllerError(branch1._readableStreamController, r);\n                ReadableByteStreamControllerError(branch2._readableStreamController, r);\n                if (!canceled1 || !canceled2) {\n                    resolveCancelPromise(undefined);\n                }\n            });\n        }\n        function pullWithDefaultReader() {\n            if (IsReadableStreamBYOBReader(reader)) {\n                ReadableStreamReaderGenericRelease(reader);\n                reader = AcquireReadableStreamDefaultReader(stream);\n                forwardReaderError(reader);\n            }\n            const readRequest = {\n                _chunkSteps: chunk => {\n                    // This needs to be delayed a microtask because it takes at least a microtask to detect errors (using\n                    // reader._closedPromise below), and we want errors in stream to error both branches immediately. We cannot let\n                    // successful synchronously-available reads get ahead of asynchronously-available errors.\n                    queueMicrotask(() => {\n                        readAgainForBranch1 = false;\n                        readAgainForBranch2 = false;\n                        const chunk1 = chunk;\n                        let chunk2 = chunk;\n                        if (!canceled1 && !canceled2) {\n                            try {\n                                chunk2 = CloneAsUint8Array(chunk);\n                            }\n                            catch (cloneE) {\n                                ReadableByteStreamControllerError(branch1._readableStreamController, cloneE);\n                                ReadableByteStreamControllerError(branch2._readableStreamController, cloneE);\n                                resolveCancelPromise(ReadableStreamCancel(stream, cloneE));\n                                return;\n                            }\n                        }\n                        if (!canceled1) {\n                            ReadableByteStreamControllerEnqueue(branch1._readableStreamController, chunk1);\n                        }\n                        if (!canceled2) {\n                            ReadableByteStreamControllerEnqueue(branch2._readableStreamController, chunk2);\n                        }\n                        reading = false;\n                        if (readAgainForBranch1) {\n                            pull1Algorithm();\n                        }\n                        else if (readAgainForBranch2) {\n                            pull2Algorithm();\n                        }\n                    });\n                },\n                _closeSteps: () => {\n                    reading = false;\n                    if (!canceled1) {\n                        ReadableByteStreamControllerClose(branch1._readableStreamController);\n                    }\n                    if (!canceled2) {\n                        ReadableByteStreamControllerClose(branch2._readableStreamController);\n                    }\n                    if (branch1._readableStreamController._pendingPullIntos.length > 0) {\n                        ReadableByteStreamControllerRespond(branch1._readableStreamController, 0);\n                    }\n                    if (branch2._readableStreamController._pendingPullIntos.length > 0) {\n                        ReadableByteStreamControllerRespond(branch2._readableStreamController, 0);\n                    }\n                    if (!canceled1 || !canceled2) {\n                        resolveCancelPromise(undefined);\n                    }\n                },\n                _errorSteps: () => {\n                    reading = false;\n                }\n            };\n            ReadableStreamDefaultReaderRead(reader, readRequest);\n        }\n        function pullWithBYOBReader(view, forBranch2) {\n            if (IsReadableStreamDefaultReader(reader)) {\n                ReadableStreamReaderGenericRelease(reader);\n                reader = AcquireReadableStreamBYOBReader(stream);\n                forwardReaderError(reader);\n            }\n            const byobBranch = forBranch2 ? branch2 : branch1;\n            const otherBranch = forBranch2 ? branch1 : branch2;\n            const readIntoRequest = {\n                _chunkSteps: chunk => {\n                    // This needs to be delayed a microtask because it takes at least a microtask to detect errors (using\n                    // reader._closedPromise below), and we want errors in stream to error both branches immediately. We cannot let\n                    // successful synchronously-available reads get ahead of asynchronously-available errors.\n                    queueMicrotask(() => {\n                        readAgainForBranch1 = false;\n                        readAgainForBranch2 = false;\n                        const byobCanceled = forBranch2 ? canceled2 : canceled1;\n                        const otherCanceled = forBranch2 ? canceled1 : canceled2;\n                        if (!otherCanceled) {\n                            let clonedChunk;\n                            try {\n                                clonedChunk = CloneAsUint8Array(chunk);\n                            }\n                            catch (cloneE) {\n                                ReadableByteStreamControllerError(byobBranch._readableStreamController, cloneE);\n                                ReadableByteStreamControllerError(otherBranch._readableStreamController, cloneE);\n                                resolveCancelPromise(ReadableStreamCancel(stream, cloneE));\n                                return;\n                            }\n                            if (!byobCanceled) {\n                                ReadableByteStreamControllerRespondWithNewView(byobBranch._readableStreamController, chunk);\n                            }\n                            ReadableByteStreamControllerEnqueue(otherBranch._readableStreamController, clonedChunk);\n                        }\n                        else if (!byobCanceled) {\n                            ReadableByteStreamControllerRespondWithNewView(byobBranch._readableStreamController, chunk);\n                        }\n                        reading = false;\n                        if (readAgainForBranch1) {\n                            pull1Algorithm();\n                        }\n                        else if (readAgainForBranch2) {\n                            pull2Algorithm();\n                        }\n                    });\n                },\n                _closeSteps: chunk => {\n                    reading = false;\n                    const byobCanceled = forBranch2 ? canceled2 : canceled1;\n                    const otherCanceled = forBranch2 ? canceled1 : canceled2;\n                    if (!byobCanceled) {\n                        ReadableByteStreamControllerClose(byobBranch._readableStreamController);\n                    }\n                    if (!otherCanceled) {\n                        ReadableByteStreamControllerClose(otherBranch._readableStreamController);\n                    }\n                    if (chunk !== undefined) {\n                        if (!byobCanceled) {\n                            ReadableByteStreamControllerRespondWithNewView(byobBranch._readableStreamController, chunk);\n                        }\n                        if (!otherCanceled && otherBranch._readableStreamController._pendingPullIntos.length > 0) {\n                            ReadableByteStreamControllerRespond(otherBranch._readableStreamController, 0);\n                        }\n                    }\n                    if (!byobCanceled || !otherCanceled) {\n                        resolveCancelPromise(undefined);\n                    }\n                },\n                _errorSteps: () => {\n                    reading = false;\n                }\n            };\n            ReadableStreamBYOBReaderRead(reader, view, readIntoRequest);\n        }\n        function pull1Algorithm() {\n            if (reading) {\n                readAgainForBranch1 = true;\n                return promiseResolvedWith(undefined);\n            }\n            reading = true;\n            const byobRequest = ReadableByteStreamControllerGetBYOBRequest(branch1._readableStreamController);\n            if (byobRequest === null) {\n                pullWithDefaultReader();\n            }\n            else {\n                pullWithBYOBReader(byobRequest._view, false);\n            }\n            return promiseResolvedWith(undefined);\n        }\n        function pull2Algorithm() {\n            if (reading) {\n                readAgainForBranch2 = true;\n                return promiseResolvedWith(undefined);\n            }\n            reading = true;\n            const byobRequest = ReadableByteStreamControllerGetBYOBRequest(branch2._readableStreamController);\n            if (byobRequest === null) {\n                pullWithDefaultReader();\n            }\n            else {\n                pullWithBYOBReader(byobRequest._view, true);\n            }\n            return promiseResolvedWith(undefined);\n        }\n        function cancel1Algorithm(reason) {\n            canceled1 = true;\n            reason1 = reason;\n            if (canceled2) {\n                const compositeReason = CreateArrayFromList([reason1, reason2]);\n                const cancelResult = ReadableStreamCancel(stream, compositeReason);\n                resolveCancelPromise(cancelResult);\n            }\n            return cancelPromise;\n        }\n        function cancel2Algorithm(reason) {\n            canceled2 = true;\n            reason2 = reason;\n            if (canceled1) {\n                const compositeReason = CreateArrayFromList([reason1, reason2]);\n                const cancelResult = ReadableStreamCancel(stream, compositeReason);\n                resolveCancelPromise(cancelResult);\n            }\n            return cancelPromise;\n        }\n        function startAlgorithm() {\n            return;\n        }\n        branch1 = CreateReadableByteStream(startAlgorithm, pull1Algorithm, cancel1Algorithm);\n        branch2 = CreateReadableByteStream(startAlgorithm, pull2Algorithm, cancel2Algorithm);\n        forwardReaderError(reader);\n        return [branch1, branch2];\n    }\n\n    function convertUnderlyingDefaultOrByteSource(source, context) {\n        assertDictionary(source, context);\n        const original = source;\n        const autoAllocateChunkSize = original === null || original === void 0 ? void 0 : original.autoAllocateChunkSize;\n        const cancel = original === null || original === void 0 ? void 0 : original.cancel;\n        const pull = original === null || original === void 0 ? void 0 : original.pull;\n        const start = original === null || original === void 0 ? void 0 : original.start;\n        const type = original === null || original === void 0 ? void 0 : original.type;\n        return {\n            autoAllocateChunkSize: autoAllocateChunkSize === undefined ?\n                undefined :\n                convertUnsignedLongLongWithEnforceRange(autoAllocateChunkSize, `${context} has member 'autoAllocateChunkSize' that`),\n            cancel: cancel === undefined ?\n                undefined :\n                convertUnderlyingSourceCancelCallback(cancel, original, `${context} has member 'cancel' that`),\n            pull: pull === undefined ?\n                undefined :\n                convertUnderlyingSourcePullCallback(pull, original, `${context} has member 'pull' that`),\n            start: start === undefined ?\n                undefined :\n                convertUnderlyingSourceStartCallback(start, original, `${context} has member 'start' that`),\n            type: type === undefined ? undefined : convertReadableStreamType(type, `${context} has member 'type' that`)\n        };\n    }\n    function convertUnderlyingSourceCancelCallback(fn, original, context) {\n        assertFunction(fn, context);\n        return (reason) => promiseCall(fn, original, [reason]);\n    }\n    function convertUnderlyingSourcePullCallback(fn, original, context) {\n        assertFunction(fn, context);\n        return (controller) => promiseCall(fn, original, [controller]);\n    }\n    function convertUnderlyingSourceStartCallback(fn, original, context) {\n        assertFunction(fn, context);\n        return (controller) => reflectCall(fn, original, [controller]);\n    }\n    function convertReadableStreamType(type, context) {\n        type = `${type}`;\n        if (type !== 'bytes') {\n            throw new TypeError(`${context} '${type}' is not a valid enumeration value for ReadableStreamType`);\n        }\n        return type;\n    }\n\n    function convertReaderOptions(options, context) {\n        assertDictionary(options, context);\n        const mode = options === null || options === void 0 ? void 0 : options.mode;\n        return {\n            mode: mode === undefined ? undefined : convertReadableStreamReaderMode(mode, `${context} has member 'mode' that`)\n        };\n    }\n    function convertReadableStreamReaderMode(mode, context) {\n        mode = `${mode}`;\n        if (mode !== 'byob') {\n            throw new TypeError(`${context} '${mode}' is not a valid enumeration value for ReadableStreamReaderMode`);\n        }\n        return mode;\n    }\n\n    function convertIteratorOptions(options, context) {\n        assertDictionary(options, context);\n        const preventCancel = options === null || options === void 0 ? void 0 : options.preventCancel;\n        return { preventCancel: Boolean(preventCancel) };\n    }\n\n    function convertPipeOptions(options, context) {\n        assertDictionary(options, context);\n        const preventAbort = options === null || options === void 0 ? void 0 : options.preventAbort;\n        const preventCancel = options === null || options === void 0 ? void 0 : options.preventCancel;\n        const preventClose = options === null || options === void 0 ? void 0 : options.preventClose;\n        const signal = options === null || options === void 0 ? void 0 : options.signal;\n        if (signal !== undefined) {\n            assertAbortSignal(signal, `${context} has member 'signal' that`);\n        }\n        return {\n            preventAbort: Boolean(preventAbort),\n            preventCancel: Boolean(preventCancel),\n            preventClose: Boolean(preventClose),\n            signal\n        };\n    }\n    function assertAbortSignal(signal, context) {\n        if (!isAbortSignal(signal)) {\n            throw new TypeError(`${context} is not an AbortSignal.`);\n        }\n    }\n\n    function convertReadableWritablePair(pair, context) {\n        assertDictionary(pair, context);\n        const readable = pair === null || pair === void 0 ? void 0 : pair.readable;\n        assertRequiredField(readable, 'readable', 'ReadableWritablePair');\n        assertReadableStream(readable, `${context} has member 'readable' that`);\n        const writable = pair === null || pair === void 0 ? void 0 : pair.writable;\n        assertRequiredField(writable, 'writable', 'ReadableWritablePair');\n        assertWritableStream(writable, `${context} has member 'writable' that`);\n        return { readable, writable };\n    }\n\n    /**\n     * A readable stream represents a source of data, from which you can read.\n     *\n     * @public\n     */\n    class ReadableStream {\n        constructor(rawUnderlyingSource = {}, rawStrategy = {}) {\n            if (rawUnderlyingSource === undefined) {\n                rawUnderlyingSource = null;\n            }\n            else {\n                assertObject(rawUnderlyingSource, 'First parameter');\n            }\n            const strategy = convertQueuingStrategy(rawStrategy, 'Second parameter');\n            const underlyingSource = convertUnderlyingDefaultOrByteSource(rawUnderlyingSource, 'First parameter');\n            InitializeReadableStream(this);\n            if (underlyingSource.type === 'bytes') {\n                if (strategy.size !== undefined) {\n                    throw new RangeError('The strategy for a byte stream cannot have a size function');\n                }\n                const highWaterMark = ExtractHighWaterMark(strategy, 0);\n                SetUpReadableByteStreamControllerFromUnderlyingSource(this, underlyingSource, highWaterMark);\n            }\n            else {\n                const sizeAlgorithm = ExtractSizeAlgorithm(strategy);\n                const highWaterMark = ExtractHighWaterMark(strategy, 1);\n                SetUpReadableStreamDefaultControllerFromUnderlyingSource(this, underlyingSource, highWaterMark, sizeAlgorithm);\n            }\n        }\n        /**\n         * Whether or not the readable stream is locked to a {@link ReadableStreamDefaultReader | reader}.\n         */\n        get locked() {\n            if (!IsReadableStream(this)) {\n                throw streamBrandCheckException$1('locked');\n            }\n            return IsReadableStreamLocked(this);\n        }\n        /**\n         * Cancels the stream, signaling a loss of interest in the stream by a consumer.\n         *\n         * The supplied `reason` argument will be given to the underlying source's {@link UnderlyingSource.cancel | cancel()}\n         * method, which might or might not use it.\n         */\n        cancel(reason = undefined) {\n            if (!IsReadableStream(this)) {\n                return promiseRejectedWith(streamBrandCheckException$1('cancel'));\n            }\n            if (IsReadableStreamLocked(this)) {\n                return promiseRejectedWith(new TypeError('Cannot cancel a stream that already has a reader'));\n            }\n            return ReadableStreamCancel(this, reason);\n        }\n        getReader(rawOptions = undefined) {\n            if (!IsReadableStream(this)) {\n                throw streamBrandCheckException$1('getReader');\n            }\n            const options = convertReaderOptions(rawOptions, 'First parameter');\n            if (options.mode === undefined) {\n                return AcquireReadableStreamDefaultReader(this);\n            }\n            return AcquireReadableStreamBYOBReader(this);\n        }\n        pipeThrough(rawTransform, rawOptions = {}) {\n            if (!IsReadableStream(this)) {\n                throw streamBrandCheckException$1('pipeThrough');\n            }\n            assertRequiredArgument(rawTransform, 1, 'pipeThrough');\n            const transform = convertReadableWritablePair(rawTransform, 'First parameter');\n            const options = convertPipeOptions(rawOptions, 'Second parameter');\n            if (IsReadableStreamLocked(this)) {\n                throw new TypeError('ReadableStream.prototype.pipeThrough cannot be used on a locked ReadableStream');\n            }\n            if (IsWritableStreamLocked(transform.writable)) {\n                throw new TypeError('ReadableStream.prototype.pipeThrough cannot be used on a locked WritableStream');\n            }\n            const promise = ReadableStreamPipeTo(this, transform.writable, options.preventClose, options.preventAbort, options.preventCancel, options.signal);\n            setPromiseIsHandledToTrue(promise);\n            return transform.readable;\n        }\n        pipeTo(destination, rawOptions = {}) {\n            if (!IsReadableStream(this)) {\n                return promiseRejectedWith(streamBrandCheckException$1('pipeTo'));\n            }\n            if (destination === undefined) {\n                return promiseRejectedWith(`Parameter 1 is required in 'pipeTo'.`);\n            }\n            if (!IsWritableStream(destination)) {\n                return promiseRejectedWith(new TypeError(`ReadableStream.prototype.pipeTo's first argument must be a WritableStream`));\n            }\n            let options;\n            try {\n                options = convertPipeOptions(rawOptions, 'Second parameter');\n            }\n            catch (e) {\n                return promiseRejectedWith(e);\n            }\n            if (IsReadableStreamLocked(this)) {\n                return promiseRejectedWith(new TypeError('ReadableStream.prototype.pipeTo cannot be used on a locked ReadableStream'));\n            }\n            if (IsWritableStreamLocked(destination)) {\n                return promiseRejectedWith(new TypeError('ReadableStream.prototype.pipeTo cannot be used on a locked WritableStream'));\n            }\n            return ReadableStreamPipeTo(this, destination, options.preventClose, options.preventAbort, options.preventCancel, options.signal);\n        }\n        /**\n         * Tees this readable stream, returning a two-element array containing the two resulting branches as\n         * new {@link ReadableStream} instances.\n         *\n         * Teeing a stream will lock it, preventing any other consumer from acquiring a reader.\n         * To cancel the stream, cancel both of the resulting branches; a composite cancellation reason will then be\n         * propagated to the stream's underlying source.\n         *\n         * Note that the chunks seen in each branch will be the same object. If the chunks are not immutable,\n         * this could allow interference between the two branches.\n         */\n        tee() {\n            if (!IsReadableStream(this)) {\n                throw streamBrandCheckException$1('tee');\n            }\n            const branches = ReadableStreamTee(this);\n            return CreateArrayFromList(branches);\n        }\n        values(rawOptions = undefined) {\n            if (!IsReadableStream(this)) {\n                throw streamBrandCheckException$1('values');\n            }\n            const options = convertIteratorOptions(rawOptions, 'First parameter');\n            return AcquireReadableStreamAsyncIterator(this, options.preventCancel);\n        }\n    }\n    Object.defineProperties(ReadableStream.prototype, {\n        cancel: { enumerable: true },\n        getReader: { enumerable: true },\n        pipeThrough: { enumerable: true },\n        pipeTo: { enumerable: true },\n        tee: { enumerable: true },\n        values: { enumerable: true },\n        locked: { enumerable: true }\n    });\n    if (typeof SymbolPolyfill.toStringTag === 'symbol') {\n        Object.defineProperty(ReadableStream.prototype, SymbolPolyfill.toStringTag, {\n            value: 'ReadableStream',\n            configurable: true\n        });\n    }\n    if (typeof SymbolPolyfill.asyncIterator === 'symbol') {\n        Object.defineProperty(ReadableStream.prototype, SymbolPolyfill.asyncIterator, {\n            value: ReadableStream.prototype.values,\n            writable: true,\n            configurable: true\n        });\n    }\n    // Abstract operations for the ReadableStream.\n    // Throws if and only if startAlgorithm throws.\n    function CreateReadableStream(startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark = 1, sizeAlgorithm = () => 1) {\n        const stream = Object.create(ReadableStream.prototype);\n        InitializeReadableStream(stream);\n        const controller = Object.create(ReadableStreamDefaultController.prototype);\n        SetUpReadableStreamDefaultController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, sizeAlgorithm);\n        return stream;\n    }\n    // Throws if and only if startAlgorithm throws.\n    function CreateReadableByteStream(startAlgorithm, pullAlgorithm, cancelAlgorithm) {\n        const stream = Object.create(ReadableStream.prototype);\n        InitializeReadableStream(stream);\n        const controller = Object.create(ReadableByteStreamController.prototype);\n        SetUpReadableByteStreamController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, 0, undefined);\n        return stream;\n    }\n    function InitializeReadableStream(stream) {\n        stream._state = 'readable';\n        stream._reader = undefined;\n        stream._storedError = undefined;\n        stream._disturbed = false;\n    }\n    function IsReadableStream(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_readableStreamController')) {\n            return false;\n        }\n        return x instanceof ReadableStream;\n    }\n    function IsReadableStreamLocked(stream) {\n        if (stream._reader === undefined) {\n            return false;\n        }\n        return true;\n    }\n    // ReadableStream API exposed for controllers.\n    function ReadableStreamCancel(stream, reason) {\n        stream._disturbed = true;\n        if (stream._state === 'closed') {\n            return promiseResolvedWith(undefined);\n        }\n        if (stream._state === 'errored') {\n            return promiseRejectedWith(stream._storedError);\n        }\n        ReadableStreamClose(stream);\n        const reader = stream._reader;\n        if (reader !== undefined && IsReadableStreamBYOBReader(reader)) {\n            reader._readIntoRequests.forEach(readIntoRequest => {\n                readIntoRequest._closeSteps(undefined);\n            });\n            reader._readIntoRequests = new SimpleQueue();\n        }\n        const sourceCancelPromise = stream._readableStreamController[CancelSteps](reason);\n        return transformPromiseWith(sourceCancelPromise, noop);\n    }\n    function ReadableStreamClose(stream) {\n        stream._state = 'closed';\n        const reader = stream._reader;\n        if (reader === undefined) {\n            return;\n        }\n        defaultReaderClosedPromiseResolve(reader);\n        if (IsReadableStreamDefaultReader(reader)) {\n            reader._readRequests.forEach(readRequest => {\n                readRequest._closeSteps();\n            });\n            reader._readRequests = new SimpleQueue();\n        }\n    }\n    function ReadableStreamError(stream, e) {\n        stream._state = 'errored';\n        stream._storedError = e;\n        const reader = stream._reader;\n        if (reader === undefined) {\n            return;\n        }\n        defaultReaderClosedPromiseReject(reader, e);\n        if (IsReadableStreamDefaultReader(reader)) {\n            reader._readRequests.forEach(readRequest => {\n                readRequest._errorSteps(e);\n            });\n            reader._readRequests = new SimpleQueue();\n        }\n        else {\n            reader._readIntoRequests.forEach(readIntoRequest => {\n                readIntoRequest._errorSteps(e);\n            });\n            reader._readIntoRequests = new SimpleQueue();\n        }\n    }\n    // Helper functions for the ReadableStream.\n    function streamBrandCheckException$1(name) {\n        return new TypeError(`ReadableStream.prototype.${name} can only be used on a ReadableStream`);\n    }\n\n    function convertQueuingStrategyInit(init, context) {\n        assertDictionary(init, context);\n        const highWaterMark = init === null || init === void 0 ? void 0 : init.highWaterMark;\n        assertRequiredField(highWaterMark, 'highWaterMark', 'QueuingStrategyInit');\n        return {\n            highWaterMark: convertUnrestrictedDouble(highWaterMark)\n        };\n    }\n\n    // The size function must not have a prototype property nor be a constructor\n    const byteLengthSizeFunction = (chunk) => {\n        return chunk.byteLength;\n    };\n    try {\n        Object.defineProperty(byteLengthSizeFunction, 'name', {\n            value: 'size',\n            configurable: true\n        });\n    }\n    catch (_a) {\n        // This property is non-configurable in older browsers, so ignore if this throws.\n        // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name#browser_compatibility\n    }\n    /**\n     * A queuing strategy that counts the number of bytes in each chunk.\n     *\n     * @public\n     */\n    class ByteLengthQueuingStrategy {\n        constructor(options) {\n            assertRequiredArgument(options, 1, 'ByteLengthQueuingStrategy');\n            options = convertQueuingStrategyInit(options, 'First parameter');\n            this._byteLengthQueuingStrategyHighWaterMark = options.highWaterMark;\n        }\n        /**\n         * Returns the high water mark provided to the constructor.\n         */\n        get highWaterMark() {\n            if (!IsByteLengthQueuingStrategy(this)) {\n                throw byteLengthBrandCheckException('highWaterMark');\n            }\n            return this._byteLengthQueuingStrategyHighWaterMark;\n        }\n        /**\n         * Measures the size of `chunk` by returning the value of its `byteLength` property.\n         */\n        get size() {\n            if (!IsByteLengthQueuingStrategy(this)) {\n                throw byteLengthBrandCheckException('size');\n            }\n            return byteLengthSizeFunction;\n        }\n    }\n    Object.defineProperties(ByteLengthQueuingStrategy.prototype, {\n        highWaterMark: { enumerable: true },\n        size: { enumerable: true }\n    });\n    if (typeof SymbolPolyfill.toStringTag === 'symbol') {\n        Object.defineProperty(ByteLengthQueuingStrategy.prototype, SymbolPolyfill.toStringTag, {\n            value: 'ByteLengthQueuingStrategy',\n            configurable: true\n        });\n    }\n    // Helper functions for the ByteLengthQueuingStrategy.\n    function byteLengthBrandCheckException(name) {\n        return new TypeError(`ByteLengthQueuingStrategy.prototype.${name} can only be used on a ByteLengthQueuingStrategy`);\n    }\n    function IsByteLengthQueuingStrategy(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_byteLengthQueuingStrategyHighWaterMark')) {\n            return false;\n        }\n        return x instanceof ByteLengthQueuingStrategy;\n    }\n\n    // The size function must not have a prototype property nor be a constructor\n    const countSizeFunction = () => {\n        return 1;\n    };\n    try {\n        Object.defineProperty(countSizeFunction, 'name', {\n            value: 'size',\n            configurable: true\n        });\n    }\n    catch (_a) {\n        // This property is non-configurable in older browsers, so ignore if this throws.\n        // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name#browser_compatibility\n    }\n    /**\n     * A queuing strategy that counts the number of chunks.\n     *\n     * @public\n     */\n    class CountQueuingStrategy {\n        constructor(options) {\n            assertRequiredArgument(options, 1, 'CountQueuingStrategy');\n            options = convertQueuingStrategyInit(options, 'First parameter');\n            this._countQueuingStrategyHighWaterMark = options.highWaterMark;\n        }\n        /**\n         * Returns the high water mark provided to the constructor.\n         */\n        get highWaterMark() {\n            if (!IsCountQueuingStrategy(this)) {\n                throw countBrandCheckException('highWaterMark');\n            }\n            return this._countQueuingStrategyHighWaterMark;\n        }\n        /**\n         * Measures the size of `chunk` by always returning 1.\n         * This ensures that the total queue size is a count of the number of chunks in the queue.\n         */\n        get size() {\n            if (!IsCountQueuingStrategy(this)) {\n                throw countBrandCheckException('size');\n            }\n            return countSizeFunction;\n        }\n    }\n    Object.defineProperties(CountQueuingStrategy.prototype, {\n        highWaterMark: { enumerable: true },\n        size: { enumerable: true }\n    });\n    if (typeof SymbolPolyfill.toStringTag === 'symbol') {\n        Object.defineProperty(CountQueuingStrategy.prototype, SymbolPolyfill.toStringTag, {\n            value: 'CountQueuingStrategy',\n            configurable: true\n        });\n    }\n    // Helper functions for the CountQueuingStrategy.\n    function countBrandCheckException(name) {\n        return new TypeError(`CountQueuingStrategy.prototype.${name} can only be used on a CountQueuingStrategy`);\n    }\n    function IsCountQueuingStrategy(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_countQueuingStrategyHighWaterMark')) {\n            return false;\n        }\n        return x instanceof CountQueuingStrategy;\n    }\n\n    function convertTransformer(original, context) {\n        assertDictionary(original, context);\n        const flush = original === null || original === void 0 ? void 0 : original.flush;\n        const readableType = original === null || original === void 0 ? void 0 : original.readableType;\n        const start = original === null || original === void 0 ? void 0 : original.start;\n        const transform = original === null || original === void 0 ? void 0 : original.transform;\n        const writableType = original === null || original === void 0 ? void 0 : original.writableType;\n        return {\n            flush: flush === undefined ?\n                undefined :\n                convertTransformerFlushCallback(flush, original, `${context} has member 'flush' that`),\n            readableType,\n            start: start === undefined ?\n                undefined :\n                convertTransformerStartCallback(start, original, `${context} has member 'start' that`),\n            transform: transform === undefined ?\n                undefined :\n                convertTransformerTransformCallback(transform, original, `${context} has member 'transform' that`),\n            writableType\n        };\n    }\n    function convertTransformerFlushCallback(fn, original, context) {\n        assertFunction(fn, context);\n        return (controller) => promiseCall(fn, original, [controller]);\n    }\n    function convertTransformerStartCallback(fn, original, context) {\n        assertFunction(fn, context);\n        return (controller) => reflectCall(fn, original, [controller]);\n    }\n    function convertTransformerTransformCallback(fn, original, context) {\n        assertFunction(fn, context);\n        return (chunk, controller) => promiseCall(fn, original, [chunk, controller]);\n    }\n\n    // Class TransformStream\n    /**\n     * A transform stream consists of a pair of streams: a {@link WritableStream | writable stream},\n     * known as its writable side, and a {@link ReadableStream | readable stream}, known as its readable side.\n     * In a manner specific to the transform stream in question, writes to the writable side result in new data being\n     * made available for reading from the readable side.\n     *\n     * @public\n     */\n    class TransformStream {\n        constructor(rawTransformer = {}, rawWritableStrategy = {}, rawReadableStrategy = {}) {\n            if (rawTransformer === undefined) {\n                rawTransformer = null;\n            }\n            const writableStrategy = convertQueuingStrategy(rawWritableStrategy, 'Second parameter');\n            const readableStrategy = convertQueuingStrategy(rawReadableStrategy, 'Third parameter');\n            const transformer = convertTransformer(rawTransformer, 'First parameter');\n            if (transformer.readableType !== undefined) {\n                throw new RangeError('Invalid readableType specified');\n            }\n            if (transformer.writableType !== undefined) {\n                throw new RangeError('Invalid writableType specified');\n            }\n            const readableHighWaterMark = ExtractHighWaterMark(readableStrategy, 0);\n            const readableSizeAlgorithm = ExtractSizeAlgorithm(readableStrategy);\n            const writableHighWaterMark = ExtractHighWaterMark(writableStrategy, 1);\n            const writableSizeAlgorithm = ExtractSizeAlgorithm(writableStrategy);\n            let startPromise_resolve;\n            const startPromise = newPromise(resolve => {\n                startPromise_resolve = resolve;\n            });\n            InitializeTransformStream(this, startPromise, writableHighWaterMark, writableSizeAlgorithm, readableHighWaterMark, readableSizeAlgorithm);\n            SetUpTransformStreamDefaultControllerFromTransformer(this, transformer);\n            if (transformer.start !== undefined) {\n                startPromise_resolve(transformer.start(this._transformStreamController));\n            }\n            else {\n                startPromise_resolve(undefined);\n            }\n        }\n        /**\n         * The readable side of the transform stream.\n         */\n        get readable() {\n            if (!IsTransformStream(this)) {\n                throw streamBrandCheckException('readable');\n            }\n            return this._readable;\n        }\n        /**\n         * The writable side of the transform stream.\n         */\n        get writable() {\n            if (!IsTransformStream(this)) {\n                throw streamBrandCheckException('writable');\n            }\n            return this._writable;\n        }\n    }\n    Object.defineProperties(TransformStream.prototype, {\n        readable: { enumerable: true },\n        writable: { enumerable: true }\n    });\n    if (typeof SymbolPolyfill.toStringTag === 'symbol') {\n        Object.defineProperty(TransformStream.prototype, SymbolPolyfill.toStringTag, {\n            value: 'TransformStream',\n            configurable: true\n        });\n    }\n    function InitializeTransformStream(stream, startPromise, writableHighWaterMark, writableSizeAlgorithm, readableHighWaterMark, readableSizeAlgorithm) {\n        function startAlgorithm() {\n            return startPromise;\n        }\n        function writeAlgorithm(chunk) {\n            return TransformStreamDefaultSinkWriteAlgorithm(stream, chunk);\n        }\n        function abortAlgorithm(reason) {\n            return TransformStreamDefaultSinkAbortAlgorithm(stream, reason);\n        }\n        function closeAlgorithm() {\n            return TransformStreamDefaultSinkCloseAlgorithm(stream);\n        }\n        stream._writable = CreateWritableStream(startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, writableHighWaterMark, writableSizeAlgorithm);\n        function pullAlgorithm() {\n            return TransformStreamDefaultSourcePullAlgorithm(stream);\n        }\n        function cancelAlgorithm(reason) {\n            TransformStreamErrorWritableAndUnblockWrite(stream, reason);\n            return promiseResolvedWith(undefined);\n        }\n        stream._readable = CreateReadableStream(startAlgorithm, pullAlgorithm, cancelAlgorithm, readableHighWaterMark, readableSizeAlgorithm);\n        // The [[backpressure]] slot is set to undefined so that it can be initialised by TransformStreamSetBackpressure.\n        stream._backpressure = undefined;\n        stream._backpressureChangePromise = undefined;\n        stream._backpressureChangePromise_resolve = undefined;\n        TransformStreamSetBackpressure(stream, true);\n        stream._transformStreamController = undefined;\n    }\n    function IsTransformStream(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_transformStreamController')) {\n            return false;\n        }\n        return x instanceof TransformStream;\n    }\n    // This is a no-op if both sides are already errored.\n    function TransformStreamError(stream, e) {\n        ReadableStreamDefaultControllerError(stream._readable._readableStreamController, e);\n        TransformStreamErrorWritableAndUnblockWrite(stream, e);\n    }\n    function TransformStreamErrorWritableAndUnblockWrite(stream, e) {\n        TransformStreamDefaultControllerClearAlgorithms(stream._transformStreamController);\n        WritableStreamDefaultControllerErrorIfNeeded(stream._writable._writableStreamController, e);\n        if (stream._backpressure) {\n            // Pretend that pull() was called to permit any pending write() calls to complete. TransformStreamSetBackpressure()\n            // cannot be called from enqueue() or pull() once the ReadableStream is errored, so this will will be the final time\n            // _backpressure is set.\n            TransformStreamSetBackpressure(stream, false);\n        }\n    }\n    function TransformStreamSetBackpressure(stream, backpressure) {\n        // Passes also when called during construction.\n        if (stream._backpressureChangePromise !== undefined) {\n            stream._backpressureChangePromise_resolve();\n        }\n        stream._backpressureChangePromise = newPromise(resolve => {\n            stream._backpressureChangePromise_resolve = resolve;\n        });\n        stream._backpressure = backpressure;\n    }\n    // Class TransformStreamDefaultController\n    /**\n     * Allows control of the {@link ReadableStream} and {@link WritableStream} of the associated {@link TransformStream}.\n     *\n     * @public\n     */\n    class TransformStreamDefaultController {\n        constructor() {\n            throw new TypeError('Illegal constructor');\n        }\n        /**\n         * Returns the desired size to fill the readable side’s internal queue. It can be negative, if the queue is over-full.\n         */\n        get desiredSize() {\n            if (!IsTransformStreamDefaultController(this)) {\n                throw defaultControllerBrandCheckException('desiredSize');\n            }\n            const readableController = this._controlledTransformStream._readable._readableStreamController;\n            return ReadableStreamDefaultControllerGetDesiredSize(readableController);\n        }\n        enqueue(chunk = undefined) {\n            if (!IsTransformStreamDefaultController(this)) {\n                throw defaultControllerBrandCheckException('enqueue');\n            }\n            TransformStreamDefaultControllerEnqueue(this, chunk);\n        }\n        /**\n         * Errors both the readable side and the writable side of the controlled transform stream, making all future\n         * interactions with it fail with the given error `e`. Any chunks queued for transformation will be discarded.\n         */\n        error(reason = undefined) {\n            if (!IsTransformStreamDefaultController(this)) {\n                throw defaultControllerBrandCheckException('error');\n            }\n            TransformStreamDefaultControllerError(this, reason);\n        }\n        /**\n         * Closes the readable side and errors the writable side of the controlled transform stream. This is useful when the\n         * transformer only needs to consume a portion of the chunks written to the writable side.\n         */\n        terminate() {\n            if (!IsTransformStreamDefaultController(this)) {\n                throw defaultControllerBrandCheckException('terminate');\n            }\n            TransformStreamDefaultControllerTerminate(this);\n        }\n    }\n    Object.defineProperties(TransformStreamDefaultController.prototype, {\n        enqueue: { enumerable: true },\n        error: { enumerable: true },\n        terminate: { enumerable: true },\n        desiredSize: { enumerable: true }\n    });\n    if (typeof SymbolPolyfill.toStringTag === 'symbol') {\n        Object.defineProperty(TransformStreamDefaultController.prototype, SymbolPolyfill.toStringTag, {\n            value: 'TransformStreamDefaultController',\n            configurable: true\n        });\n    }\n    // Transform Stream Default Controller Abstract Operations\n    function IsTransformStreamDefaultController(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_controlledTransformStream')) {\n            return false;\n        }\n        return x instanceof TransformStreamDefaultController;\n    }\n    function SetUpTransformStreamDefaultController(stream, controller, transformAlgorithm, flushAlgorithm) {\n        controller._controlledTransformStream = stream;\n        stream._transformStreamController = controller;\n        controller._transformAlgorithm = transformAlgorithm;\n        controller._flushAlgorithm = flushAlgorithm;\n    }\n    function SetUpTransformStreamDefaultControllerFromTransformer(stream, transformer) {\n        const controller = Object.create(TransformStreamDefaultController.prototype);\n        let transformAlgorithm = (chunk) => {\n            try {\n                TransformStreamDefaultControllerEnqueue(controller, chunk);\n                return promiseResolvedWith(undefined);\n            }\n            catch (transformResultE) {\n                return promiseRejectedWith(transformResultE);\n            }\n        };\n        let flushAlgorithm = () => promiseResolvedWith(undefined);\n        if (transformer.transform !== undefined) {\n            transformAlgorithm = chunk => transformer.transform(chunk, controller);\n        }\n        if (transformer.flush !== undefined) {\n            flushAlgorithm = () => transformer.flush(controller);\n        }\n        SetUpTransformStreamDefaultController(stream, controller, transformAlgorithm, flushAlgorithm);\n    }\n    function TransformStreamDefaultControllerClearAlgorithms(controller) {\n        controller._transformAlgorithm = undefined;\n        controller._flushAlgorithm = undefined;\n    }\n    function TransformStreamDefaultControllerEnqueue(controller, chunk) {\n        const stream = controller._controlledTransformStream;\n        const readableController = stream._readable._readableStreamController;\n        if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(readableController)) {\n            throw new TypeError('Readable side is not in a state that permits enqueue');\n        }\n        // We throttle transform invocations based on the backpressure of the ReadableStream, but we still\n        // accept TransformStreamDefaultControllerEnqueue() calls.\n        try {\n            ReadableStreamDefaultControllerEnqueue(readableController, chunk);\n        }\n        catch (e) {\n            // This happens when readableStrategy.size() throws.\n            TransformStreamErrorWritableAndUnblockWrite(stream, e);\n            throw stream._readable._storedError;\n        }\n        const backpressure = ReadableStreamDefaultControllerHasBackpressure(readableController);\n        if (backpressure !== stream._backpressure) {\n            TransformStreamSetBackpressure(stream, true);\n        }\n    }\n    function TransformStreamDefaultControllerError(controller, e) {\n        TransformStreamError(controller._controlledTransformStream, e);\n    }\n    function TransformStreamDefaultControllerPerformTransform(controller, chunk) {\n        const transformPromise = controller._transformAlgorithm(chunk);\n        return transformPromiseWith(transformPromise, undefined, r => {\n            TransformStreamError(controller._controlledTransformStream, r);\n            throw r;\n        });\n    }\n    function TransformStreamDefaultControllerTerminate(controller) {\n        const stream = controller._controlledTransformStream;\n        const readableController = stream._readable._readableStreamController;\n        ReadableStreamDefaultControllerClose(readableController);\n        const error = new TypeError('TransformStream terminated');\n        TransformStreamErrorWritableAndUnblockWrite(stream, error);\n    }\n    // TransformStreamDefaultSink Algorithms\n    function TransformStreamDefaultSinkWriteAlgorithm(stream, chunk) {\n        const controller = stream._transformStreamController;\n        if (stream._backpressure) {\n            const backpressureChangePromise = stream._backpressureChangePromise;\n            return transformPromiseWith(backpressureChangePromise, () => {\n                const writable = stream._writable;\n                const state = writable._state;\n                if (state === 'erroring') {\n                    throw writable._storedError;\n                }\n                return TransformStreamDefaultControllerPerformTransform(controller, chunk);\n            });\n        }\n        return TransformStreamDefaultControllerPerformTransform(controller, chunk);\n    }\n    function TransformStreamDefaultSinkAbortAlgorithm(stream, reason) {\n        // abort() is not called synchronously, so it is possible for abort() to be called when the stream is already\n        // errored.\n        TransformStreamError(stream, reason);\n        return promiseResolvedWith(undefined);\n    }\n    function TransformStreamDefaultSinkCloseAlgorithm(stream) {\n        // stream._readable cannot change after construction, so caching it across a call to user code is safe.\n        const readable = stream._readable;\n        const controller = stream._transformStreamController;\n        const flushPromise = controller._flushAlgorithm();\n        TransformStreamDefaultControllerClearAlgorithms(controller);\n        // Return a promise that is fulfilled with undefined on success.\n        return transformPromiseWith(flushPromise, () => {\n            if (readable._state === 'errored') {\n                throw readable._storedError;\n            }\n            ReadableStreamDefaultControllerClose(readable._readableStreamController);\n        }, r => {\n            TransformStreamError(stream, r);\n            throw readable._storedError;\n        });\n    }\n    // TransformStreamDefaultSource Algorithms\n    function TransformStreamDefaultSourcePullAlgorithm(stream) {\n        // Invariant. Enforced by the promises returned by start() and pull().\n        TransformStreamSetBackpressure(stream, false);\n        // Prevent the next pull() call until there is backpressure.\n        return stream._backpressureChangePromise;\n    }\n    // Helper functions for the TransformStreamDefaultController.\n    function defaultControllerBrandCheckException(name) {\n        return new TypeError(`TransformStreamDefaultController.prototype.${name} can only be used on a TransformStreamDefaultController`);\n    }\n    // Helper functions for the TransformStream.\n    function streamBrandCheckException(name) {\n        return new TypeError(`TransformStream.prototype.${name} can only be used on a TransformStream`);\n    }\n\n    exports.ByteLengthQueuingStrategy = ByteLengthQueuingStrategy;\n    exports.CountQueuingStrategy = CountQueuingStrategy;\n    exports.ReadableByteStreamController = ReadableByteStreamController;\n    exports.ReadableStream = ReadableStream;\n    exports.ReadableStreamBYOBReader = ReadableStreamBYOBReader;\n    exports.ReadableStreamBYOBRequest = ReadableStreamBYOBRequest;\n    exports.ReadableStreamDefaultController = ReadableStreamDefaultController;\n    exports.ReadableStreamDefaultReader = ReadableStreamDefaultReader;\n    exports.TransformStream = TransformStream;\n    exports.TransformStreamDefaultController = TransformStreamDefaultController;\n    exports.WritableStream = WritableStream;\n    exports.WritableStreamDefaultController = WritableStreamDefaultController;\n    exports.WritableStreamDefaultWriter = WritableStreamDefaultWriter;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=ponyfill.es2018.js.map\n","module.exports = require(\"vscode\");","module.exports = require(\"buffer\");","module.exports = require(\"node:process\");","module.exports = require(\"node:stream/web\");","module.exports = require(\"worker_threads\");","/* c8 ignore start */\n// 64 KiB (same size chrome slice theirs blob into Uint8array's)\nconst POOL_SIZE = 65536\n\nif (!globalThis.ReadableStream) {\n  // `node:stream/web` got introduced in v16.5.0 as experimental\n  // and it's preferred over the polyfilled version. So we also\n  // suppress the warning that gets emitted by NodeJS for using it.\n  try {\n    const process = require('node:process')\n    const { emitWarning } = process\n    try {\n      process.emitWarning = () => {}\n      Object.assign(globalThis, require('node:stream/web'))\n      process.emitWarning = emitWarning\n    } catch (error) {\n      process.emitWarning = emitWarning\n      throw error\n    }\n  } catch (error) {\n    // fallback to polyfill implementation\n    Object.assign(globalThis, require('web-streams-polyfill/dist/ponyfill.es2018.js'))\n  }\n}\n\ntry {\n  // Don't use node: prefix for this, require+node: is not supported until node v14.14\n  // Only `import()` can use prefix in 12.20 and later\n  const { Blob } = require('buffer')\n  if (Blob && !Blob.prototype.stream) {\n    Blob.prototype.stream = function name (params) {\n      let position = 0\n      const blob = this\n\n      return new ReadableStream({\n        type: 'bytes',\n        async pull (ctrl) {\n          const chunk = blob.slice(position, Math.min(blob.size, position + POOL_SIZE))\n          const buffer = await chunk.arrayBuffer()\n          position += buffer.byteLength\n          ctrl.enqueue(new Uint8Array(buffer))\n\n          if (position === blob.size) {\n            ctrl.close()\n          }\n        }\n      })\n    }\n  }\n} catch (error) {}\n/* c8 ignore end */\n","import Blob from './index.js'\n\nconst _File = class File extends Blob {\n  #lastModified = 0\n  #name = ''\n\n  /**\n   * @param {*[]} fileBits\n   * @param {string} fileName\n   * @param {{lastModified?: number, type?: string}} options\n   */// @ts-ignore\n  constructor (fileBits, fileName, options = {}) {\n    if (arguments.length < 2) {\n      throw new TypeError(`Failed to construct 'File': 2 arguments required, but only ${arguments.length} present.`)\n    }\n    super(fileBits, options)\n\n    if (options === null) options = {}\n\n    // Simulate WebIDL type casting for NaN value in lastModified option.\n    const lastModified = options.lastModified === undefined ? Date.now() : Number(options.lastModified)\n    if (!Number.isNaN(lastModified)) {\n      this.#lastModified = lastModified\n    }\n\n    this.#name = String(fileName)\n  }\n\n  get name () {\n    return this.#name\n  }\n\n  get lastModified () {\n    return this.#lastModified\n  }\n\n  get [Symbol.toStringTag] () {\n    return 'File'\n  }\n\n  static [Symbol.hasInstance] (object) {\n    return !!object && object instanceof Blob &&\n      /^(File)$/.test(object[Symbol.toStringTag])\n  }\n}\n\n/** @type {typeof globalThis.File} */// @ts-ignore\nexport const File = _File\nexport default File\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"node:fs\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"node:path\");","import { statSync, createReadStream, promises as fs } from 'node:fs'\nimport { basename } from 'node:path'\nimport DOMException from 'node-domexception'\n\nimport File from './file.js'\nimport Blob from './index.js'\n\nconst { stat } = fs\n\n/**\n * @param {string} path filepath on the disk\n * @param {string} [type] mimetype to use\n */\nconst blobFromSync = (path, type) => fromBlob(statSync(path), path, type)\n\n/**\n * @param {string} path filepath on the disk\n * @param {string} [type] mimetype to use\n * @returns {Promise<Blob>}\n */\nconst blobFrom = (path, type) => stat(path).then(stat => fromBlob(stat, path, type))\n\n/**\n * @param {string} path filepath on the disk\n * @param {string} [type] mimetype to use\n * @returns {Promise<File>}\n */\nconst fileFrom = (path, type) => stat(path).then(stat => fromFile(stat, path, type))\n\n/**\n * @param {string} path filepath on the disk\n * @param {string} [type] mimetype to use\n */\nconst fileFromSync = (path, type) => fromFile(statSync(path), path, type)\n\n// @ts-ignore\nconst fromBlob = (stat, path, type = '') => new Blob([new BlobDataItem({\n  path,\n  size: stat.size,\n  lastModified: stat.mtimeMs,\n  start: 0\n})], { type })\n\n// @ts-ignore\nconst fromFile = (stat, path, type = '') => new File([new BlobDataItem({\n  path,\n  size: stat.size,\n  lastModified: stat.mtimeMs,\n  start: 0\n})], basename(path), { type, lastModified: stat.mtimeMs })\n\n/**\n * This is a blob backed up by a file on the disk\n * with minium requirement. Its wrapped around a Blob as a blobPart\n * so you have no direct access to this.\n *\n * @private\n */\nclass BlobDataItem {\n  #path\n  #start\n\n  constructor (options) {\n    this.#path = options.path\n    this.#start = options.start\n    this.size = options.size\n    this.lastModified = options.lastModified\n  }\n\n  /**\n   * Slicing arguments is first validated and formatted\n   * to not be out of range by Blob.prototype.slice\n   */\n  slice (start, end) {\n    return new BlobDataItem({\n      path: this.#path,\n      lastModified: this.lastModified,\n      size: end - start,\n      start: this.#start + start\n    })\n  }\n\n  async * stream () {\n    const { mtimeMs } = await stat(this.#path)\n    if (mtimeMs > this.lastModified) {\n      throw new DOMException('The requested file could not be read, typically due to permission problems that have occurred after a reference to a file was acquired.', 'NotReadableError')\n    }\n    yield * createReadStream(this.#path, {\n      start: this.#start,\n      end: this.#start + this.size - 1\n    })\n  }\n\n  get [Symbol.toStringTag] () {\n    return 'Blob'\n  }\n}\n\nexport default blobFromSync\nexport { File, Blob, blobFrom, blobFromSync, fileFrom, fileFromSync }\n","/*! fetch-blob. MIT License. Jimmy Wärting <https://jimmy.warting.se/opensource> */\n\n// TODO (jimmywarting): in the feature use conditional loading with top level await (requires 14.x)\n// Node has recently added whatwg stream into core\n\nimport './streams.cjs'\n\n// 64 KiB (same size chrome slice theirs blob into Uint8array's)\nconst POOL_SIZE = 65536\n\n/** @param {(Blob | Uint8Array)[]} parts */\nasync function * toIterator (parts, clone = true) {\n  for (const part of parts) {\n    if ('stream' in part) {\n      yield * (/** @type {AsyncIterableIterator<Uint8Array>} */ (part.stream()))\n    } else if (ArrayBuffer.isView(part)) {\n      if (clone) {\n        let position = part.byteOffset\n        const end = part.byteOffset + part.byteLength\n        while (position !== end) {\n          const size = Math.min(end - position, POOL_SIZE)\n          const chunk = part.buffer.slice(position, position + size)\n          position += chunk.byteLength\n          yield new Uint8Array(chunk)\n        }\n      } else {\n        yield part\n      }\n    /* c8 ignore next 10 */\n    } else {\n      // For blobs that have arrayBuffer but no stream method (nodes buffer.Blob)\n      let position = 0, b = (/** @type {Blob} */ (part))\n      while (position !== b.size) {\n        const chunk = b.slice(position, Math.min(b.size, position + POOL_SIZE))\n        const buffer = await chunk.arrayBuffer()\n        position += buffer.byteLength\n        yield new Uint8Array(buffer)\n      }\n    }\n  }\n}\n\nconst _Blob = class Blob {\n  /** @type {Array.<(Blob|Uint8Array)>} */\n  #parts = []\n  #type = ''\n  #size = 0\n  #endings = 'transparent'\n\n  /**\n   * The Blob() constructor returns a new Blob object. The content\n   * of the blob consists of the concatenation of the values given\n   * in the parameter array.\n   *\n   * @param {*} blobParts\n   * @param {{ type?: string, endings?: string }} [options]\n   */\n  constructor (blobParts = [], options = {}) {\n    if (typeof blobParts !== 'object' || blobParts === null) {\n      throw new TypeError('Failed to construct \\'Blob\\': The provided value cannot be converted to a sequence.')\n    }\n\n    if (typeof blobParts[Symbol.iterator] !== 'function') {\n      throw new TypeError('Failed to construct \\'Blob\\': The object must have a callable @@iterator property.')\n    }\n\n    if (typeof options !== 'object' && typeof options !== 'function') {\n      throw new TypeError('Failed to construct \\'Blob\\': parameter 2 cannot convert to dictionary.')\n    }\n\n    if (options === null) options = {}\n\n    const encoder = new TextEncoder()\n    for (const element of blobParts) {\n      let part\n      if (ArrayBuffer.isView(element)) {\n        part = new Uint8Array(element.buffer.slice(element.byteOffset, element.byteOffset + element.byteLength))\n      } else if (element instanceof ArrayBuffer) {\n        part = new Uint8Array(element.slice(0))\n      } else if (element instanceof Blob) {\n        part = element\n      } else {\n        part = encoder.encode(`${element}`)\n      }\n\n      this.#size += ArrayBuffer.isView(part) ? part.byteLength : part.size\n      this.#parts.push(part)\n    }\n\n    this.#endings = `${options.endings === undefined ? 'transparent' : options.endings}`\n    const type = options.type === undefined ? '' : String(options.type)\n    this.#type = /^[\\x20-\\x7E]*$/.test(type) ? type : ''\n  }\n\n  /**\n   * The Blob interface's size property returns the\n   * size of the Blob in bytes.\n   */\n  get size () {\n    return this.#size\n  }\n\n  /**\n   * The type property of a Blob object returns the MIME type of the file.\n   */\n  get type () {\n    return this.#type\n  }\n\n  /**\n   * The text() method in the Blob interface returns a Promise\n   * that resolves with a string containing the contents of\n   * the blob, interpreted as UTF-8.\n   *\n   * @return {Promise<string>}\n   */\n  async text () {\n    // More optimized than using this.arrayBuffer()\n    // that requires twice as much ram\n    const decoder = new TextDecoder()\n    let str = ''\n    for await (const part of toIterator(this.#parts, false)) {\n      str += decoder.decode(part, { stream: true })\n    }\n    // Remaining\n    str += decoder.decode()\n    return str\n  }\n\n  /**\n   * The arrayBuffer() method in the Blob interface returns a\n   * Promise that resolves with the contents of the blob as\n   * binary data contained in an ArrayBuffer.\n   *\n   * @return {Promise<ArrayBuffer>}\n   */\n  async arrayBuffer () {\n    // Easier way... Just a unnecessary overhead\n    // const view = new Uint8Array(this.size);\n    // await this.stream().getReader({mode: 'byob'}).read(view);\n    // return view.buffer;\n\n    const data = new Uint8Array(this.size)\n    let offset = 0\n    for await (const chunk of toIterator(this.#parts, false)) {\n      data.set(chunk, offset)\n      offset += chunk.length\n    }\n\n    return data.buffer\n  }\n\n  stream () {\n    const it = toIterator(this.#parts, true)\n\n    return new globalThis.ReadableStream({\n      // @ts-ignore\n      type: 'bytes',\n      async pull (ctrl) {\n        const chunk = await it.next()\n        chunk.done ? ctrl.close() : ctrl.enqueue(chunk.value)\n      },\n\n      async cancel () {\n        await it.return()\n      }\n    })\n  }\n\n  /**\n   * The Blob interface's slice() method creates and returns a\n   * new Blob object which contains data from a subset of the\n   * blob on which it's called.\n   *\n   * @param {number} [start]\n   * @param {number} [end]\n   * @param {string} [type]\n   */\n  slice (start = 0, end = this.size, type = '') {\n    const { size } = this\n\n    let relativeStart = start < 0 ? Math.max(size + start, 0) : Math.min(start, size)\n    let relativeEnd = end < 0 ? Math.max(size + end, 0) : Math.min(end, size)\n\n    const span = Math.max(relativeEnd - relativeStart, 0)\n    const parts = this.#parts\n    const blobParts = []\n    let added = 0\n\n    for (const part of parts) {\n      // don't add the overflow to new blobParts\n      if (added >= span) {\n        break\n      }\n\n      const size = ArrayBuffer.isView(part) ? part.byteLength : part.size\n      if (relativeStart && size <= relativeStart) {\n        // Skip the beginning and change the relative\n        // start & end position as we skip the unwanted parts\n        relativeStart -= size\n        relativeEnd -= size\n      } else {\n        let chunk\n        if (ArrayBuffer.isView(part)) {\n          chunk = part.subarray(relativeStart, Math.min(size, relativeEnd))\n          added += chunk.byteLength\n        } else {\n          chunk = part.slice(relativeStart, Math.min(size, relativeEnd))\n          added += chunk.size\n        }\n        relativeEnd -= size\n        blobParts.push(chunk)\n        relativeStart = 0 // All next sequential parts should start at 0\n      }\n    }\n\n    const blob = new Blob([], { type: String(type).toLowerCase() })\n    blob.#size = span\n    blob.#parts = blobParts\n\n    return blob\n  }\n\n  get [Symbol.toStringTag] () {\n    return 'Blob'\n  }\n\n  static [Symbol.hasInstance] (object) {\n    return (\n      object &&\n      typeof object === 'object' &&\n      typeof object.constructor === 'function' &&\n      (\n        typeof object.stream === 'function' ||\n        typeof object.arrayBuffer === 'function'\n      ) &&\n      /^(Blob|File)$/.test(object[Symbol.toStringTag])\n    )\n  }\n}\n\nObject.defineProperties(_Blob.prototype, {\n  size: { enumerable: true },\n  type: { enumerable: true },\n  slice: { enumerable: true }\n})\n\n/** @type {typeof globalThis.Blob} */\nexport const Blob = _Blob\nexport default Blob\n","/*! formdata-polyfill. MIT License. Jimmy Wärting <https://jimmy.warting.se/opensource> */\n\nimport C from 'fetch-blob'\nimport F from 'fetch-blob/file.js'\n\nvar {toStringTag:t,iterator:i,hasInstance:h}=Symbol,\nr=Math.random,\nm='append,set,get,getAll,delete,keys,values,entries,forEach,constructor'.split(','),\nf=(a,b,c)=>(a+='',/^(Blob|File)$/.test(b && b[t])?[(c=c!==void 0?c+'':b[t]=='File'?b.name:'blob',a),b.name!==c||b[t]=='blob'?new F([b],c,b):b]:[a,b+'']),\ne=(c,f)=>(f?c:c.replace(/\\r?\\n|\\r/g,'\\r\\n')).replace(/\\n/g,'%0A').replace(/\\r/g,'%0D').replace(/\"/g,'%22'),\nx=(n, a, e)=>{if(a.length<e){throw new TypeError(`Failed to execute '${n}' on 'FormData': ${e} arguments required, but only ${a.length} present.`)}}\n\nexport const File = F\n\n/** @type {typeof globalThis.FormData} */\nexport const FormData = class FormData {\n#d=[];\nconstructor(...a){if(a.length)throw new TypeError(`Failed to construct 'FormData': parameter 1 is not of type 'HTMLFormElement'.`)}\nget [t]() {return 'FormData'}\n[i](){return this.entries()}\nstatic [h](o) {return o&&typeof o==='object'&&o[t]==='FormData'&&!m.some(m=>typeof o[m]!='function')}\nappend(...a){x('append',arguments,2);this.#d.push(f(...a))}\ndelete(a){x('delete',arguments,1);a+='';this.#d=this.#d.filter(([b])=>b!==a)}\nget(a){x('get',arguments,1);a+='';for(var b=this.#d,l=b.length,c=0;c<l;c++)if(b[c][0]===a)return b[c][1];return null}\ngetAll(a,b){x('getAll',arguments,1);b=[];a+='';this.#d.forEach(c=>c[0]===a&&b.push(c[1]));return b}\nhas(a){x('has',arguments,1);a+='';return this.#d.some(b=>b[0]===a)}\nforEach(a,b){x('forEach',arguments,1);for(var [c,d]of this)a.call(b,d,c,this)}\nset(...a){x('set',arguments,2);var b=[],c=!0;a=f(...a);this.#d.forEach(d=>{d[0]===a[0]?c&&(c=!b.push(a)):b.push(d)});c&&b.push(a);this.#d=b}\n*entries(){yield*this.#d}\n*keys(){for(var[a]of this)yield a}\n*values(){for(var[,a]of this)yield a}}\n\n/** @param {FormData} F */\nexport function formDataToBlob (F,B=C){\nvar b=`${r()}${r()}`.replace(/\\./g, '').slice(-28).padStart(32, '-'),c=[],p=`--${b}\\r\\nContent-Disposition: form-data; name=\"`\nF.forEach((v,n)=>typeof v=='string'\n?c.push(p+e(n)+`\"\\r\\n\\r\\n${v.replace(/\\r(?!\\n)|(?<!\\r)\\n/g, '\\r\\n')}\\r\\n`)\n:c.push(p+e(n)+`\"; filename=\"${e(v.name, 1)}\"\\r\\nContent-Type: ${v.type||\"application/octet-stream\"}\\r\\n\\r\\n`, v, '\\r\\n'))\nc.push(`--${b}--`)\nreturn new B(c,{type:\"multipart/form-data; boundary=\"+b})}\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"node:http\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"node:https\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"node:zlib\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"node:stream\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"node:buffer\");","/**\n * Returns a `Buffer` instance from the given data URI `uri`.\n *\n * @param {String} uri Data URI to turn into a Buffer instance\n * @returns {Buffer} Buffer instance from Data URI\n * @api public\n */\nexport function dataUriToBuffer(uri) {\n    if (!/^data:/i.test(uri)) {\n        throw new TypeError('`uri` does not appear to be a Data URI (must begin with \"data:\")');\n    }\n    // strip newlines\n    uri = uri.replace(/\\r?\\n/g, '');\n    // split the URI up into the \"metadata\" and the \"data\" portions\n    const firstComma = uri.indexOf(',');\n    if (firstComma === -1 || firstComma <= 4) {\n        throw new TypeError('malformed data: URI');\n    }\n    // remove the \"data:\" scheme and parse the metadata\n    const meta = uri.substring(5, firstComma).split(';');\n    let charset = '';\n    let base64 = false;\n    const type = meta[0] || 'text/plain';\n    let typeFull = type;\n    for (let i = 1; i < meta.length; i++) {\n        if (meta[i] === 'base64') {\n            base64 = true;\n        }\n        else if (meta[i]) {\n            typeFull += `;${meta[i]}`;\n            if (meta[i].indexOf('charset=') === 0) {\n                charset = meta[i].substring(8);\n            }\n        }\n    }\n    // defaults to US-ASCII only if type is not provided\n    if (!meta[0] && !charset.length) {\n        typeFull += ';charset=US-ASCII';\n        charset = 'US-ASCII';\n    }\n    // get the encoded data portion and decode URI-encoded chars\n    const encoding = base64 ? 'base64' : 'ascii';\n    const data = unescape(uri.substring(firstComma + 1));\n    const buffer = Buffer.from(data, encoding);\n    // set `.type` and `.typeFull` properties to MIME type\n    buffer.type = type;\n    buffer.typeFull = typeFull;\n    // set the `.charset` property\n    buffer.charset = charset;\n    return buffer;\n}\nexport default dataUriToBuffer;\n//# sourceMappingURL=index.js.map","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"node:util\");","export class FetchBaseError extends Error {\n\tconstructor(message, type) {\n\t\tsuper(message);\n\t\t// Hide custom error implementation details from end-users\n\t\tError.captureStackTrace(this, this.constructor);\n\n\t\tthis.type = type;\n\t}\n\n\tget name() {\n\t\treturn this.constructor.name;\n\t}\n\n\tget [Symbol.toStringTag]() {\n\t\treturn this.constructor.name;\n\t}\n}\n","\nimport {FetchBaseError} from './base.js';\n\n/**\n * @typedef {{ address?: string, code: string, dest?: string, errno: number, info?: object, message: string, path?: string, port?: number, syscall: string}} SystemError\n*/\n\n/**\n * FetchError interface for operational errors\n */\nexport class FetchError extends FetchBaseError {\n\t/**\n\t * @param  {string} message -      Error message for human\n\t * @param  {string} [type] -        Error type for machine\n\t * @param  {SystemError} [systemError] - For Node.js system error\n\t */\n\tconstructor(message, type, systemError) {\n\t\tsuper(message, type);\n\t\t// When err.type is `system`, err.erroredSysCall contains system error and err.code contains system error code\n\t\tif (systemError) {\n\t\t\t// eslint-disable-next-line no-multi-assign\n\t\t\tthis.code = this.errno = systemError.code;\n\t\t\tthis.erroredSysCall = systemError.syscall;\n\t\t}\n\t}\n}\n","/**\n * Is.js\n *\n * Object type checks.\n */\n\nconst NAME = Symbol.toStringTag;\n\n/**\n * Check if `obj` is a URLSearchParams object\n * ref: https://github.com/node-fetch/node-fetch/issues/296#issuecomment-307598143\n * @param {*} object - Object to check for\n * @return {boolean}\n */\nexport const isURLSearchParameters = object => {\n\treturn (\n\t\ttypeof object === 'object' &&\n\t\ttypeof object.append === 'function' &&\n\t\ttypeof object.delete === 'function' &&\n\t\ttypeof object.get === 'function' &&\n\t\ttypeof object.getAll === 'function' &&\n\t\ttypeof object.has === 'function' &&\n\t\ttypeof object.set === 'function' &&\n\t\ttypeof object.sort === 'function' &&\n\t\tobject[NAME] === 'URLSearchParams'\n\t);\n};\n\n/**\n * Check if `object` is a W3C `Blob` object (which `File` inherits from)\n * @param {*} object - Object to check for\n * @return {boolean}\n */\nexport const isBlob = object => {\n\treturn (\n\t\tobject &&\n\t\ttypeof object === 'object' &&\n\t\ttypeof object.arrayBuffer === 'function' &&\n\t\ttypeof object.type === 'string' &&\n\t\ttypeof object.stream === 'function' &&\n\t\ttypeof object.constructor === 'function' &&\n\t\t/^(Blob|File)$/.test(object[NAME])\n\t);\n};\n\n/**\n * Check if `obj` is an instance of AbortSignal.\n * @param {*} object - Object to check for\n * @return {boolean}\n */\nexport const isAbortSignal = object => {\n\treturn (\n\t\ttypeof object === 'object' && (\n\t\t\tobject[NAME] === 'AbortSignal' ||\n\t\t\tobject[NAME] === 'EventTarget'\n\t\t)\n\t);\n};\n\n/**\n * isDomainOrSubdomain reports whether sub is a subdomain (or exact match) of\n * the parent domain.\n *\n * Both domains must already be in canonical form.\n * @param {string|URL} original\n * @param {string|URL} destination\n */\nexport const isDomainOrSubdomain = (destination, original) => {\n\tconst orig = new URL(original).hostname;\n\tconst dest = new URL(destination).hostname;\n\n\treturn orig === dest || orig.endsWith(`.${dest}`);\n};\n\n/**\n * isSameProtocol reports whether the two provided URLs use the same protocol.\n *\n * Both domains must already be in canonical form.\n * @param {string|URL} original\n * @param {string|URL} destination\n */\nexport const isSameProtocol = (destination, original) => {\n\tconst orig = new URL(original).protocol;\n\tconst dest = new URL(destination).protocol;\n\n\treturn orig === dest;\n};\n","\n/**\n * Body.js\n *\n * Body interface provides common methods for Request and Response\n */\n\nimport Stream, {PassThrough} from 'node:stream';\nimport {types, deprecate, promisify} from 'node:util';\nimport {Buffer} from 'node:buffer';\n\nimport Blob from 'fetch-blob';\nimport {FormData, formDataToBlob} from 'formdata-polyfill/esm.min.js';\n\nimport {FetchError} from './errors/fetch-error.js';\nimport {FetchBaseError} from './errors/base.js';\nimport {isBlob, isURLSearchParameters} from './utils/is.js';\n\nconst pipeline = promisify(Stream.pipeline);\nconst INTERNALS = Symbol('Body internals');\n\n/**\n * Body mixin\n *\n * Ref: https://fetch.spec.whatwg.org/#body\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nexport default class Body {\n\tconstructor(body, {\n\t\tsize = 0\n\t} = {}) {\n\t\tlet boundary = null;\n\n\t\tif (body === null) {\n\t\t\t// Body is undefined or null\n\t\t\tbody = null;\n\t\t} else if (isURLSearchParameters(body)) {\n\t\t\t// Body is a URLSearchParams\n\t\t\tbody = Buffer.from(body.toString());\n\t\t} else if (isBlob(body)) {\n\t\t\t// Body is blob\n\t\t} else if (Buffer.isBuffer(body)) {\n\t\t\t// Body is Buffer\n\t\t} else if (types.isAnyArrayBuffer(body)) {\n\t\t\t// Body is ArrayBuffer\n\t\t\tbody = Buffer.from(body);\n\t\t} else if (ArrayBuffer.isView(body)) {\n\t\t\t// Body is ArrayBufferView\n\t\t\tbody = Buffer.from(body.buffer, body.byteOffset, body.byteLength);\n\t\t} else if (body instanceof Stream) {\n\t\t\t// Body is stream\n\t\t} else if (body instanceof FormData) {\n\t\t\t// Body is FormData\n\t\t\tbody = formDataToBlob(body);\n\t\t\tboundary = body.type.split('=')[1];\n\t\t} else {\n\t\t\t// None of the above\n\t\t\t// coerce to string then buffer\n\t\t\tbody = Buffer.from(String(body));\n\t\t}\n\n\t\tlet stream = body;\n\n\t\tif (Buffer.isBuffer(body)) {\n\t\t\tstream = Stream.Readable.from(body);\n\t\t} else if (isBlob(body)) {\n\t\t\tstream = Stream.Readable.from(body.stream());\n\t\t}\n\n\t\tthis[INTERNALS] = {\n\t\t\tbody,\n\t\t\tstream,\n\t\t\tboundary,\n\t\t\tdisturbed: false,\n\t\t\terror: null\n\t\t};\n\t\tthis.size = size;\n\n\t\tif (body instanceof Stream) {\n\t\t\tbody.on('error', error_ => {\n\t\t\t\tconst error = error_ instanceof FetchBaseError ?\n\t\t\t\t\terror_ :\n\t\t\t\t\tnew FetchError(`Invalid response body while trying to fetch ${this.url}: ${error_.message}`, 'system', error_);\n\t\t\t\tthis[INTERNALS].error = error;\n\t\t\t});\n\t\t}\n\t}\n\n\tget body() {\n\t\treturn this[INTERNALS].stream;\n\t}\n\n\tget bodyUsed() {\n\t\treturn this[INTERNALS].disturbed;\n\t}\n\n\t/**\n\t * Decode response as ArrayBuffer\n\t *\n\t * @return  Promise\n\t */\n\tasync arrayBuffer() {\n\t\tconst {buffer, byteOffset, byteLength} = await consumeBody(this);\n\t\treturn buffer.slice(byteOffset, byteOffset + byteLength);\n\t}\n\n\tasync formData() {\n\t\tconst ct = this.headers.get('content-type');\n\n\t\tif (ct.startsWith('application/x-www-form-urlencoded')) {\n\t\t\tconst formData = new FormData();\n\t\t\tconst parameters = new URLSearchParams(await this.text());\n\n\t\t\tfor (const [name, value] of parameters) {\n\t\t\t\tformData.append(name, value);\n\t\t\t}\n\n\t\t\treturn formData;\n\t\t}\n\n\t\tconst {toFormData} = await import('./utils/multipart-parser.js');\n\t\treturn toFormData(this.body, ct);\n\t}\n\n\t/**\n\t * Return raw response as Blob\n\t *\n\t * @return Promise\n\t */\n\tasync blob() {\n\t\tconst ct = (this.headers && this.headers.get('content-type')) || (this[INTERNALS].body && this[INTERNALS].body.type) || '';\n\t\tconst buf = await this.arrayBuffer();\n\n\t\treturn new Blob([buf], {\n\t\t\ttype: ct\n\t\t});\n\t}\n\n\t/**\n\t * Decode response as json\n\t *\n\t * @return  Promise\n\t */\n\tasync json() {\n\t\tconst text = await this.text();\n\t\treturn JSON.parse(text);\n\t}\n\n\t/**\n\t * Decode response as text\n\t *\n\t * @return  Promise\n\t */\n\tasync text() {\n\t\tconst buffer = await consumeBody(this);\n\t\treturn new TextDecoder().decode(buffer);\n\t}\n\n\t/**\n\t * Decode response as buffer (non-spec api)\n\t *\n\t * @return  Promise\n\t */\n\tbuffer() {\n\t\treturn consumeBody(this);\n\t}\n}\n\nBody.prototype.buffer = deprecate(Body.prototype.buffer, 'Please use \\'response.arrayBuffer()\\' instead of \\'response.buffer()\\'', 'node-fetch#buffer');\n\n// In browsers, all properties are enumerable.\nObject.defineProperties(Body.prototype, {\n\tbody: {enumerable: true},\n\tbodyUsed: {enumerable: true},\n\tarrayBuffer: {enumerable: true},\n\tblob: {enumerable: true},\n\tjson: {enumerable: true},\n\ttext: {enumerable: true},\n\tdata: {get: deprecate(() => {},\n\t\t'data doesn\\'t exist, use json(), text(), arrayBuffer(), or body instead',\n\t\t'https://github.com/node-fetch/node-fetch/issues/1000 (response)')}\n});\n\n/**\n * Consume and convert an entire Body to a Buffer.\n *\n * Ref: https://fetch.spec.whatwg.org/#concept-body-consume-body\n *\n * @return Promise\n */\nasync function consumeBody(data) {\n\tif (data[INTERNALS].disturbed) {\n\t\tthrow new TypeError(`body used already for: ${data.url}`);\n\t}\n\n\tdata[INTERNALS].disturbed = true;\n\n\tif (data[INTERNALS].error) {\n\t\tthrow data[INTERNALS].error;\n\t}\n\n\tconst {body} = data;\n\n\t// Body is null\n\tif (body === null) {\n\t\treturn Buffer.alloc(0);\n\t}\n\n\t/* c8 ignore next 3 */\n\tif (!(body instanceof Stream)) {\n\t\treturn Buffer.alloc(0);\n\t}\n\n\t// Body is stream\n\t// get ready to actually consume the body\n\tconst accum = [];\n\tlet accumBytes = 0;\n\n\ttry {\n\t\tfor await (const chunk of body) {\n\t\t\tif (data.size > 0 && accumBytes + chunk.length > data.size) {\n\t\t\t\tconst error = new FetchError(`content size at ${data.url} over limit: ${data.size}`, 'max-size');\n\t\t\t\tbody.destroy(error);\n\t\t\t\tthrow error;\n\t\t\t}\n\n\t\t\taccumBytes += chunk.length;\n\t\t\taccum.push(chunk);\n\t\t}\n\t} catch (error) {\n\t\tconst error_ = error instanceof FetchBaseError ? error : new FetchError(`Invalid response body while trying to fetch ${data.url}: ${error.message}`, 'system', error);\n\t\tthrow error_;\n\t}\n\n\tif (body.readableEnded === true || body._readableState.ended === true) {\n\t\ttry {\n\t\t\tif (accum.every(c => typeof c === 'string')) {\n\t\t\t\treturn Buffer.from(accum.join(''));\n\t\t\t}\n\n\t\t\treturn Buffer.concat(accum, accumBytes);\n\t\t} catch (error) {\n\t\t\tthrow new FetchError(`Could not create Buffer from response body for ${data.url}: ${error.message}`, 'system', error);\n\t\t}\n\t} else {\n\t\tthrow new FetchError(`Premature close of server response while trying to fetch ${data.url}`);\n\t}\n}\n\n/**\n * Clone body given Res/Req instance\n *\n * @param   Mixed   instance       Response or Request instance\n * @param   String  highWaterMark  highWaterMark for both PassThrough body streams\n * @return  Mixed\n */\nexport const clone = (instance, highWaterMark) => {\n\tlet p1;\n\tlet p2;\n\tlet {body} = instance[INTERNALS];\n\n\t// Don't allow cloning a used body\n\tif (instance.bodyUsed) {\n\t\tthrow new Error('cannot clone body after it is used');\n\t}\n\n\t// Check that body is a stream and not form-data object\n\t// note: we can't clone the form-data object without having it as a dependency\n\tif ((body instanceof Stream) && (typeof body.getBoundary !== 'function')) {\n\t\t// Tee instance body\n\t\tp1 = new PassThrough({highWaterMark});\n\t\tp2 = new PassThrough({highWaterMark});\n\t\tbody.pipe(p1);\n\t\tbody.pipe(p2);\n\t\t// Set instance body to teed body and return the other teed body\n\t\tinstance[INTERNALS].stream = p1;\n\t\tbody = p2;\n\t}\n\n\treturn body;\n};\n\nconst getNonSpecFormDataBoundary = deprecate(\n\tbody => body.getBoundary(),\n\t'form-data doesn\\'t follow the spec and requires special treatment. Use alternative package',\n\t'https://github.com/node-fetch/node-fetch/issues/1167'\n);\n\n/**\n * Performs the operation \"extract a `Content-Type` value from |object|\" as\n * specified in the specification:\n * https://fetch.spec.whatwg.org/#concept-bodyinit-extract\n *\n * This function assumes that instance.body is present.\n *\n * @param {any} body Any options.body input\n * @returns {string | null}\n */\nexport const extractContentType = (body, request) => {\n\t// Body is null or undefined\n\tif (body === null) {\n\t\treturn null;\n\t}\n\n\t// Body is string\n\tif (typeof body === 'string') {\n\t\treturn 'text/plain;charset=UTF-8';\n\t}\n\n\t// Body is a URLSearchParams\n\tif (isURLSearchParameters(body)) {\n\t\treturn 'application/x-www-form-urlencoded;charset=UTF-8';\n\t}\n\n\t// Body is blob\n\tif (isBlob(body)) {\n\t\treturn body.type || null;\n\t}\n\n\t// Body is a Buffer (Buffer, ArrayBuffer or ArrayBufferView)\n\tif (Buffer.isBuffer(body) || types.isAnyArrayBuffer(body) || ArrayBuffer.isView(body)) {\n\t\treturn null;\n\t}\n\n\tif (body instanceof FormData) {\n\t\treturn `multipart/form-data; boundary=${request[INTERNALS].boundary}`;\n\t}\n\n\t// Detect form data input from form-data module\n\tif (body && typeof body.getBoundary === 'function') {\n\t\treturn `multipart/form-data;boundary=${getNonSpecFormDataBoundary(body)}`;\n\t}\n\n\t// Body is stream - can't really do much about this\n\tif (body instanceof Stream) {\n\t\treturn null;\n\t}\n\n\t// Body constructor defaults other things to string\n\treturn 'text/plain;charset=UTF-8';\n};\n\n/**\n * The Fetch Standard treats this as if \"total bytes\" is a property on the body.\n * For us, we have to explicitly get it with a function.\n *\n * ref: https://fetch.spec.whatwg.org/#concept-body-total-bytes\n *\n * @param {any} obj.body Body object from the Body instance.\n * @returns {number | null}\n */\nexport const getTotalBytes = request => {\n\tconst {body} = request[INTERNALS];\n\n\t// Body is null or undefined\n\tif (body === null) {\n\t\treturn 0;\n\t}\n\n\t// Body is Blob\n\tif (isBlob(body)) {\n\t\treturn body.size;\n\t}\n\n\t// Body is Buffer\n\tif (Buffer.isBuffer(body)) {\n\t\treturn body.length;\n\t}\n\n\t// Detect form data input from form-data module\n\tif (body && typeof body.getLengthSync === 'function') {\n\t\treturn body.hasKnownLength && body.hasKnownLength() ? body.getLengthSync() : null;\n\t}\n\n\t// Body is stream\n\treturn null;\n};\n\n/**\n * Write a Body to a Node.js WritableStream (e.g. http.Request) object.\n *\n * @param {Stream.Writable} dest The stream to write to.\n * @param obj.body Body object from the Body instance.\n * @returns {Promise<void>}\n */\nexport const writeToStream = async (dest, {body}) => {\n\tif (body === null) {\n\t\t// Body is null\n\t\tdest.end();\n\t} else {\n\t\t// Body is stream\n\t\tawait pipeline(body, dest);\n\t}\n};\n","/**\n * Headers.js\n *\n * Headers class offers convenient helpers\n */\n\nimport {types} from 'node:util';\nimport http from 'node:http';\n\n/* c8 ignore next 9 */\nconst validateHeaderName = typeof http.validateHeaderName === 'function' ?\n\thttp.validateHeaderName :\n\tname => {\n\t\tif (!/^[\\^`\\-\\w!#$%&'*+.|~]+$/.test(name)) {\n\t\t\tconst error = new TypeError(`Header name must be a valid HTTP token [${name}]`);\n\t\t\tObject.defineProperty(error, 'code', {value: 'ERR_INVALID_HTTP_TOKEN'});\n\t\t\tthrow error;\n\t\t}\n\t};\n\n/* c8 ignore next 9 */\nconst validateHeaderValue = typeof http.validateHeaderValue === 'function' ?\n\thttp.validateHeaderValue :\n\t(name, value) => {\n\t\tif (/[^\\t\\u0020-\\u007E\\u0080-\\u00FF]/.test(value)) {\n\t\t\tconst error = new TypeError(`Invalid character in header content [\"${name}\"]`);\n\t\t\tObject.defineProperty(error, 'code', {value: 'ERR_INVALID_CHAR'});\n\t\t\tthrow error;\n\t\t}\n\t};\n\n/**\n * @typedef {Headers | Record<string, string> | Iterable<readonly [string, string]> | Iterable<Iterable<string>>} HeadersInit\n */\n\n/**\n * This Fetch API interface allows you to perform various actions on HTTP request and response headers.\n * These actions include retrieving, setting, adding to, and removing.\n * A Headers object has an associated header list, which is initially empty and consists of zero or more name and value pairs.\n * You can add to this using methods like append() (see Examples.)\n * In all methods of this interface, header names are matched by case-insensitive byte sequence.\n *\n */\nexport default class Headers extends URLSearchParams {\n\t/**\n\t * Headers class\n\t *\n\t * @constructor\n\t * @param {HeadersInit} [init] - Response headers\n\t */\n\tconstructor(init) {\n\t\t// Validate and normalize init object in [name, value(s)][]\n\t\t/** @type {string[][]} */\n\t\tlet result = [];\n\t\tif (init instanceof Headers) {\n\t\t\tconst raw = init.raw();\n\t\t\tfor (const [name, values] of Object.entries(raw)) {\n\t\t\t\tresult.push(...values.map(value => [name, value]));\n\t\t\t}\n\t\t} else if (init == null) { // eslint-disable-line no-eq-null, eqeqeq\n\t\t\t// No op\n\t\t} else if (typeof init === 'object' && !types.isBoxedPrimitive(init)) {\n\t\t\tconst method = init[Symbol.iterator];\n\t\t\t// eslint-disable-next-line no-eq-null, eqeqeq\n\t\t\tif (method == null) {\n\t\t\t\t// Record<ByteString, ByteString>\n\t\t\t\tresult.push(...Object.entries(init));\n\t\t\t} else {\n\t\t\t\tif (typeof method !== 'function') {\n\t\t\t\t\tthrow new TypeError('Header pairs must be iterable');\n\t\t\t\t}\n\n\t\t\t\t// Sequence<sequence<ByteString>>\n\t\t\t\t// Note: per spec we have to first exhaust the lists then process them\n\t\t\t\tresult = [...init]\n\t\t\t\t\t.map(pair => {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\ttypeof pair !== 'object' || types.isBoxedPrimitive(pair)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tthrow new TypeError('Each header pair must be an iterable object');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn [...pair];\n\t\t\t\t\t}).map(pair => {\n\t\t\t\t\t\tif (pair.length !== 2) {\n\t\t\t\t\t\t\tthrow new TypeError('Each header pair must be a name/value tuple');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn [...pair];\n\t\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new TypeError('Failed to construct \\'Headers\\': The provided value is not of type \\'(sequence<sequence<ByteString>> or record<ByteString, ByteString>)');\n\t\t}\n\n\t\t// Validate and lowercase\n\t\tresult =\n\t\t\tresult.length > 0 ?\n\t\t\t\tresult.map(([name, value]) => {\n\t\t\t\t\tvalidateHeaderName(name);\n\t\t\t\t\tvalidateHeaderValue(name, String(value));\n\t\t\t\t\treturn [String(name).toLowerCase(), String(value)];\n\t\t\t\t}) :\n\t\t\t\tundefined;\n\n\t\tsuper(result);\n\n\t\t// Returning a Proxy that will lowercase key names, validate parameters and sort keys\n\t\t// eslint-disable-next-line no-constructor-return\n\t\treturn new Proxy(this, {\n\t\t\tget(target, p, receiver) {\n\t\t\t\tswitch (p) {\n\t\t\t\t\tcase 'append':\n\t\t\t\t\tcase 'set':\n\t\t\t\t\t\treturn (name, value) => {\n\t\t\t\t\t\t\tvalidateHeaderName(name);\n\t\t\t\t\t\t\tvalidateHeaderValue(name, String(value));\n\t\t\t\t\t\t\treturn URLSearchParams.prototype[p].call(\n\t\t\t\t\t\t\t\ttarget,\n\t\t\t\t\t\t\t\tString(name).toLowerCase(),\n\t\t\t\t\t\t\t\tString(value)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t};\n\n\t\t\t\t\tcase 'delete':\n\t\t\t\t\tcase 'has':\n\t\t\t\t\tcase 'getAll':\n\t\t\t\t\t\treturn name => {\n\t\t\t\t\t\t\tvalidateHeaderName(name);\n\t\t\t\t\t\t\treturn URLSearchParams.prototype[p].call(\n\t\t\t\t\t\t\t\ttarget,\n\t\t\t\t\t\t\t\tString(name).toLowerCase()\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t};\n\n\t\t\t\t\tcase 'keys':\n\t\t\t\t\t\treturn () => {\n\t\t\t\t\t\t\ttarget.sort();\n\t\t\t\t\t\t\treturn new Set(URLSearchParams.prototype.keys.call(target)).keys();\n\t\t\t\t\t\t};\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn Reflect.get(target, p, receiver);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\t/* c8 ignore next */\n\t}\n\n\tget [Symbol.toStringTag]() {\n\t\treturn this.constructor.name;\n\t}\n\n\ttoString() {\n\t\treturn Object.prototype.toString.call(this);\n\t}\n\n\tget(name) {\n\t\tconst values = this.getAll(name);\n\t\tif (values.length === 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlet value = values.join(', ');\n\t\tif (/^content-encoding$/i.test(name)) {\n\t\t\tvalue = value.toLowerCase();\n\t\t}\n\n\t\treturn value;\n\t}\n\n\tforEach(callback, thisArg = undefined) {\n\t\tfor (const name of this.keys()) {\n\t\t\tReflect.apply(callback, thisArg, [this.get(name), name, this]);\n\t\t}\n\t}\n\n\t* values() {\n\t\tfor (const name of this.keys()) {\n\t\t\tyield this.get(name);\n\t\t}\n\t}\n\n\t/**\n\t * @type {() => IterableIterator<[string, string]>}\n\t */\n\t* entries() {\n\t\tfor (const name of this.keys()) {\n\t\t\tyield [name, this.get(name)];\n\t\t}\n\t}\n\n\t[Symbol.iterator]() {\n\t\treturn this.entries();\n\t}\n\n\t/**\n\t * Node-fetch non-spec method\n\t * returning all headers and their values as array\n\t * @returns {Record<string, string[]>}\n\t */\n\traw() {\n\t\treturn [...this.keys()].reduce((result, key) => {\n\t\t\tresult[key] = this.getAll(key);\n\t\t\treturn result;\n\t\t}, {});\n\t}\n\n\t/**\n\t * For better console.log(headers) and also to convert Headers into Node.js Request compatible format\n\t */\n\t[Symbol.for('nodejs.util.inspect.custom')]() {\n\t\treturn [...this.keys()].reduce((result, key) => {\n\t\t\tconst values = this.getAll(key);\n\t\t\t// Http.request() only supports string as Host header.\n\t\t\t// This hack makes specifying custom Host header possible.\n\t\t\tif (key === 'host') {\n\t\t\t\tresult[key] = values[0];\n\t\t\t} else {\n\t\t\t\tresult[key] = values.length > 1 ? values : values[0];\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}, {});\n\t}\n}\n\n/**\n * Re-shaping object for Web IDL tests\n * Only need to do it for overridden methods\n */\nObject.defineProperties(\n\tHeaders.prototype,\n\t['get', 'entries', 'forEach', 'values'].reduce((result, property) => {\n\t\tresult[property] = {enumerable: true};\n\t\treturn result;\n\t}, {})\n);\n\n/**\n * Create a Headers object from an http.IncomingMessage.rawHeaders, ignoring those that do\n * not conform to HTTP grammar productions.\n * @param {import('http').IncomingMessage['rawHeaders']} headers\n */\nexport function fromRawHeaders(headers = []) {\n\treturn new Headers(\n\t\theaders\n\t\t\t// Split into pairs\n\t\t\t.reduce((result, value, index, array) => {\n\t\t\t\tif (index % 2 === 0) {\n\t\t\t\t\tresult.push(array.slice(index, index + 2));\n\t\t\t\t}\n\n\t\t\t\treturn result;\n\t\t\t}, [])\n\t\t\t.filter(([name, value]) => {\n\t\t\t\ttry {\n\t\t\t\t\tvalidateHeaderName(name);\n\t\t\t\t\tvalidateHeaderValue(name, String(value));\n\t\t\t\t\treturn true;\n\t\t\t\t} catch {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t})\n\n\t);\n}\n","const redirectStatus = new Set([301, 302, 303, 307, 308]);\n\n/**\n * Redirect code matching\n *\n * @param {number} code - Status code\n * @return {boolean}\n */\nexport const isRedirect = code => {\n\treturn redirectStatus.has(code);\n};\n","/**\n * Response.js\n *\n * Response class provides content decoding\n */\n\nimport Headers from './headers.js';\nimport Body, {clone, extractContentType} from './body.js';\nimport {isRedirect} from './utils/is-redirect.js';\n\nconst INTERNALS = Symbol('Response internals');\n\n/**\n * Response class\n *\n * Ref: https://fetch.spec.whatwg.org/#response-class\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nexport default class Response extends Body {\n\tconstructor(body = null, options = {}) {\n\t\tsuper(body, options);\n\n\t\t// eslint-disable-next-line no-eq-null, eqeqeq, no-negated-condition\n\t\tconst status = options.status != null ? options.status : 200;\n\n\t\tconst headers = new Headers(options.headers);\n\n\t\tif (body !== null && !headers.has('Content-Type')) {\n\t\t\tconst contentType = extractContentType(body, this);\n\t\t\tif (contentType) {\n\t\t\t\theaders.append('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\tthis[INTERNALS] = {\n\t\t\ttype: 'default',\n\t\t\turl: options.url,\n\t\t\tstatus,\n\t\t\tstatusText: options.statusText || '',\n\t\t\theaders,\n\t\t\tcounter: options.counter,\n\t\t\thighWaterMark: options.highWaterMark\n\t\t};\n\t}\n\n\tget type() {\n\t\treturn this[INTERNALS].type;\n\t}\n\n\tget url() {\n\t\treturn this[INTERNALS].url || '';\n\t}\n\n\tget status() {\n\t\treturn this[INTERNALS].status;\n\t}\n\n\t/**\n\t * Convenience property representing if the request ended normally\n\t */\n\tget ok() {\n\t\treturn this[INTERNALS].status >= 200 && this[INTERNALS].status < 300;\n\t}\n\n\tget redirected() {\n\t\treturn this[INTERNALS].counter > 0;\n\t}\n\n\tget statusText() {\n\t\treturn this[INTERNALS].statusText;\n\t}\n\n\tget headers() {\n\t\treturn this[INTERNALS].headers;\n\t}\n\n\tget highWaterMark() {\n\t\treturn this[INTERNALS].highWaterMark;\n\t}\n\n\t/**\n\t * Clone this response\n\t *\n\t * @return  Response\n\t */\n\tclone() {\n\t\treturn new Response(clone(this, this.highWaterMark), {\n\t\t\ttype: this.type,\n\t\t\turl: this.url,\n\t\t\tstatus: this.status,\n\t\t\tstatusText: this.statusText,\n\t\t\theaders: this.headers,\n\t\t\tok: this.ok,\n\t\t\tredirected: this.redirected,\n\t\t\tsize: this.size,\n\t\t\thighWaterMark: this.highWaterMark\n\t\t});\n\t}\n\n\t/**\n\t * @param {string} url    The URL that the new response is to originate from.\n\t * @param {number} status An optional status code for the response (e.g., 302.)\n\t * @returns {Response}    A Response object.\n\t */\n\tstatic redirect(url, status = 302) {\n\t\tif (!isRedirect(status)) {\n\t\t\tthrow new RangeError('Failed to execute \"redirect\" on \"response\": Invalid status code');\n\t\t}\n\n\t\treturn new Response(null, {\n\t\t\theaders: {\n\t\t\t\tlocation: new URL(url).toString()\n\t\t\t},\n\t\t\tstatus\n\t\t});\n\t}\n\n\tstatic error() {\n\t\tconst response = new Response(null, {status: 0, statusText: ''});\n\t\tresponse[INTERNALS].type = 'error';\n\t\treturn response;\n\t}\n\n\tstatic json(data = undefined, init = {}) {\n\t\tconst body = JSON.stringify(data);\n\n\t\tif (body === undefined) {\n\t\t\tthrow new TypeError('data is not JSON serializable');\n\t\t}\n\n\t\tconst headers = new Headers(init && init.headers);\n\n\t\tif (!headers.has('content-type')) {\n\t\t\theaders.set('content-type', 'application/json');\n\t\t}\n\n\t\treturn new Response(body, {\n\t\t\t...init,\n\t\t\theaders\n\t\t});\n\t}\n\n\tget [Symbol.toStringTag]() {\n\t\treturn 'Response';\n\t}\n}\n\nObject.defineProperties(Response.prototype, {\n\ttype: {enumerable: true},\n\turl: {enumerable: true},\n\tstatus: {enumerable: true},\n\tok: {enumerable: true},\n\tredirected: {enumerable: true},\n\tstatusText: {enumerable: true},\n\theaders: {enumerable: true},\n\tclone: {enumerable: true}\n});\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"node:url\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"node:net\");","import {isIP} from 'node:net';\n\n/**\n * @external URL\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/URL|URL}\n */\n\n/**\n * @module utils/referrer\n * @private\n */\n\n/**\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#strip-url|Referrer Policy §8.4. Strip url for use as a referrer}\n * @param {string} URL\n * @param {boolean} [originOnly=false]\n */\nexport function stripURLForUseAsAReferrer(url, originOnly = false) {\n\t// 1. If url is null, return no referrer.\n\tif (url == null) { // eslint-disable-line no-eq-null, eqeqeq\n\t\treturn 'no-referrer';\n\t}\n\n\turl = new URL(url);\n\n\t// 2. If url's scheme is a local scheme, then return no referrer.\n\tif (/^(about|blob|data):$/.test(url.protocol)) {\n\t\treturn 'no-referrer';\n\t}\n\n\t// 3. Set url's username to the empty string.\n\turl.username = '';\n\n\t// 4. Set url's password to null.\n\t// Note: `null` appears to be a mistake as this actually results in the password being `\"null\"`.\n\turl.password = '';\n\n\t// 5. Set url's fragment to null.\n\t// Note: `null` appears to be a mistake as this actually results in the fragment being `\"#null\"`.\n\turl.hash = '';\n\n\t// 6. If the origin-only flag is true, then:\n\tif (originOnly) {\n\t\t// 6.1. Set url's path to null.\n\t\t// Note: `null` appears to be a mistake as this actually results in the path being `\"/null\"`.\n\t\turl.pathname = '';\n\n\t\t// 6.2. Set url's query to null.\n\t\t// Note: `null` appears to be a mistake as this actually results in the query being `\"?null\"`.\n\t\turl.search = '';\n\t}\n\n\t// 7. Return url.\n\treturn url;\n}\n\n/**\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#enumdef-referrerpolicy|enum ReferrerPolicy}\n */\nexport const ReferrerPolicy = new Set([\n\t'',\n\t'no-referrer',\n\t'no-referrer-when-downgrade',\n\t'same-origin',\n\t'origin',\n\t'strict-origin',\n\t'origin-when-cross-origin',\n\t'strict-origin-when-cross-origin',\n\t'unsafe-url'\n]);\n\n/**\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#default-referrer-policy|default referrer policy}\n */\nexport const DEFAULT_REFERRER_POLICY = 'strict-origin-when-cross-origin';\n\n/**\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#referrer-policies|Referrer Policy §3. Referrer Policies}\n * @param {string} referrerPolicy\n * @returns {string} referrerPolicy\n */\nexport function validateReferrerPolicy(referrerPolicy) {\n\tif (!ReferrerPolicy.has(referrerPolicy)) {\n\t\tthrow new TypeError(`Invalid referrerPolicy: ${referrerPolicy}`);\n\t}\n\n\treturn referrerPolicy;\n}\n\n/**\n * @see {@link https://w3c.github.io/webappsec-secure-contexts/#is-origin-trustworthy|Referrer Policy §3.2. Is origin potentially trustworthy?}\n * @param {external:URL} url\n * @returns `true`: \"Potentially Trustworthy\", `false`: \"Not Trustworthy\"\n */\nexport function isOriginPotentiallyTrustworthy(url) {\n\t// 1. If origin is an opaque origin, return \"Not Trustworthy\".\n\t// Not applicable\n\n\t// 2. Assert: origin is a tuple origin.\n\t// Not for implementations\n\n\t// 3. If origin's scheme is either \"https\" or \"wss\", return \"Potentially Trustworthy\".\n\tif (/^(http|ws)s:$/.test(url.protocol)) {\n\t\treturn true;\n\t}\n\n\t// 4. If origin's host component matches one of the CIDR notations 127.0.0.0/8 or ::1/128 [RFC4632], return \"Potentially Trustworthy\".\n\tconst hostIp = url.host.replace(/(^\\[)|(]$)/g, '');\n\tconst hostIPVersion = isIP(hostIp);\n\n\tif (hostIPVersion === 4 && /^127\\./.test(hostIp)) {\n\t\treturn true;\n\t}\n\n\tif (hostIPVersion === 6 && /^(((0+:){7})|(::(0+:){0,6}))0*1$/.test(hostIp)) {\n\t\treturn true;\n\t}\n\n\t// 5. If origin's host component is \"localhost\" or falls within \".localhost\", and the user agent conforms to the name resolution rules in [let-localhost-be-localhost], return \"Potentially Trustworthy\".\n\t// We are returning FALSE here because we cannot ensure conformance to\n\t// let-localhost-be-loalhost (https://tools.ietf.org/html/draft-west-let-localhost-be-localhost)\n\tif (url.host === 'localhost' || url.host.endsWith('.localhost')) {\n\t\treturn false;\n\t}\n\n\t// 6. If origin's scheme component is file, return \"Potentially Trustworthy\".\n\tif (url.protocol === 'file:') {\n\t\treturn true;\n\t}\n\n\t// 7. If origin's scheme component is one which the user agent considers to be authenticated, return \"Potentially Trustworthy\".\n\t// Not supported\n\n\t// 8. If origin has been configured as a trustworthy origin, return \"Potentially Trustworthy\".\n\t// Not supported\n\n\t// 9. Return \"Not Trustworthy\".\n\treturn false;\n}\n\n/**\n * @see {@link https://w3c.github.io/webappsec-secure-contexts/#is-url-trustworthy|Referrer Policy §3.3. Is url potentially trustworthy?}\n * @param {external:URL} url\n * @returns `true`: \"Potentially Trustworthy\", `false`: \"Not Trustworthy\"\n */\nexport function isUrlPotentiallyTrustworthy(url) {\n\t// 1. If url is \"about:blank\" or \"about:srcdoc\", return \"Potentially Trustworthy\".\n\tif (/^about:(blank|srcdoc)$/.test(url)) {\n\t\treturn true;\n\t}\n\n\t// 2. If url's scheme is \"data\", return \"Potentially Trustworthy\".\n\tif (url.protocol === 'data:') {\n\t\treturn true;\n\t}\n\n\t// Note: The origin of blob: and filesystem: URLs is the origin of the context in which they were\n\t// created. Therefore, blobs created in a trustworthy origin will themselves be potentially\n\t// trustworthy.\n\tif (/^(blob|filesystem):$/.test(url.protocol)) {\n\t\treturn true;\n\t}\n\n\t// 3. Return the result of executing §3.2 Is origin potentially trustworthy? on url's origin.\n\treturn isOriginPotentiallyTrustworthy(url);\n}\n\n/**\n * Modifies the referrerURL to enforce any extra security policy considerations.\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#determine-requests-referrer|Referrer Policy §8.3. Determine request's Referrer}, step 7\n * @callback module:utils/referrer~referrerURLCallback\n * @param {external:URL} referrerURL\n * @returns {external:URL} modified referrerURL\n */\n\n/**\n * Modifies the referrerOrigin to enforce any extra security policy considerations.\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#determine-requests-referrer|Referrer Policy §8.3. Determine request's Referrer}, step 7\n * @callback module:utils/referrer~referrerOriginCallback\n * @param {external:URL} referrerOrigin\n * @returns {external:URL} modified referrerOrigin\n */\n\n/**\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#determine-requests-referrer|Referrer Policy §8.3. Determine request's Referrer}\n * @param {Request} request\n * @param {object} o\n * @param {module:utils/referrer~referrerURLCallback} o.referrerURLCallback\n * @param {module:utils/referrer~referrerOriginCallback} o.referrerOriginCallback\n * @returns {external:URL} Request's referrer\n */\nexport function determineRequestsReferrer(request, {referrerURLCallback, referrerOriginCallback} = {}) {\n\t// There are 2 notes in the specification about invalid pre-conditions.  We return null, here, for\n\t// these cases:\n\t// > Note: If request's referrer is \"no-referrer\", Fetch will not call into this algorithm.\n\t// > Note: If request's referrer policy is the empty string, Fetch will not call into this\n\t// > algorithm.\n\tif (request.referrer === 'no-referrer' || request.referrerPolicy === '') {\n\t\treturn null;\n\t}\n\n\t// 1. Let policy be request's associated referrer policy.\n\tconst policy = request.referrerPolicy;\n\n\t// 2. Let environment be request's client.\n\t// not applicable to node.js\n\n\t// 3. Switch on request's referrer:\n\tif (request.referrer === 'about:client') {\n\t\treturn 'no-referrer';\n\t}\n\n\t// \"a URL\": Let referrerSource be request's referrer.\n\tconst referrerSource = request.referrer;\n\n\t// 4. Let request's referrerURL be the result of stripping referrerSource for use as a referrer.\n\tlet referrerURL = stripURLForUseAsAReferrer(referrerSource);\n\n\t// 5. Let referrerOrigin be the result of stripping referrerSource for use as a referrer, with the\n\t//    origin-only flag set to true.\n\tlet referrerOrigin = stripURLForUseAsAReferrer(referrerSource, true);\n\n\t// 6. If the result of serializing referrerURL is a string whose length is greater than 4096, set\n\t//    referrerURL to referrerOrigin.\n\tif (referrerURL.toString().length > 4096) {\n\t\treferrerURL = referrerOrigin;\n\t}\n\n\t// 7. The user agent MAY alter referrerURL or referrerOrigin at this point to enforce arbitrary\n\t//    policy considerations in the interests of minimizing data leakage. For example, the user\n\t//    agent could strip the URL down to an origin, modify its host, replace it with an empty\n\t//    string, etc.\n\tif (referrerURLCallback) {\n\t\treferrerURL = referrerURLCallback(referrerURL);\n\t}\n\n\tif (referrerOriginCallback) {\n\t\treferrerOrigin = referrerOriginCallback(referrerOrigin);\n\t}\n\n\t// 8.Execute the statements corresponding to the value of policy:\n\tconst currentURL = new URL(request.url);\n\n\tswitch (policy) {\n\t\tcase 'no-referrer':\n\t\t\treturn 'no-referrer';\n\n\t\tcase 'origin':\n\t\t\treturn referrerOrigin;\n\n\t\tcase 'unsafe-url':\n\t\t\treturn referrerURL;\n\n\t\tcase 'strict-origin':\n\t\t\t// 1. If referrerURL is a potentially trustworthy URL and request's current URL is not a\n\t\t\t//    potentially trustworthy URL, then return no referrer.\n\t\t\tif (isUrlPotentiallyTrustworthy(referrerURL) && !isUrlPotentiallyTrustworthy(currentURL)) {\n\t\t\t\treturn 'no-referrer';\n\t\t\t}\n\n\t\t\t// 2. Return referrerOrigin.\n\t\t\treturn referrerOrigin.toString();\n\n\t\tcase 'strict-origin-when-cross-origin':\n\t\t\t// 1. If the origin of referrerURL and the origin of request's current URL are the same, then\n\t\t\t//    return referrerURL.\n\t\t\tif (referrerURL.origin === currentURL.origin) {\n\t\t\t\treturn referrerURL;\n\t\t\t}\n\n\t\t\t// 2. If referrerURL is a potentially trustworthy URL and request's current URL is not a\n\t\t\t//    potentially trustworthy URL, then return no referrer.\n\t\t\tif (isUrlPotentiallyTrustworthy(referrerURL) && !isUrlPotentiallyTrustworthy(currentURL)) {\n\t\t\t\treturn 'no-referrer';\n\t\t\t}\n\n\t\t\t// 3. Return referrerOrigin.\n\t\t\treturn referrerOrigin;\n\n\t\tcase 'same-origin':\n\t\t\t// 1. If the origin of referrerURL and the origin of request's current URL are the same, then\n\t\t\t//    return referrerURL.\n\t\t\tif (referrerURL.origin === currentURL.origin) {\n\t\t\t\treturn referrerURL;\n\t\t\t}\n\n\t\t\t// 2. Return no referrer.\n\t\t\treturn 'no-referrer';\n\n\t\tcase 'origin-when-cross-origin':\n\t\t\t// 1. If the origin of referrerURL and the origin of request's current URL are the same, then\n\t\t\t//    return referrerURL.\n\t\t\tif (referrerURL.origin === currentURL.origin) {\n\t\t\t\treturn referrerURL;\n\t\t\t}\n\n\t\t\t// Return referrerOrigin.\n\t\t\treturn referrerOrigin;\n\n\t\tcase 'no-referrer-when-downgrade':\n\t\t\t// 1. If referrerURL is a potentially trustworthy URL and request's current URL is not a\n\t\t\t//    potentially trustworthy URL, then return no referrer.\n\t\t\tif (isUrlPotentiallyTrustworthy(referrerURL) && !isUrlPotentiallyTrustworthy(currentURL)) {\n\t\t\t\treturn 'no-referrer';\n\t\t\t}\n\n\t\t\t// 2. Return referrerURL.\n\t\t\treturn referrerURL;\n\n\t\tdefault:\n\t\t\tthrow new TypeError(`Invalid referrerPolicy: ${policy}`);\n\t}\n}\n\n/**\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#parse-referrer-policy-from-header|Referrer Policy §8.1. Parse a referrer policy from a Referrer-Policy header}\n * @param {Headers} headers Response headers\n * @returns {string} policy\n */\nexport function parseReferrerPolicyFromHeader(headers) {\n\t// 1. Let policy-tokens be the result of extracting header list values given `Referrer-Policy`\n\t//    and response’s header list.\n\tconst policyTokens = (headers.get('referrer-policy') || '').split(/[,\\s]+/);\n\n\t// 2. Let policy be the empty string.\n\tlet policy = '';\n\n\t// 3. For each token in policy-tokens, if token is a referrer policy and token is not the empty\n\t//    string, then set policy to token.\n\t// Note: This algorithm loops over multiple policy values to allow deployment of new policy\n\t// values with fallbacks for older user agents, as described in § 11.1 Unknown Policy Values.\n\tfor (const token of policyTokens) {\n\t\tif (token && ReferrerPolicy.has(token)) {\n\t\t\tpolicy = token;\n\t\t}\n\t}\n\n\t// 4. Return policy.\n\treturn policy;\n}\n","/**\n * Request.js\n *\n * Request class contains server only options\n *\n * All spec algorithm step numbers are based on https://fetch.spec.whatwg.org/commit-snapshots/ae716822cb3a61843226cd090eefc6589446c1d2/.\n */\n\nimport {format as formatUrl} from 'node:url';\nimport {deprecate} from 'node:util';\nimport Headers from './headers.js';\nimport Body, {clone, extractContentType, getTotalBytes} from './body.js';\nimport {isAbortSignal} from './utils/is.js';\nimport {getSearch} from './utils/get-search.js';\nimport {\n\tvalidateReferrerPolicy, determineRequestsReferrer, DEFAULT_REFERRER_POLICY\n} from './utils/referrer.js';\n\nconst INTERNALS = Symbol('Request internals');\n\n/**\n * Check if `obj` is an instance of Request.\n *\n * @param  {*} object\n * @return {boolean}\n */\nconst isRequest = object => {\n\treturn (\n\t\ttypeof object === 'object' &&\n\t\ttypeof object[INTERNALS] === 'object'\n\t);\n};\n\nconst doBadDataWarn = deprecate(() => {},\n\t'.data is not a valid RequestInit property, use .body instead',\n\t'https://github.com/node-fetch/node-fetch/issues/1000 (request)');\n\n/**\n * Request class\n *\n * Ref: https://fetch.spec.whatwg.org/#request-class\n *\n * @param   Mixed   input  Url or Request instance\n * @param   Object  init   Custom options\n * @return  Void\n */\nexport default class Request extends Body {\n\tconstructor(input, init = {}) {\n\t\tlet parsedURL;\n\n\t\t// Normalize input and force URL to be encoded as UTF-8 (https://github.com/node-fetch/node-fetch/issues/245)\n\t\tif (isRequest(input)) {\n\t\t\tparsedURL = new URL(input.url);\n\t\t} else {\n\t\t\tparsedURL = new URL(input);\n\t\t\tinput = {};\n\t\t}\n\n\t\tif (parsedURL.username !== '' || parsedURL.password !== '') {\n\t\t\tthrow new TypeError(`${parsedURL} is an url with embedded credentials.`);\n\t\t}\n\n\t\tlet method = init.method || input.method || 'GET';\n\t\tif (/^(delete|get|head|options|post|put)$/i.test(method)) {\n\t\t\tmethod = method.toUpperCase();\n\t\t}\n\n\t\tif (!isRequest(init) && 'data' in init) {\n\t\t\tdoBadDataWarn();\n\t\t}\n\n\t\t// eslint-disable-next-line no-eq-null, eqeqeq\n\t\tif ((init.body != null || (isRequest(input) && input.body !== null)) &&\n\t\t\t(method === 'GET' || method === 'HEAD')) {\n\t\t\tthrow new TypeError('Request with GET/HEAD method cannot have body');\n\t\t}\n\n\t\tconst inputBody = init.body ?\n\t\t\tinit.body :\n\t\t\t(isRequest(input) && input.body !== null ?\n\t\t\t\tclone(input) :\n\t\t\t\tnull);\n\n\t\tsuper(inputBody, {\n\t\t\tsize: init.size || input.size || 0\n\t\t});\n\n\t\tconst headers = new Headers(init.headers || input.headers || {});\n\n\t\tif (inputBody !== null && !headers.has('Content-Type')) {\n\t\t\tconst contentType = extractContentType(inputBody, this);\n\t\t\tif (contentType) {\n\t\t\t\theaders.set('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\tlet signal = isRequest(input) ?\n\t\t\tinput.signal :\n\t\t\tnull;\n\t\tif ('signal' in init) {\n\t\t\tsignal = init.signal;\n\t\t}\n\n\t\t// eslint-disable-next-line no-eq-null, eqeqeq\n\t\tif (signal != null && !isAbortSignal(signal)) {\n\t\t\tthrow new TypeError('Expected signal to be an instanceof AbortSignal or EventTarget');\n\t\t}\n\n\t\t// §5.4, Request constructor steps, step 15.1\n\t\t// eslint-disable-next-line no-eq-null, eqeqeq\n\t\tlet referrer = init.referrer == null ? input.referrer : init.referrer;\n\t\tif (referrer === '') {\n\t\t\t// §5.4, Request constructor steps, step 15.2\n\t\t\treferrer = 'no-referrer';\n\t\t} else if (referrer) {\n\t\t\t// §5.4, Request constructor steps, step 15.3.1, 15.3.2\n\t\t\tconst parsedReferrer = new URL(referrer);\n\t\t\t// §5.4, Request constructor steps, step 15.3.3, 15.3.4\n\t\t\treferrer = /^about:(\\/\\/)?client$/.test(parsedReferrer) ? 'client' : parsedReferrer;\n\t\t} else {\n\t\t\treferrer = undefined;\n\t\t}\n\n\t\tthis[INTERNALS] = {\n\t\t\tmethod,\n\t\t\tredirect: init.redirect || input.redirect || 'follow',\n\t\t\theaders,\n\t\t\tparsedURL,\n\t\t\tsignal,\n\t\t\treferrer\n\t\t};\n\n\t\t// Node-fetch-only options\n\t\tthis.follow = init.follow === undefined ? (input.follow === undefined ? 20 : input.follow) : init.follow;\n\t\tthis.compress = init.compress === undefined ? (input.compress === undefined ? true : input.compress) : init.compress;\n\t\tthis.counter = init.counter || input.counter || 0;\n\t\tthis.agent = init.agent || input.agent;\n\t\tthis.highWaterMark = init.highWaterMark || input.highWaterMark || 16384;\n\t\tthis.insecureHTTPParser = init.insecureHTTPParser || input.insecureHTTPParser || false;\n\n\t\t// §5.4, Request constructor steps, step 16.\n\t\t// Default is empty string per https://fetch.spec.whatwg.org/#concept-request-referrer-policy\n\t\tthis.referrerPolicy = init.referrerPolicy || input.referrerPolicy || '';\n\t}\n\n\t/** @returns {string} */\n\tget method() {\n\t\treturn this[INTERNALS].method;\n\t}\n\n\t/** @returns {string} */\n\tget url() {\n\t\treturn formatUrl(this[INTERNALS].parsedURL);\n\t}\n\n\t/** @returns {Headers} */\n\tget headers() {\n\t\treturn this[INTERNALS].headers;\n\t}\n\n\tget redirect() {\n\t\treturn this[INTERNALS].redirect;\n\t}\n\n\t/** @returns {AbortSignal} */\n\tget signal() {\n\t\treturn this[INTERNALS].signal;\n\t}\n\n\t// https://fetch.spec.whatwg.org/#dom-request-referrer\n\tget referrer() {\n\t\tif (this[INTERNALS].referrer === 'no-referrer') {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (this[INTERNALS].referrer === 'client') {\n\t\t\treturn 'about:client';\n\t\t}\n\n\t\tif (this[INTERNALS].referrer) {\n\t\t\treturn this[INTERNALS].referrer.toString();\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tget referrerPolicy() {\n\t\treturn this[INTERNALS].referrerPolicy;\n\t}\n\n\tset referrerPolicy(referrerPolicy) {\n\t\tthis[INTERNALS].referrerPolicy = validateReferrerPolicy(referrerPolicy);\n\t}\n\n\t/**\n\t * Clone this request\n\t *\n\t * @return  Request\n\t */\n\tclone() {\n\t\treturn new Request(this);\n\t}\n\n\tget [Symbol.toStringTag]() {\n\t\treturn 'Request';\n\t}\n}\n\nObject.defineProperties(Request.prototype, {\n\tmethod: {enumerable: true},\n\turl: {enumerable: true},\n\theaders: {enumerable: true},\n\tredirect: {enumerable: true},\n\tclone: {enumerable: true},\n\tsignal: {enumerable: true},\n\treferrer: {enumerable: true},\n\treferrerPolicy: {enumerable: true}\n});\n\n/**\n * Convert a Request to Node.js http request options.\n *\n * @param {Request} request - A Request instance\n * @return The options object to be passed to http.request\n */\nexport const getNodeRequestOptions = request => {\n\tconst {parsedURL} = request[INTERNALS];\n\tconst headers = new Headers(request[INTERNALS].headers);\n\n\t// Fetch step 1.3\n\tif (!headers.has('Accept')) {\n\t\theaders.set('Accept', '*/*');\n\t}\n\n\t// HTTP-network-or-cache fetch steps 2.4-2.7\n\tlet contentLengthValue = null;\n\tif (request.body === null && /^(post|put)$/i.test(request.method)) {\n\t\tcontentLengthValue = '0';\n\t}\n\n\tif (request.body !== null) {\n\t\tconst totalBytes = getTotalBytes(request);\n\t\t// Set Content-Length if totalBytes is a number (that is not NaN)\n\t\tif (typeof totalBytes === 'number' && !Number.isNaN(totalBytes)) {\n\t\t\tcontentLengthValue = String(totalBytes);\n\t\t}\n\t}\n\n\tif (contentLengthValue) {\n\t\theaders.set('Content-Length', contentLengthValue);\n\t}\n\n\t// 4.1. Main fetch, step 2.6\n\t// > If request's referrer policy is the empty string, then set request's referrer policy to the\n\t// > default referrer policy.\n\tif (request.referrerPolicy === '') {\n\t\trequest.referrerPolicy = DEFAULT_REFERRER_POLICY;\n\t}\n\n\t// 4.1. Main fetch, step 2.7\n\t// > If request's referrer is not \"no-referrer\", set request's referrer to the result of invoking\n\t// > determine request's referrer.\n\tif (request.referrer && request.referrer !== 'no-referrer') {\n\t\trequest[INTERNALS].referrer = determineRequestsReferrer(request);\n\t} else {\n\t\trequest[INTERNALS].referrer = 'no-referrer';\n\t}\n\n\t// 4.5. HTTP-network-or-cache fetch, step 6.9\n\t// > If httpRequest's referrer is a URL, then append `Referer`/httpRequest's referrer, serialized\n\t// >  and isomorphic encoded, to httpRequest's header list.\n\tif (request[INTERNALS].referrer instanceof URL) {\n\t\theaders.set('Referer', request.referrer);\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.11\n\tif (!headers.has('User-Agent')) {\n\t\theaders.set('User-Agent', 'node-fetch');\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.15\n\tif (request.compress && !headers.has('Accept-Encoding')) {\n\t\theaders.set('Accept-Encoding', 'gzip, deflate, br');\n\t}\n\n\tlet {agent} = request;\n\tif (typeof agent === 'function') {\n\t\tagent = agent(parsedURL);\n\t}\n\n\t// HTTP-network fetch step 4.2\n\t// chunked encoding is handled by Node.js\n\n\tconst search = getSearch(parsedURL);\n\n\t// Pass the full URL directly to request(), but overwrite the following\n\t// options:\n\tconst options = {\n\t\t// Overwrite search to retain trailing ? (issue #776)\n\t\tpath: parsedURL.pathname + search,\n\t\t// The following options are not expressed in the URL\n\t\tmethod: request.method,\n\t\theaders: headers[Symbol.for('nodejs.util.inspect.custom')](),\n\t\tinsecureHTTPParser: request.insecureHTTPParser,\n\t\tagent\n\t};\n\n\treturn {\n\t\t/** @type {URL} */\n\t\tparsedURL,\n\t\toptions\n\t};\n};\n","export const getSearch = parsedURL => {\n\tif (parsedURL.search) {\n\t\treturn parsedURL.search;\n\t}\n\n\tconst lastOffset = parsedURL.href.length - 1;\n\tconst hash = parsedURL.hash || (parsedURL.href[lastOffset] === '#' ? '#' : '');\n\treturn parsedURL.href[lastOffset - hash.length] === '?' ? '?' : '';\n};\n","import {FetchBaseError} from './base.js';\n\n/**\n * AbortError interface for cancelled requests\n */\nexport class AbortError extends FetchBaseError {\n\tconstructor(message, type = 'aborted') {\n\t\tsuper(message, type);\n\t}\n}\n","/**\n * Index.js\n *\n * a request API compatible with window.fetch\n *\n * All spec algorithm step numbers are based on https://fetch.spec.whatwg.org/commit-snapshots/ae716822cb3a61843226cd090eefc6589446c1d2/.\n */\n\nimport http from 'node:http';\nimport https from 'node:https';\nimport zlib from 'node:zlib';\nimport Stream, {PassThrough, pipeline as pump} from 'node:stream';\nimport {Buffer} from 'node:buffer';\n\nimport dataUriToBuffer from 'data-uri-to-buffer';\n\nimport {writeToStream, clone} from './body.js';\nimport Response from './response.js';\nimport Headers, {fromRawHeaders} from './headers.js';\nimport Request, {getNodeRequestOptions} from './request.js';\nimport {FetchError} from './errors/fetch-error.js';\nimport {AbortError} from './errors/abort-error.js';\nimport {isRedirect} from './utils/is-redirect.js';\nimport {FormData} from 'formdata-polyfill/esm.min.js';\nimport {isDomainOrSubdomain, isSameProtocol} from './utils/is.js';\nimport {parseReferrerPolicyFromHeader} from './utils/referrer.js';\nimport {\n\tBlob,\n\tFile,\n\tfileFromSync,\n\tfileFrom,\n\tblobFromSync,\n\tblobFrom\n} from 'fetch-blob/from.js';\n\nexport {FormData, Headers, Request, Response, FetchError, AbortError, isRedirect};\nexport {Blob, File, fileFromSync, fileFrom, blobFromSync, blobFrom};\n\nconst supportedSchemas = new Set(['data:', 'http:', 'https:']);\n\n/**\n * Fetch function\n *\n * @param   {string | URL | import('./request').default} url - Absolute url or Request instance\n * @param   {*} [options_] - Fetch options\n * @return  {Promise<import('./response').default>}\n */\nexport default async function fetch(url, options_) {\n\treturn new Promise((resolve, reject) => {\n\t\t// Build request object\n\t\tconst request = new Request(url, options_);\n\t\tconst {parsedURL, options} = getNodeRequestOptions(request);\n\t\tif (!supportedSchemas.has(parsedURL.protocol)) {\n\t\t\tthrow new TypeError(`node-fetch cannot load ${url}. URL scheme \"${parsedURL.protocol.replace(/:$/, '')}\" is not supported.`);\n\t\t}\n\n\t\tif (parsedURL.protocol === 'data:') {\n\t\t\tconst data = dataUriToBuffer(request.url);\n\t\t\tconst response = new Response(data, {headers: {'Content-Type': data.typeFull}});\n\t\t\tresolve(response);\n\t\t\treturn;\n\t\t}\n\n\t\t// Wrap http.request into fetch\n\t\tconst send = (parsedURL.protocol === 'https:' ? https : http).request;\n\t\tconst {signal} = request;\n\t\tlet response = null;\n\n\t\tconst abort = () => {\n\t\t\tconst error = new AbortError('The operation was aborted.');\n\t\t\treject(error);\n\t\t\tif (request.body && request.body instanceof Stream.Readable) {\n\t\t\t\trequest.body.destroy(error);\n\t\t\t}\n\n\t\t\tif (!response || !response.body) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tresponse.body.emit('error', error);\n\t\t};\n\n\t\tif (signal && signal.aborted) {\n\t\t\tabort();\n\t\t\treturn;\n\t\t}\n\n\t\tconst abortAndFinalize = () => {\n\t\t\tabort();\n\t\t\tfinalize();\n\t\t};\n\n\t\t// Send request\n\t\tconst request_ = send(parsedURL.toString(), options);\n\n\t\tif (signal) {\n\t\t\tsignal.addEventListener('abort', abortAndFinalize);\n\t\t}\n\n\t\tconst finalize = () => {\n\t\t\trequest_.abort();\n\t\t\tif (signal) {\n\t\t\t\tsignal.removeEventListener('abort', abortAndFinalize);\n\t\t\t}\n\t\t};\n\n\t\trequest_.on('error', error => {\n\t\t\treject(new FetchError(`request to ${request.url} failed, reason: ${error.message}`, 'system', error));\n\t\t\tfinalize();\n\t\t});\n\n\t\tfixResponseChunkedTransferBadEnding(request_, error => {\n\t\t\tif (response && response.body) {\n\t\t\t\tresponse.body.destroy(error);\n\t\t\t}\n\t\t});\n\n\t\t/* c8 ignore next 18 */\n\t\tif (process.version < 'v14') {\n\t\t\t// Before Node.js 14, pipeline() does not fully support async iterators and does not always\n\t\t\t// properly handle when the socket close/end events are out of order.\n\t\t\trequest_.on('socket', s => {\n\t\t\t\tlet endedWithEventsCount;\n\t\t\t\ts.prependListener('end', () => {\n\t\t\t\t\tendedWithEventsCount = s._eventsCount;\n\t\t\t\t});\n\t\t\t\ts.prependListener('close', hadError => {\n\t\t\t\t\t// if end happened before close but the socket didn't emit an error, do it now\n\t\t\t\t\tif (response && endedWithEventsCount < s._eventsCount && !hadError) {\n\t\t\t\t\t\tconst error = new Error('Premature close');\n\t\t\t\t\t\terror.code = 'ERR_STREAM_PREMATURE_CLOSE';\n\t\t\t\t\t\tresponse.body.emit('error', error);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\trequest_.on('response', response_ => {\n\t\t\trequest_.setTimeout(0);\n\t\t\tconst headers = fromRawHeaders(response_.rawHeaders);\n\n\t\t\t// HTTP fetch step 5\n\t\t\tif (isRedirect(response_.statusCode)) {\n\t\t\t\t// HTTP fetch step 5.2\n\t\t\t\tconst location = headers.get('Location');\n\n\t\t\t\t// HTTP fetch step 5.3\n\t\t\t\tlet locationURL = null;\n\t\t\t\ttry {\n\t\t\t\t\tlocationURL = location === null ? null : new URL(location, request.url);\n\t\t\t\t} catch {\n\t\t\t\t\t// error here can only be invalid URL in Location: header\n\t\t\t\t\t// do not throw when options.redirect == manual\n\t\t\t\t\t// let the user extract the errorneous redirect URL\n\t\t\t\t\tif (request.redirect !== 'manual') {\n\t\t\t\t\t\treject(new FetchError(`uri requested responds with an invalid redirect URL: ${location}`, 'invalid-redirect'));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// HTTP fetch step 5.5\n\t\t\t\tswitch (request.redirect) {\n\t\t\t\t\tcase 'error':\n\t\t\t\t\t\treject(new FetchError(`uri requested responds with a redirect, redirect mode is set to error: ${request.url}`, 'no-redirect'));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\tcase 'manual':\n\t\t\t\t\t\t// Nothing to do\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'follow': {\n\t\t\t\t\t\t// HTTP-redirect fetch step 2\n\t\t\t\t\t\tif (locationURL === null) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 5\n\t\t\t\t\t\tif (request.counter >= request.follow) {\n\t\t\t\t\t\t\treject(new FetchError(`maximum redirect reached at: ${request.url}`, 'max-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 6 (counter increment)\n\t\t\t\t\t\t// Create a new Request object.\n\t\t\t\t\t\tconst requestOptions = {\n\t\t\t\t\t\t\theaders: new Headers(request.headers),\n\t\t\t\t\t\t\tfollow: request.follow,\n\t\t\t\t\t\t\tcounter: request.counter + 1,\n\t\t\t\t\t\t\tagent: request.agent,\n\t\t\t\t\t\t\tcompress: request.compress,\n\t\t\t\t\t\t\tmethod: request.method,\n\t\t\t\t\t\t\tbody: clone(request),\n\t\t\t\t\t\t\tsignal: request.signal,\n\t\t\t\t\t\t\tsize: request.size,\n\t\t\t\t\t\t\treferrer: request.referrer,\n\t\t\t\t\t\t\treferrerPolicy: request.referrerPolicy\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\t// when forwarding sensitive headers like \"Authorization\",\n\t\t\t\t\t\t// \"WWW-Authenticate\", and \"Cookie\" to untrusted targets,\n\t\t\t\t\t\t// headers will be ignored when following a redirect to a domain\n\t\t\t\t\t\t// that is not a subdomain match or exact match of the initial domain.\n\t\t\t\t\t\t// For example, a redirect from \"foo.com\" to either \"foo.com\" or \"sub.foo.com\"\n\t\t\t\t\t\t// will forward the sensitive headers, but a redirect to \"bar.com\" will not.\n\t\t\t\t\t\t// headers will also be ignored when following a redirect to a domain using\n\t\t\t\t\t\t// a different protocol. For example, a redirect from \"https://foo.com\" to \"http://foo.com\"\n\t\t\t\t\t\t// will not forward the sensitive headers\n\t\t\t\t\t\tif (!isDomainOrSubdomain(request.url, locationURL) || !isSameProtocol(request.url, locationURL)) {\n\t\t\t\t\t\t\tfor (const name of ['authorization', 'www-authenticate', 'cookie', 'cookie2']) {\n\t\t\t\t\t\t\t\trequestOptions.headers.delete(name);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 9\n\t\t\t\t\t\tif (response_.statusCode !== 303 && request.body && options_.body instanceof Stream.Readable) {\n\t\t\t\t\t\t\treject(new FetchError('Cannot follow redirect with body being a readable stream', 'unsupported-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 11\n\t\t\t\t\t\tif (response_.statusCode === 303 || ((response_.statusCode === 301 || response_.statusCode === 302) && request.method === 'POST')) {\n\t\t\t\t\t\t\trequestOptions.method = 'GET';\n\t\t\t\t\t\t\trequestOptions.body = undefined;\n\t\t\t\t\t\t\trequestOptions.headers.delete('content-length');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 14\n\t\t\t\t\t\tconst responseReferrerPolicy = parseReferrerPolicyFromHeader(headers);\n\t\t\t\t\t\tif (responseReferrerPolicy) {\n\t\t\t\t\t\t\trequestOptions.referrerPolicy = responseReferrerPolicy;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 15\n\t\t\t\t\t\tresolve(fetch(new Request(locationURL, requestOptions)));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn reject(new TypeError(`Redirect option '${request.redirect}' is not a valid value of RequestRedirect`));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Prepare response\n\t\t\tif (signal) {\n\t\t\t\tresponse_.once('end', () => {\n\t\t\t\t\tsignal.removeEventListener('abort', abortAndFinalize);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tlet body = pump(response_, new PassThrough(), error => {\n\t\t\t\tif (error) {\n\t\t\t\t\treject(error);\n\t\t\t\t}\n\t\t\t});\n\t\t\t// see https://github.com/nodejs/node/pull/29376\n\t\t\t/* c8 ignore next 3 */\n\t\t\tif (process.version < 'v12.10') {\n\t\t\t\tresponse_.on('aborted', abortAndFinalize);\n\t\t\t}\n\n\t\t\tconst responseOptions = {\n\t\t\t\turl: request.url,\n\t\t\t\tstatus: response_.statusCode,\n\t\t\t\tstatusText: response_.statusMessage,\n\t\t\t\theaders,\n\t\t\t\tsize: request.size,\n\t\t\t\tcounter: request.counter,\n\t\t\t\thighWaterMark: request.highWaterMark\n\t\t\t};\n\n\t\t\t// HTTP-network fetch step 12.1.1.3\n\t\t\tconst codings = headers.get('Content-Encoding');\n\n\t\t\t// HTTP-network fetch step 12.1.1.4: handle content codings\n\n\t\t\t// in following scenarios we ignore compression support\n\t\t\t// 1. compression support is disabled\n\t\t\t// 2. HEAD request\n\t\t\t// 3. no Content-Encoding header\n\t\t\t// 4. no content response (204)\n\t\t\t// 5. content not modified response (304)\n\t\t\tif (!request.compress || request.method === 'HEAD' || codings === null || response_.statusCode === 204 || response_.statusCode === 304) {\n\t\t\t\tresponse = new Response(body, responseOptions);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// For Node v6+\n\t\t\t// Be less strict when decoding compressed responses, since sometimes\n\t\t\t// servers send slightly invalid responses that are still accepted\n\t\t\t// by common browsers.\n\t\t\t// Always using Z_SYNC_FLUSH is what cURL does.\n\t\t\tconst zlibOptions = {\n\t\t\t\tflush: zlib.Z_SYNC_FLUSH,\n\t\t\t\tfinishFlush: zlib.Z_SYNC_FLUSH\n\t\t\t};\n\n\t\t\t// For gzip\n\t\t\tif (codings === 'gzip' || codings === 'x-gzip') {\n\t\t\t\tbody = pump(body, zlib.createGunzip(zlibOptions), error => {\n\t\t\t\t\tif (error) {\n\t\t\t\t\t\treject(error);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tresponse = new Response(body, responseOptions);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// For deflate\n\t\t\tif (codings === 'deflate' || codings === 'x-deflate') {\n\t\t\t\t// Handle the infamous raw deflate response from old servers\n\t\t\t\t// a hack for old IIS and Apache servers\n\t\t\t\tconst raw = pump(response_, new PassThrough(), error => {\n\t\t\t\t\tif (error) {\n\t\t\t\t\t\treject(error);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\traw.once('data', chunk => {\n\t\t\t\t\t// See http://stackoverflow.com/questions/37519828\n\t\t\t\t\tif ((chunk[0] & 0x0F) === 0x08) {\n\t\t\t\t\t\tbody = pump(body, zlib.createInflate(), error => {\n\t\t\t\t\t\t\tif (error) {\n\t\t\t\t\t\t\t\treject(error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbody = pump(body, zlib.createInflateRaw(), error => {\n\t\t\t\t\t\t\tif (error) {\n\t\t\t\t\t\t\t\treject(error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tresponse = new Response(body, responseOptions);\n\t\t\t\t\tresolve(response);\n\t\t\t\t});\n\t\t\t\traw.once('end', () => {\n\t\t\t\t\t// Some old IIS servers return zero-length OK deflate responses, so\n\t\t\t\t\t// 'data' is never emitted. See https://github.com/node-fetch/node-fetch/pull/903\n\t\t\t\t\tif (!response) {\n\t\t\t\t\t\tresponse = new Response(body, responseOptions);\n\t\t\t\t\t\tresolve(response);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// For br\n\t\t\tif (codings === 'br') {\n\t\t\t\tbody = pump(body, zlib.createBrotliDecompress(), error => {\n\t\t\t\t\tif (error) {\n\t\t\t\t\t\treject(error);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tresponse = new Response(body, responseOptions);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Otherwise, use response as-is\n\t\t\tresponse = new Response(body, responseOptions);\n\t\t\tresolve(response);\n\t\t});\n\n\t\t// eslint-disable-next-line promise/prefer-await-to-then\n\t\twriteToStream(request_, request).catch(reject);\n\t});\n}\n\nfunction fixResponseChunkedTransferBadEnding(request, errorCallback) {\n\tconst LAST_CHUNK = Buffer.from('0\\r\\n\\r\\n');\n\n\tlet isChunkedTransfer = false;\n\tlet properLastChunkReceived = false;\n\tlet previousChunk;\n\n\trequest.on('response', response => {\n\t\tconst {headers} = response;\n\t\tisChunkedTransfer = headers['transfer-encoding'] === 'chunked' && !headers['content-length'];\n\t});\n\n\trequest.on('socket', socket => {\n\t\tconst onSocketClose = () => {\n\t\t\tif (isChunkedTransfer && !properLastChunkReceived) {\n\t\t\t\tconst error = new Error('Premature close');\n\t\t\t\terror.code = 'ERR_STREAM_PREMATURE_CLOSE';\n\t\t\t\terrorCallback(error);\n\t\t\t}\n\t\t};\n\n\t\tconst onData = buf => {\n\t\t\tproperLastChunkReceived = Buffer.compare(buf.slice(-5), LAST_CHUNK) === 0;\n\n\t\t\t// Sometimes final 0-length chunk and end of message code are in separate packets\n\t\t\tif (!properLastChunkReceived && previousChunk) {\n\t\t\t\tproperLastChunkReceived = (\n\t\t\t\t\tBuffer.compare(previousChunk.slice(-3), LAST_CHUNK.slice(0, 3)) === 0 &&\n\t\t\t\t\tBuffer.compare(buf.slice(-2), LAST_CHUNK.slice(3)) === 0\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tpreviousChunk = buf;\n\t\t};\n\n\t\tsocket.prependListener('close', onSocketClose);\n\t\tsocket.on('data', onData);\n\n\t\trequest.on('close', () => {\n\t\t\tsocket.removeListener('close', onSocketClose);\n\t\t\tsocket.removeListener('data', onData);\n\t\t});\n\t});\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"\" + chunkId + \".extension.js\";\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// The module 'vscode' contains the VS Code extensibility API\n// Import the module and reference it with the alias vscode in your code below\nimport * as vscode from 'vscode';\nimport { KaitenTaskViewProvider } from './providers/task.provider';\nimport { formatUrl } from './helpers/string';\nimport { KaitenTaskStore } from './store';\nimport { KaitenTimeLogViewProvider } from './providers/time-log.provider';\n\n// This method is called when your extension is activated\n// Your extension is activated the very first time the command is executed\nexport async function activate(context: vscode.ExtensionContext) {\n\tconst config = vscode.workspace.getConfiguration('kaiten');\n\tconst kaitenUrl: string = formatUrl(config.get('url')) || '';\n\tconst kaitenApiKey: string = config.get('apiKey') || '';\n\n\tif (!kaitenUrl || !kaitenApiKey) {\n\t\tvscode.window.showErrorMessage(`Необходимо заполнить настройки расширения Kaiten (Api Key + Url)`);\n\t\treturn;\n\t}\n\n\tconst store = new KaitenTaskStore(\n\t\tcontext,\n\t\tkaitenUrl,\n\t\tkaitenApiKey\n\t);\n\tawait store.init();\n\n\tcontext.subscriptions.push(\n\t\tvscode.window.registerWebviewViewProvider(KaitenTaskViewProvider.viewType, store.providerKaitenTask),\n\t\tvscode.window.registerWebviewViewProvider(KaitenTimeLogViewProvider.viewType, store.providerKaitenTimeLog),\n\t\tstore.viewCheckList\n\t);\n\n\tcontext.subscriptions.push(\n\t\tvscode.commands.registerCommand('kaiten.task.open', () => {\n\t\t\tvscode.env.openExternal(vscode.Uri.parse(store.taskUrl));\n\t\t}),\n\t\tvscode.commands.registerCommand('kaiten.task.refresh', async () => {\n\t\t\tawait store.updateTaskData();\n\t\t}),\n\t);\n\n}\n\n// This method is called when your extension is deactivated\nexport function deactivate() {}\n\n"],"names":["installedChunks","globalThis","DOMException","MessageChannel","port","port1","ab","ArrayBuffer","postMessage","err","constructor","name","module","exports","SUCCESS_STATUSES","baseUrl","apiKey","this","getTask","id","error","data","request","kaitenOptions","method","errorMessage","getRoles","getTimeLogs","taskId","addTimeLog","payload","body","JSON","stringify","updateTimeLog","logId","removeTimeLog","addCheckList","updateCheckList","checklistId","deleteCheckList","addCheckListItem","updateCheckListItem","itemId","deleteCheckListItem","url","options","Promise","resolve","reject","then","async","res","status","statusText","includes","json","message","catch","console","log","params","credentials","headers","Accept","Authorization","context","store","subscriptions","push","vscode","commands","registerCommand","list","editCheckList","item","editCheckListItem","input","window","showInputBox","title","placeHolder","response","withProgress","KaitenCheckListProvider","viewType","kaitenApi","showErrorMessage","taskData","checklists","providerKaitenCheckList","refresh","value","map","listItem","showQuickPick","canPickMany","filter","checklist","text","items","changeCheckListItem","checklist_id","providerKaitenTimeLog","clearForm","updateTimeLogs","KaitenTimeLogViewProvider","timeLogs","extension","extensions","getExtension","undefined","isActive","activate","getAPI","Input","label","inputHtml","className","base","branchName","result","exec","formatUrl","endsWith","slice","length","convertKaitenDescription","desc","replaceAll","a","b","c","i","charAt","Math","floor","possible","random","formatDate","date","regCheck","year","month","day","formatTime","time","minutes","hours","_onDidChangeTreeData","EventEmitter","onDidChangeTreeData","event","view","_view","onDidChangeCheckboxState","e","CheckList","checkListController","checked","checkboxState","TreeItemCheckboxState","Checked","fire","getTreeItem","element","getChildren","CheckListItem","getNodeList","showInformationMessage","checkListId","find","sort","sort_order","TreeItemCollapsibleState","Collapsed","TreeItem","collapsibleState","command","super","contextValue","checkedCount","tooltip","description","None","checked_by","full_name","state","Unchecked","KaitenTaskViewProvider","_extensionUri","resolveWebviewView","webviewView","_token","webview","enableScripts","localResourceRoots","html","_getHtmlForWebview","onDidReceiveMessage","type","activeTextEditor","insertSnippet","SnippetString","onDidChangeVisibility","visible","updateTaskData","taskInfoHtml","_generateTaskInfoHtml","scriptUri","asWebviewUri","Uri","joinPath","styleResetUri","styleVSCodeUri","styleMainUri","nonce","getNonce","cspSource","split","forEach","descHtml","join","$this","timeLogController","editTimeLog","updateTimeLogsData","timeLogListHtml","_generateTimeLogListHtml","updateRolesData","rolesOptionsHtml","_generateRoleOptionsHtml","timeLog","Number","styleInputUri","codiconsUri","forDate","timeSpent","roleSelect","userRoles","comment","Date","for_date","role","time_spent","author","_taskUrl","_taskId","_timeLogs","_userRoles","KaitenApiService","providerKaitenTask","extensionUri","viewCheckList","createTreeView","treeDataProvider","TimeLogController","CheckListController","init","gitExt","all","getBuiltInGitApi","initRoles","initBranch","_repo","callback","HEAD","taskUrl","generateKaitenLink","repositories","repo","onDidChange","onDidOpenRepository","logs","roles","viewId","promise","location","factory","SymbolPolyfill","Symbol","iterator","noop","globals","self","global","typeIsObject","x","rethrowAssertionErrorRejection","originalPromise","originalPromiseThen","prototype","originalPromiseResolve","bind","originalPromiseReject","newPromise","executor","promiseResolvedWith","promiseRejectedWith","reason","PerformPromiseThen","onFulfilled","onRejected","call","uponPromise","uponFulfillment","uponRejection","transformPromiseWith","fulfillmentHandler","rejectionHandler","setPromiseIsHandledToTrue","queueMicrotask","globalQueueMicrotask","resolvedPromise","fn","reflectCall","F","V","args","TypeError","Function","apply","promiseCall","SimpleQueue","_cursor","_size","_front","_elements","_next","_back","oldBack","newBack","QUEUE_MAX_ARRAY_SIZE","shift","oldFront","newFront","oldCursor","newCursor","elements","node","peek","front","cursor","ReadableStreamReaderGenericInitialize","reader","stream","_ownerReadableStream","_reader","_state","defaultReaderClosedPromiseInitialize","defaultReaderClosedPromiseResolve","defaultReaderClosedPromiseInitializeAsResolved","defaultReaderClosedPromiseInitializeAsRejected","_storedError","ReadableStreamReaderGenericCancel","ReadableStreamCancel","ReadableStreamReaderGenericRelease","defaultReaderClosedPromiseReject","defaultReaderClosedPromiseResetToRejected","readerLockException","_closedPromise","_closedPromise_resolve","_closedPromise_reject","AbortSteps","ErrorSteps","CancelSteps","PullSteps","NumberIsFinite","isFinite","MathTrunc","trunc","v","ceil","assertDictionary","obj","assertFunction","assertObject","isObject","assertRequiredArgument","position","assertRequiredField","field","convertUnrestrictedDouble","censorNegativeZero","convertUnsignedLongLongWithEnforceRange","upperBound","MAX_SAFE_INTEGER","integerPart","assertReadableStream","IsReadableStream","AcquireReadableStreamDefaultReader","ReadableStreamDefaultReader","ReadableStreamAddReadRequest","readRequest","_readRequests","ReadableStreamFulfillReadRequest","chunk","done","_closeSteps","_chunkSteps","ReadableStreamGetNumReadRequests","ReadableStreamHasDefaultReader","IsReadableStreamDefaultReader","IsReadableStreamLocked","closed","defaultReaderBrandCheckException","cancel","read","resolvePromise","rejectPromise","ReadableStreamDefaultReaderRead","_errorSteps","releaseLock","Object","hasOwnProperty","_disturbed","_readableStreamController","defineProperties","enumerable","toStringTag","defineProperty","configurable","AsyncIteratorPrototype","getPrototypeOf","ReadableStreamAsyncIteratorImpl","preventCancel","_ongoingPromise","_isFinished","_preventCancel","next","nextSteps","_nextSteps","returnSteps","_returnSteps","ReadableStreamAsyncIteratorPrototype","IsReadableStreamAsyncIterator","_asyncIteratorImpl","streamAsyncIteratorBrandCheckException","return","_a","setPrototypeOf","NumberIsNaN","isNaN","CreateArrayFromList","CopyDataBlockBytes","dest","destOffset","src","srcOffset","n","Uint8Array","set","ArrayBufferSlice","buffer","begin","end","CloneAsUint8Array","O","byteOffset","byteLength","DequeueValue","container","pair","_queue","_queueTotalSize","size","EnqueueValueWithSize","Infinity","RangeError","ResetQueue","ReadableStreamBYOBRequest","IsReadableStreamBYOBRequest","byobRequestBrandCheckException","respond","bytesWritten","_associatedReadableByteStreamController","ReadableByteStreamControllerRespond","respondWithNewView","isView","ReadableByteStreamControllerRespondWithNewView","ReadableByteStreamController","byobRequest","IsReadableByteStreamController","byteStreamControllerBrandCheckException","ReadableByteStreamControllerGetBYOBRequest","desiredSize","ReadableByteStreamControllerGetDesiredSize","close","_closeRequested","_controlledReadableByteStream","ReadableByteStreamControllerClose","enqueue","ReadableByteStreamControllerEnqueue","ReadableByteStreamControllerError","ReadableByteStreamControllerClearPendingPullIntos","_cancelAlgorithm","ReadableByteStreamControllerClearAlgorithms","entry","ReadableByteStreamControllerHandleQueueDrain","autoAllocateChunkSize","_autoAllocateChunkSize","bufferE","pullIntoDescriptor","bufferByteLength","bytesFilled","elementSize","viewConstructor","readerType","_pendingPullIntos","ReadableByteStreamControllerCallPullIfNeeded","controller","shouldPull","_started","ReadableStreamHasBYOBReader","ReadableStreamGetNumReadIntoRequests","ReadableByteStreamControllerShouldCallPull","_pulling","_pullAgain","_pullAlgorithm","ReadableByteStreamControllerInvalidateBYOBRequest","ReadableByteStreamControllerCommitPullIntoDescriptor","filledView","ReadableByteStreamControllerConvertPullIntoDescriptor","readIntoRequest","_readIntoRequests","ReadableStreamFulfillReadIntoRequest","ReadableByteStreamControllerEnqueueChunkToQueue","ReadableByteStreamControllerFillPullIntoDescriptorFromQueue","currentAlignedBytes","maxBytesToCopy","min","maxBytesFilled","maxAlignedBytes","totalBytesToCopyRemaining","ready","queue","headOfQueue","bytesToCopy","destStart","ReadableByteStreamControllerFillHeadPullIntoDescriptor","ReadableStreamClose","_byobRequest","ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue","ReadableByteStreamControllerShiftPendingPullInto","ReadableByteStreamControllerRespondInternal","firstDescriptor","ReadableByteStreamControllerRespondInClosedState","remainderSize","remainder","ReadableByteStreamControllerRespondInReadableState","transferredBuffer","firstPendingPullInto","ReadableStreamError","create","SetUpReadableStreamBYOBRequest","_strategyHWM","viewByteLength","SetUpReadableByteStreamController","startAlgorithm","pullAlgorithm","cancelAlgorithm","highWaterMark","r","AcquireReadableStreamBYOBReader","ReadableStreamBYOBReader","ReadableStreamAddReadIntoRequest","IsReadableStreamBYOBReader","byobReaderBrandCheckException","ReadableStreamBYOBReaderRead","DataView","BYTES_PER_ELEMENT","ctor","emptyView","ReadableByteStreamControllerPullInto","ExtractHighWaterMark","strategy","defaultHWM","ExtractSizeAlgorithm","convertQueuingStrategy","convertQueuingStrategySize","convertUnderlyingSinkAbortCallback","original","convertUnderlyingSinkCloseCallback","convertUnderlyingSinkStartCallback","convertUnderlyingSinkWriteCallback","assertWritableStream","IsWritableStream","supportsAbortController","AbortController","WritableStream","rawUnderlyingSink","rawStrategy","underlyingSink","abort","start","write","convertUnderlyingSink","InitializeWritableStream","sizeAlgorithm","WritableStreamDefaultController","writeAlgorithm","closeAlgorithm","abortAlgorithm","SetUpWritableStreamDefaultController","SetUpWritableStreamDefaultControllerFromUnderlyingSink","locked","streamBrandCheckException$2","IsWritableStreamLocked","WritableStreamAbort","WritableStreamCloseQueuedOrInFlight","WritableStreamClose","getWriter","AcquireWritableStreamDefaultWriter","WritableStreamDefaultWriter","_writer","_writableStreamController","_writeRequests","_inFlightWriteRequest","_closeRequest","_inFlightCloseRequest","_pendingAbortRequest","_backpressure","_abortReason","_abortController","_promise","wasAlreadyErroring","_resolve","_reject","_reason","_wasAlreadyErroring","WritableStreamStartErroring","closeRequest","writer","defaultWriterReadyPromiseResolve","closeSentinel","WritableStreamDefaultControllerAdvanceQueueIfNeeded","WritableStreamDealWithRejection","WritableStreamFinishErroring","WritableStreamDefaultWriterEnsureReadyPromiseRejected","WritableStreamHasOperationMarkedInFlight","storedError","writeRequest","WritableStreamRejectCloseAndClosedPromiseIfNeeded","abortRequest","defaultWriterClosedPromiseReject","WritableStreamUpdateBackpressure","backpressure","defaultWriterReadyPromiseInitialize","defaultWriterReadyPromiseReset","_ownerWritableStream","defaultWriterReadyPromiseInitializeAsResolved","defaultWriterClosedPromiseInitialize","defaultWriterReadyPromiseInitializeAsRejected","defaultWriterClosedPromiseResolve","defaultWriterClosedPromiseInitializeAsRejected","IsWritableStreamDefaultWriter","defaultWriterBrandCheckException","defaultWriterLockException","WritableStreamDefaultControllerGetDesiredSize","WritableStreamDefaultWriterGetDesiredSize","_readyPromise","WritableStreamDefaultWriterAbort","WritableStreamDefaultWriterClose","WritableStreamDefaultWriterRelease","WritableStreamDefaultWriterWrite","_readyPromiseState","defaultWriterReadyPromiseReject","defaultWriterReadyPromiseResetToRejected","releasedError","_closedPromiseState","defaultWriterClosedPromiseResetToRejected","WritableStreamDefaultWriterEnsureClosedPromiseRejected","chunkSize","_strategySizeAlgorithm","chunkSizeE","WritableStreamDefaultControllerErrorIfNeeded","WritableStreamDefaultControllerGetChunkSize","WritableStreamAddWriteRequest","enqueueE","_controlledWritableStream","WritableStreamDefaultControllerGetBackpressure","WritableStreamDefaultControllerWrite","abortReason","IsWritableStreamDefaultController","defaultControllerBrandCheckException$2","signal","WritableStreamDefaultControllerError","_abortAlgorithm","WritableStreamDefaultControllerClearAlgorithms","createAbortController","_writeAlgorithm","_closeAlgorithm","WritableStreamMarkCloseRequestInFlight","sinkClosePromise","WritableStreamFinishInFlightClose","WritableStreamFinishInFlightCloseWithError","WritableStreamDefaultControllerProcessClose","WritableStreamMarkFirstWriteRequestInFlight","WritableStreamFinishInFlightWrite","WritableStreamFinishInFlightWriteWithError","WritableStreamDefaultControllerProcessWrite","_readyPromise_resolve","_readyPromise_reject","NativeDOMException","DOMException$1","isDOMExceptionConstructor","Error","captureStackTrace","writable","createDOMExceptionPolyfill","ReadableStreamPipeTo","source","preventClose","preventAbort","shuttingDown","currentWrite","actions","shutdownWithAction","action","aborted","addEventListener","isOrBecomesErrored","shutdown","WritableStreamDefaultWriterCloseWithErrorPropagation","destClosed","waitForWritesToFinish","oldCurrentWrite","originalIsError","originalError","doTheRest","finalize","newError","isError","removeEventListener","resolveLoop","rejectLoop","resolveRead","rejectRead","ReadableStreamDefaultController","IsReadableStreamDefaultController","defaultControllerBrandCheckException$1","ReadableStreamDefaultControllerGetDesiredSize","ReadableStreamDefaultControllerCanCloseOrEnqueue","ReadableStreamDefaultControllerClose","ReadableStreamDefaultControllerEnqueue","ReadableStreamDefaultControllerError","ReadableStreamDefaultControllerClearAlgorithms","_controlledReadableStream","ReadableStreamDefaultControllerCallPullIfNeeded","ReadableStreamDefaultControllerShouldCallPull","SetUpReadableStreamDefaultController","convertUnderlyingSourceCancelCallback","convertUnderlyingSourcePullCallback","convertUnderlyingSourceStartCallback","convertReadableStreamType","convertReadableStreamReaderMode","mode","convertPipeOptions","isAbortSignal","assertAbortSignal","Boolean","ReadableStream","rawUnderlyingSource","underlyingSource","pull","convertUnderlyingDefaultOrByteSource","InitializeReadableStream","underlyingByteSource","SetUpReadableByteStreamControllerFromUnderlyingSource","SetUpReadableStreamDefaultControllerFromUnderlyingSource","streamBrandCheckException$1","getReader","rawOptions","convertReaderOptions","pipeThrough","rawTransform","transform","readable","convertReadableWritablePair","pipeTo","destination","tee","reason1","reason2","branch1","branch2","resolveCancelPromise","reading","readAgainForBranch1","readAgainForBranch2","canceled1","canceled2","cancelPromise","forwardReaderError","thisReader","pullWithDefaultReader","chunk1","chunk2","cloneE","pull1Algorithm","pull2Algorithm","pullWithBYOBReader","forBranch2","byobBranch","otherBranch","byobCanceled","clonedChunk","otherCanceled","CreateReadableByteStream","compositeReason","cancelResult","ReadableByteStreamTee","cloneForBranch2","readAgain","CreateReadableStream","ReadableStreamDefaultTee","values","impl","AcquireReadableStreamAsyncIterator","convertIteratorOptions","convertQueuingStrategyInit","asyncIterator","byteLengthSizeFunction","ByteLengthQueuingStrategy","_byteLengthQueuingStrategyHighWaterMark","IsByteLengthQueuingStrategy","byteLengthBrandCheckException","countSizeFunction","CountQueuingStrategy","_countQueuingStrategyHighWaterMark","IsCountQueuingStrategy","countBrandCheckException","convertTransformerFlushCallback","convertTransformerStartCallback","convertTransformerTransformCallback","TransformStream","rawTransformer","rawWritableStrategy","rawReadableStrategy","writableStrategy","readableStrategy","transformer","flush","readableType","writableType","convertTransformer","readableHighWaterMark","readableSizeAlgorithm","writableHighWaterMark","writableSizeAlgorithm","startPromise_resolve","startPromise","_writable","CreateWritableStream","_transformStreamController","_backpressureChangePromise","TransformStreamDefaultControllerPerformTransform","TransformStreamDefaultSinkWriteAlgorithm","_readable","flushPromise","_flushAlgorithm","TransformStreamDefaultControllerClearAlgorithms","TransformStreamError","TransformStreamDefaultSinkCloseAlgorithm","TransformStreamDefaultSinkAbortAlgorithm","TransformStreamSetBackpressure","TransformStreamDefaultSourcePullAlgorithm","TransformStreamErrorWritableAndUnblockWrite","_backpressureChangePromise_resolve","InitializeTransformStream","TransformStreamDefaultController","transformAlgorithm","TransformStreamDefaultControllerEnqueue","transformResultE","flushAlgorithm","_controlledTransformStream","_transformAlgorithm","SetUpTransformStreamDefaultController","SetUpTransformStreamDefaultControllerFromTransformer","IsTransformStream","streamBrandCheckException","IsTransformStreamDefaultController","defaultControllerBrandCheckException","terminate","TransformStreamDefaultControllerTerminate","readableController","ReadableStreamDefaultControllerHasBackpressure","require","process","emitWarning","assign","Blob","blob","ctrl","arrayBuffer","fileBits","fileName","arguments","lastModified","now","String","hasInstance","object","test","stat","blobFromSync","path","fromBlob","statSync","blobFrom","fileFrom","fromFile","fileFromSync","BlobDataItem","mtimeMs","basename","createReadStream","toIterator","parts","clone","part","_Blob","blobParts","encoder","TextEncoder","encode","endings","decoder","TextDecoder","str","decode","offset","it","relativeStart","max","relativeEnd","span","added","subarray","toLowerCase","t","h","m","f","replace","FormData","entries","o","some","append","get","l","getAll","has","d","keys","formDataToBlob","B","padStart","p","uri","firstComma","indexOf","meta","substring","charset","base64","typeFull","encoding","unescape","Buffer","from","FetchBaseError","FetchError","systemError","code","errno","erroredSysCall","syscall","NAME","isURLSearchParameters","delete","isBlob","isDomainOrSubdomain","orig","URL","hostname","isSameProtocol","protocol","pipeline","promisify","INTERNALS","Body","boundary","toString","isBuffer","types","isAnyArrayBuffer","disturbed","on","error_","bodyUsed","consumeBody","formData","ct","startsWith","parameters","URLSearchParams","toFormData","buf","parse","alloc","accum","accumBytes","destroy","readableEnded","_readableState","ended","every","concat","deprecate","instance","p1","p2","getBoundary","PassThrough","pipe","getNonSpecFormDataBoundary","extractContentType","writeToStream","validateHeaderName","validateHeaderValue","Headers","raw","isBoxedPrimitive","Proxy","target","receiver","Set","Reflect","thisArg","reduce","key","for","property","redirectStatus","isRedirect","Response","contentType","counter","ok","redirected","redirect","stripURLForUseAsAReferrer","originOnly","username","password","hash","pathname","search","ReferrerPolicy","isUrlPotentiallyTrustworthy","hostIp","host","hostIPVersion","isIP","isOriginPotentiallyTrustworthy","isRequest","doBadDataWarn","Request","parsedURL","toUpperCase","inputBody","referrer","parsedReferrer","follow","compress","agent","insecureHTTPParser","referrerPolicy","format","validateReferrerPolicy","getNodeRequestOptions","contentLengthValue","totalBytes","getLengthSync","hasKnownLength","getTotalBytes","referrerURLCallback","referrerOriginCallback","policy","referrerSource","referrerURL","referrerOrigin","currentURL","origin","determineRequestsReferrer","lastOffset","href","getSearch","AbortError","supportedSchemas","fetch","options_","send","emit","abortAndFinalize","request_","errorCallback","LAST_CHUNK","previousChunk","isChunkedTransfer","properLastChunkReceived","socket","onSocketClose","onData","compare","prependListener","removeListener","fixResponseChunkedTransferBadEnding","version","s","endedWithEventsCount","_eventsCount","hadError","response_","setTimeout","index","array","fromRawHeaders","rawHeaders","statusCode","locationURL","requestOptions","responseReferrerPolicy","policyTokens","token","parseReferrerPolicyFromHeader","once","responseOptions","statusMessage","codings","zlibOptions","finishFlush","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","definition","chunkId","promises","u","prop","moreModules","modules","chunkIds","ids","runtime","installChunk","config","workspace","getConfiguration","kaitenUrl","kaitenApiKey","KaitenTaskStore","registerWebviewViewProvider","env","openExternal"],"sourceRoot":""}